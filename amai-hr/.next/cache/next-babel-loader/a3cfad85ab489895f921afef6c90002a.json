{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _templateObject,\n    _templateObject2,\n    _templateObject3,\n    _jsxFileName = \"C:\\\\Users\\\\msdtt\\\\OneDrive\\\\Documents\\\\amai_hr_next_js_hasura\\\\amai-hr\\\\pages\\\\RegisterCandidatAccount\\\\[id].js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect } from \"react\";\nimport useSWR from \"swr\";\nimport { useRouter } from \"next/router\";\nimport { useForm } from \"react-hook-form\";\nimport { gql, hasuraUserClient } from \"../../lib/hasura-user-client\";\nimport { useAuthState, useAuthDispatch } from \"../../context/auth\";\nimport { useState } from \"react\";\nvar created_at = new Date().toISOString();\nvar GetUserByEmail = gql(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  query GetUserByEmail($email: String!) {\\n    User(where: { email: { _eq: $email } }) {\\n      id\\n    }\\n  }\\n\"])));\nvar GetCandidateById = gql(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n  query GetCategoryById($id: Int!) {\\n    Candidate_by_pk(id: $id) {\\n      id\\n      Email\\n      Last_Name\\n      Name\\n      domain\\n      phone_number\\n      Status\\n    }\\n  }\\n\"])));\nexport var __N_SSG = true;\nexport default function RegisterPage(_ref) {\n  _s();\n\n  var initialData = _ref.initialData;\n\n  var _useRouter = useRouter(),\n      query = _useRouter.query;\n\n  var router = useRouter();\n  var hasura = hasuraUserClient();\n  var id = query.id;\n\n  var _useAuthState = useAuthState(),\n      isAuthenticated = _useAuthState.isAuthenticated;\n\n  var _useAuthDispatch = useAuthDispatch(),\n      createUser = _useAuthDispatch.register;\n\n  var _useState = useState(null),\n      File = _useState[0],\n      setFile = _useState[1];\n\n  var _useState2 = useState(null),\n      createObjectURL = _useState2[0],\n      setCreateObjectURL = _useState2[1];\n\n  var _useForm = useForm({\n    defaultValues: {\n      save_last_seen: true\n    }\n  }),\n      handleSubmit = _useForm.handleSubmit,\n      register = _useForm.register,\n      errors = _useForm.errors,\n      isSubmitting = _useForm.formState.isSubmitting,\n      setError = _useForm.setError;\n\n  useEffect(function () {\n    if (!isAuthenticated) router.push(\"/\");\n  }, [isAuthenticated]);\n\n  var uploadFileToClient = function uploadFileToClient(event) {\n    if (event.target.files && event.target.files[0]) {\n      var i = event.target.files[0];\n      setFile(i);\n      setCreateObjectURL(URL.createObjectURL(i));\n    }\n  };\n\n  var _useSWR = useSWR([GetCandidateById, id], function (query, id) {\n    return hasura.request(query, {\n      id: id\n    });\n  }, {\n    initialData: initialData,\n    revalidateOnMount: true\n  }),\n      data = _useSWR.data,\n      mutate = _useSWR.mutate; // if (isAuthenticated) return null;\n\n\n  var onSubmit = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {\n      var name, last_name, email, domain, phone_number, password, confirmpassword, SetStatus, _yield$hasura$request, _yield$hasura$request2, foundUser, message;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              name = _ref2.name, last_name = _ref2.last_name, email = _ref2.email, domain = _ref2.domain, phone_number = _ref2.phone_number, password = _ref2.password, confirmpassword = _ref2.confirmpassword;\n              SetStatus = gql(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n      mutation MyMutation($id: Int!) {\\n        update_Candidate_by_pk(pk_columns: { id: $id }, _set: { Status: 1 }) {\\n          id\\n          Status\\n        }\\n      }\\n    \"])));\n              _context.next = 4;\n              return hasura.request(GetUserByEmail, {\n                email: email\n              });\n\n            case 4:\n              _yield$hasura$request = _context.sent;\n              _yield$hasura$request2 = _slicedToArray(_yield$hasura$request.User, 1);\n              foundUser = _yield$hasura$request2[0];\n\n              if (!foundUser) {\n                _context.next = 11;\n                break;\n              }\n\n              alert(\"Email already exists , please try another\");\n              _context.next = 28;\n              break;\n\n            case 11:\n              if (!(password != confirmpassword)) {\n                _context.next = 15;\n                break;\n              }\n\n              alert(\"Passwords don't match\");\n              _context.next = 28;\n              break;\n\n            case 15:\n              _context.prev = 15;\n              _context.next = 18;\n              return hasura.request(SetStatus, {\n                id: id\n              });\n\n            case 18:\n              mutate();\n              _context.next = 21;\n              return createUser({\n                name: name,\n                last_name: last_name,\n                email: email,\n                domain: domain,\n                phone_number: phone_number,\n                password: password,\n                created_at: created_at,\n                File: File.name\n              });\n\n            case 21:\n              // await fetch(\"/api/AcceptEmail\", {\n              //   method: \"POST\",\n              //   headers: { \"content-type\": \"application/json\" },\n              //   body: JSON.stringify(data),\n              // });\n              router.push(\"/CandidatList\");\n              _context.next = 28;\n              break;\n\n            case 24:\n              _context.prev = 24;\n              _context.t0 = _context[\"catch\"](15);\n              message = _context.t0.message;\n              setError(\"email\", {\n                type: \"manual\",\n                message: message\n              });\n\n            case 28:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[15, 24]]);\n    }));\n\n    return function onSubmit(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(\"div\", {\n    className: \"page-content-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"page-content\",\n    style: {\n      minHeight: 1500\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }\n  }, __jsx(\"form\", {\n    \"class\": \"register-form\",\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    \"class\": \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 11\n    }\n  }, \" \", __jsx(\"h3\", {\n    \"class\": \"font-green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }\n  }, \"Register Candidate\"), \" \", __jsx(\"div\", {\n    \"class\": \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }\n  }, \" \", __jsx(\"label\", {\n    className: \"control-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 15\n    }\n  }, \"First name\"), __jsx(\"input\", {\n    defaultValue: data.Candidate_by_pk.Name,\n    \"class\": \"form-control form-control-solid placeholder-no-fix\",\n    name: \"name\",\n    id: \"name\",\n    ref: register,\n    placeholder: \"first name\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 15\n    }\n  })), __jsx(\"div\", {\n    \"class\": \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }\n  }, \" \", __jsx(\"label\", {\n    className: \"control-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 15\n    }\n  }, \"Last name\"), __jsx(\"input\", {\n    defaultValue: data.Candidate_by_pk.Last_Name,\n    \"class\": \"form-control form-control-solid placeholder-no-fix\",\n    name: \"last_name\",\n    id: \"last_name\",\n    ref: register,\n    placeholder: \"last name\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 15\n    }\n  })), __jsx(\"div\", {\n    \"class\": \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    className: \"control-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 15\n    }\n  }, \"Email\"), __jsx(\"input\", {\n    defaultValue: data.Candidate_by_pk.Email,\n    \"class\": \"form-control form-control-solid placeholder-no-fix\",\n    type: \"email\",\n    name: \"email\",\n    id: \"email\",\n    ref: register({\n      required: \"You must provide a email.\",\n      pattern: {\n        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n        message: \"You must provide a valid email\"\n      }\n    }),\n    placeholder: \"Your email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 15\n    }\n  }), errors.email && __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 32\n    }\n  }, errors.email.message)), \" \", __jsx(\"div\", {\n    \"class\": \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 13\n    }\n  }, \" \", __jsx(\"label\", {\n    className: \"control-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 15\n    }\n  }, \"phone_number\"), __jsx(\"input\", {\n    defaultValue: data.Candidate_by_pk.phone_number,\n    \"class\": \"form-control form-control-solid placeholder-no-fix\",\n    name: \"phone_number\",\n    id: \"phone_number\",\n    ref: register,\n    placeholder: \"phone number\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 15\n    }\n  })), \" \", __jsx(\"div\", {\n    \"class\": \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 13\n    }\n  }, \" \", __jsx(\"label\", {\n    className: \"control-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 15\n    }\n  }, \"Domain\"), __jsx(\"input\", {\n    defaultValue: data.Candidate_by_pk.domain,\n    \"class\": \"form-control form-control-solid placeholder-no-fix\",\n    name: \"domain\",\n    id: \"domain\",\n    ref: register,\n    placeholder: \"Domain\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 15\n    }\n  })), \" \", __jsx(\"div\", {\n    \"class\": \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    \"class\": \"control-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 15\n    }\n  }, \"File\"), \" \", __jsx(\"input\", {\n    type: \"file\",\n    name: \"File\",\n    onChange: uploadFileToClient,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 15\n    }\n  })), __jsx(\"div\", {\n    \"class\": \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 13\n    }\n  }, \" \", __jsx(\"label\", {\n    className: \"control-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 15\n    }\n  }, \" Password\"), __jsx(\"input\", {\n    \"class\": \"form-control form-control-solid placeholder-no-fix\",\n    type: \"password\",\n    name: \"password\",\n    id: \"password\",\n    ref: register({\n      required: \"You must provide a password.\",\n      minLength: {\n        message: \"Your password must be at least 6 characters\",\n        value: 6\n      }\n    }),\n    placeholder: \"Choose a password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 15\n    }\n  }), errors.password && __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 35\n    }\n  }, errors.password.message)), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    className: \"control-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 15\n    }\n  }, \"Confirm Password\"), __jsx(\"input\", {\n    name: \"confirmpassword\",\n    type: \"password\",\n    \"class\": \"form-control form-control-solid placeholder-no-fix\",\n    ref: register({\n      required: \"You must confirm  the password.\",\n      minLength: {\n        message: \"Your password must be at least 6 characters\",\n        value: 6\n      }\n    }),\n    placeholder: \"Confirm password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 15\n    }\n  }), \" \", errors.confirmpassword && __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 17\n    }\n  }, errors.confirmpassword.message)), __jsx(\"div\", {\n    \"class\": \"create-account\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 13\n    }\n  }, __jsx(\"button\", {\n    type: \"submit\",\n    disabled: isSubmitting,\n    \"class\": \"btn green uppercase\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 15\n    }\n  }, \"Create account\")), \" \"))));\n}\n\n_s(RegisterPage, \"nBZGTsr1KiG/jAMKG0vaE8iIVTs=\", false, function () {\n  return [useRouter, useRouter, useAuthState, useAuthDispatch, useForm, useSWR];\n});\n\n_c = RegisterPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"sources":["C:/Users/msdtt/OneDrive/Documents/amai_hr_next_js_hasura/amai-hr/pages/RegisterCandidatAccount/[id].js"],"names":["useEffect","useSWR","useRouter","useForm","gql","hasuraUserClient","useAuthState","useAuthDispatch","useState","created_at","Date","toISOString","GetUserByEmail","GetCandidateById","RegisterPage","initialData","query","router","hasura","id","isAuthenticated","createUser","register","File","setFile","createObjectURL","setCreateObjectURL","defaultValues","save_last_seen","handleSubmit","errors","isSubmitting","formState","setError","push","uploadFileToClient","event","target","files","i","URL","request","revalidateOnMount","data","mutate","onSubmit","name","last_name","email","domain","phone_number","password","confirmpassword","SetStatus","User","foundUser","alert","message","type","minHeight","Candidate_by_pk","Name","Last_Name","Email","required","pattern","value","minLength"],"mappings":"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","sourcesContent":["import { useEffect } from \"react\";\r\nimport useSWR from \"swr\";\r\n\r\nimport { useRouter } from \"next/router\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { gql, hasuraUserClient } from \"../../lib/hasura-user-client\";\r\nimport { useAuthState, useAuthDispatch } from \"../../context/auth\";\r\nimport { useState } from \"react\";\r\n\r\nconst created_at = new Date().toISOString();\r\nconst GetUserByEmail = gql`\r\n  query GetUserByEmail($email: String!) {\r\n    User(where: { email: { _eq: $email } }) {\r\n      id\r\n    }\r\n  }\r\n`;\r\nconst GetCandidateIds = gql`\r\n  {\r\n    Candidate {\r\n      id\r\n      Email\r\n      Last_Name\r\n      Name\r\n      domain\r\n      phone_number\r\n      Status\r\n    }\r\n  }\r\n`;\r\n\r\nconst GetCandidateById = gql`\r\n  query GetCategoryById($id: Int!) {\r\n    Candidate_by_pk(id: $id) {\r\n      id\r\n      Email\r\n      Last_Name\r\n      Name\r\n      domain\r\n      phone_number\r\n      Status\r\n    }\r\n  }\r\n`;\r\n\r\nexport const getStaticPaths = async () => {\r\n  const hasura = hasuraUserClient();\r\n\r\n  const { Candidate } = await hasura.request(GetCandidateIds);\r\n\r\n  return {\r\n    paths: Candidate.map(({ id }) => ({\r\n      params: {\r\n        id: id.toString(),\r\n      },\r\n    })),\r\n    fallback: false,\r\n  };\r\n};\r\n\r\nexport const getStaticProps = async ({ params }) => {\r\n  const hasura = hasuraUserClient();\r\n  const { id } = params;\r\n  console.log(params);\r\n  console.log(id);\r\n  const initialData = await hasura.request(GetCandidateById, { id });\r\n\r\n  return {\r\n    props: {\r\n      initialData,\r\n    },\r\n    revalidate: 1,\r\n  };\r\n};\r\nexport default function RegisterPage({ initialData }) {\r\n  const { query } = useRouter();\r\n  const router = useRouter();\r\n  const hasura = hasuraUserClient();\r\n  const { id } = query;\r\n  const { isAuthenticated } = useAuthState();\r\n  const { register: createUser } = useAuthDispatch();\r\n  const [File, setFile] = useState(null);\r\n  const [createObjectURL, setCreateObjectURL] = useState(null);\r\n  const {\r\n    handleSubmit,\r\n    register,\r\n    errors,\r\n    formState: { isSubmitting },\r\n    setError,\r\n  } = useForm({ defaultValues: { save_last_seen: true } });\r\n\r\n  useEffect(() => {\r\n    if (!isAuthenticated) router.push(\"/\");\r\n  }, [isAuthenticated]);\r\n  const uploadFileToClient = (event) => {\r\n    if (event.target.files && event.target.files[0]) {\r\n      const i = event.target.files[0];\r\n      setFile(i);\r\n      setCreateObjectURL(URL.createObjectURL(i));\r\n    }\r\n  };\r\n\r\n  const { data, mutate } = useSWR(\r\n    [GetCandidateById, id],\r\n    (query, id) => hasura.request(query, { id }),\r\n    {\r\n      initialData,\r\n      revalidateOnMount: true,\r\n    }\r\n  );\r\n  // if (isAuthenticated) return null;\r\n  const onSubmit = async ({\r\n    name,\r\n    last_name,\r\n    email,\r\n    domain,\r\n    phone_number,\r\n    password,\r\n    confirmpassword,\r\n  }) => {\r\n    const SetStatus = gql`\r\n      mutation MyMutation($id: Int!) {\r\n        update_Candidate_by_pk(pk_columns: { id: $id }, _set: { Status: 1 }) {\r\n          id\r\n          Status\r\n        }\r\n      }\r\n    `;\r\n    const {\r\n      User: [foundUser],\r\n    } = await hasura.request(GetUserByEmail, {\r\n      email,\r\n    });\r\n    if (foundUser) {\r\n      alert(\"Email already exists , please try another\");\r\n    } else if (password != confirmpassword) {\r\n      alert(\"Passwords don't match\");\r\n    } else {\r\n      try {\r\n        await hasura.request(SetStatus, { id: id });\r\n        mutate();\r\n        await createUser({\r\n          name,\r\n          last_name,\r\n          email,\r\n          domain,\r\n          phone_number,\r\n          password,\r\n          created_at,\r\n          File: File.name,\r\n        });\r\n\r\n        // await fetch(\"/api/AcceptEmail\", {\r\n        //   method: \"POST\",\r\n        //   headers: { \"content-type\": \"application/json\" },\r\n        //   body: JSON.stringify(data),\r\n        // });\r\n        router.push(\"/CandidatList\");\r\n      } catch ({ message }) {\r\n        setError(\"email\", {\r\n          type: \"manual\",\r\n          message,\r\n        });\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"page-content-wrapper\">\r\n      <div className=\"page-content\" style={{ minHeight: 1500 }}>\r\n        <form class=\"register-form\" onSubmit={handleSubmit(onSubmit)}>\r\n          <div class=\"content\">\r\n            {\" \"}\r\n            <h3 class=\"font-green\">Register Candidate</h3>{\" \"}\r\n            <div class=\"form-group\">\r\n              {\" \"}\r\n              <label className=\"control-label\">First name</label>\r\n              <input\r\n                defaultValue={data.Candidate_by_pk.Name}\r\n                class=\"form-control form-control-solid placeholder-no-fix\"\r\n                name=\"name\"\r\n                id=\"name\"\r\n                ref={register}\r\n                placeholder=\"first name\"\r\n                required\r\n              />\r\n            </div>\r\n            <div class=\"form-group\">\r\n              {\" \"}\r\n              <label className=\"control-label\">Last name</label>\r\n              <input\r\n                defaultValue={data.Candidate_by_pk.Last_Name}\r\n                class=\"form-control form-control-solid placeholder-no-fix\"\r\n                name=\"last_name\"\r\n                id=\"last_name\"\r\n                ref={register}\r\n                placeholder=\"last name\"\r\n                required\r\n              />\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label className=\"control-label\">Email</label>\r\n              <input\r\n                defaultValue={data.Candidate_by_pk.Email}\r\n                class=\"form-control form-control-solid placeholder-no-fix\"\r\n                type=\"email\"\r\n                name=\"email\"\r\n                id=\"email\"\r\n                ref={register({\r\n                  required: \"You must provide a email.\",\r\n                  pattern: {\r\n                    value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                    message: \"You must provide a valid email\",\r\n                  },\r\n                })}\r\n                placeholder=\"Your email\"\r\n              />\r\n              {errors.email && <span>{errors.email.message}</span>}\r\n            </div>{\" \"}\r\n            <div class=\"form-group\">\r\n              {\" \"}\r\n              <label className=\"control-label\">phone_number</label>\r\n              <input\r\n                defaultValue={data.Candidate_by_pk.phone_number}\r\n                class=\"form-control form-control-solid placeholder-no-fix\"\r\n                name=\"phone_number\"\r\n                id=\"phone_number\"\r\n                ref={register}\r\n                placeholder=\"phone number\"\r\n                required\r\n              />\r\n            </div>{\" \"}\r\n            <div class=\"form-group\">\r\n              {\" \"}\r\n              <label className=\"control-label\">Domain</label>\r\n              <input\r\n                defaultValue={data.Candidate_by_pk.domain}\r\n                class=\"form-control form-control-solid placeholder-no-fix\"\r\n                name=\"domain\"\r\n                id=\"domain\"\r\n                ref={register}\r\n                placeholder=\"Domain\"\r\n                required\r\n              />\r\n            </div>{\" \"}\r\n            <div class=\"form-group\">\r\n              <label class=\"control-label\">File</label>{\" \"}\r\n              <input\r\n                type=\"file\"\r\n                name=\"File\"\r\n                onChange={uploadFileToClient}\r\n                required\r\n              />\r\n            </div>\r\n            <div class=\"form-group\">\r\n              {\" \"}\r\n              <label className=\"control-label\"> Password</label>\r\n              <input\r\n                class=\"form-control form-control-solid placeholder-no-fix\"\r\n                type=\"password\"\r\n                name=\"password\"\r\n                id=\"password\"\r\n                ref={register({\r\n                  required: \"You must provide a password.\",\r\n                  minLength: {\r\n                    message: \"Your password must be at least 6 characters\",\r\n                    value: 6,\r\n                  },\r\n                })}\r\n                placeholder=\"Choose a password\"\r\n              />\r\n              {errors.password && <span>{errors.password.message}</span>}\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label className=\"control-label\">Confirm Password</label>\r\n              <input\r\n                name=\"confirmpassword\"\r\n                type=\"password\"\r\n                class=\"form-control form-control-solid placeholder-no-fix\"\r\n                ref={register({\r\n                  required: \"You must confirm  the password.\",\r\n                  minLength: {\r\n                    message: \"Your password must be at least 6 characters\",\r\n                    value: 6,\r\n                  },\r\n                })}\r\n                placeholder=\"Confirm password\"\r\n              />{\" \"}\r\n              {errors.confirmpassword && (\r\n                <span>{errors.confirmpassword.message}</span>\r\n              )}\r\n            </div>\r\n            <div class=\"create-account\">\r\n              <button\r\n                type=\"submit\"\r\n                disabled={isSubmitting}\r\n                class=\"btn green uppercase\"\r\n              >\r\n                Create account\r\n              </button>\r\n            </div>{\" \"}\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}