{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\msdtt\\\\OneDrive\\\\Documents\\\\amai_hr_next_js_hasura\\\\amai-hr\\\\pages\\\\Project\\\\[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useRouter } from \"next/router\";\nimport useSWR from \"swr\";\nimport { useForm } from \"react-hook-form\";\nimport { gql, hasuraUserClient } from \"../../lib/hasura-user-client\";\nimport { useAuthState } from \"../../context/auth\";\nimport { useEffect } from \"react\";\nimport { TextField } from \"@material-ui/core\";\nimport { useState } from \"react\";\nimport { format, parseISO } from \"date-fns\";\nconst getProjectsIds = gql`\n  {\n    Project {\n      id\n      Description\n      created_at\n      Title\n      delivery_date\n      assigned\n      contact_date\n      company_name\n      type\n      file\n      income\n    }\n  }\n`;\nconst GetProjectByID = gql`\n  query GetProjectByID($id: Int!) {\n    Project_by_pk(id: $id) {\n      id\n      Description\n      created_at\n      Title\n      delivery_date\n      assigned\n      contact_date\n      company_name\n      type\n      file\n      income\n    }\n  }\n`;\nconst GetProjectByUser = gql`\n  query User($id: Int!) {\n    User(where: { project_id: { _is_null: true } }) {\n      id\n      Name\n    }\n  }\n`;\nexport const getStaticPaths = async () => {\n  const hasura = hasuraUserClient();\n  const {\n    Project\n  } = await hasura.request(getProjectsIds);\n  return {\n    paths: Project.map(({\n      id\n    }) => ({\n      params: {\n        id: id.toString()\n      }\n    })),\n    fallback: false\n  };\n};\nexport const getStaticProps = async ({\n  params\n}) => {\n  const hasura = hasuraUserClient();\n  const {\n    id\n  } = params;\n  const initialData = await hasura.request(GetProjectByID, {\n    id\n  });\n  return {\n    props: {\n      initialData\n    },\n    revalidate: 1\n  };\n};\nconst UpdateProject = gql`\n  mutation update_Candidate_by_pk(\n    $id: Int!\n    $Title: String!\n    $Description: String!\n    $company_name: String!\n    $type: String!\n    $income: String!\n  ) {\n    update_Project_by_pk(\n      pk_columns: { id: $id }\n      _set: {\n        Title: $Title\n        Description: $Description\n        company_name: $company_name\n        type: $type\n        income: $income\n      }\n    ) {\n      id\n      Title\n      Description\n      created_at\n      delivery_date\n      assigned\n      contact_date\n      company_name\n      type\n      income\n    }\n  }\n`;\nconst Updatedates = gql`\n  mutation update_Candidate_by_pk(\n    $id: Int!\n    $contact_date: timestamp!\n    $delivery_date: timestamp!\n  ) {\n    update_Project_by_pk(\n      pk_columns: { id: $id }\n      _set: { contact_date: $contact_date, delivery_date: $delivery_date }\n    ) {\n      id\n      Title\n      Description\n      created_at\n      delivery_date\n      assigned\n      contact_date\n      company_name\n      type\n      income\n    }\n  }\n`;\nexport default function ProjectEdit({\n  initialData\n}) {\n  const hasura = hasuraUserClient();\n  const {\n    query\n  } = useRouter();\n  const router = useRouter();\n  const {\n    isAuthenticated,\n    user\n  } = useAuthState();\n  const {\n    0: File,\n    1: setFile\n  } = useState(null);\n  const {\n    0: state,\n    1: setState\n  } = useState(false);\n  const {\n    0: createObjectURL,\n    1: setCreateObjectURL\n  } = useState(null);\n  useEffect(() => {\n    if (!isAuthenticated) router.push(\"/\");\n  }, [isAuthenticated]);\n  const {\n    id\n  } = query;\n\n  const _useForm = useForm(),\n        {\n    handleSubmit,\n    register,\n    control,\n    errors,\n    formState: {\n      isSubmitting\n    }\n  } = _useForm,\n        defaultValues = Object.assign({}, _useForm.defaultValues);\n\n  const {\n    register: register2,\n    errors: errors2,\n    handleSubmit: handleSubmit2\n  } = useForm();\n  const {\n    data,\n    mutate\n  } = useSWR([GetProjectByID, id], (query, id) => hasura.request(query, {\n    id\n  }), {\n    initialData,\n    revalidateOnMount: true\n  });\n  const startdate = format(parseISO(data.Project_by_pk.contact_date), \"yyyy-MM-dd\");\n  const endate = format(parseISO(data.Project_by_pk.delivery_date), \"yyyy-MM-dd\");\n\n  const uploadFileToClient = event => {\n    if (event.target.files && event.target.files[0]) {\n      const i = event.target.files[0];\n      setFile(i);\n      setState(true);\n      setCreateObjectURL(URL.createObjectURL(i));\n    }\n  };\n\n  const uploadFileToServer = async () => {\n    const body = new FormData();\n    body.append(\"file\", File);\n    const response = await fetch(\"/api/file/\", {\n      method: \"POST\",\n      body\n    });\n    const UploadFile = gql`\n      mutation MyMutation($file: String!, $id: Int!) {\n        update_Project_by_pk(pk_columns: { id: $id }, _set: { file: $file }) {\n          file\n        }\n      }\n    `;\n\n    try {\n      const {\n        update_Project_by_pk\n      } = await hasura.request(UploadFile, {\n        id,\n        file: File.name\n      });\n      window.location.reload();\n    } catch (error) {\n      console.error(error);\n    }\n\n    return;\n  };\n\n  const onSubmit = async ({\n    Title,\n    Description,\n    company_name,\n    income,\n    type\n  }) => {\n    try {\n      const id = data.Project_by_pk.id;\n      console.log(id);\n      const {\n        update_Project_by_pk\n      } = await hasura.request(UpdateProject, {\n        id,\n        Title,\n        Description,\n        company_name,\n        income,\n        type\n      });\n      mutate(_objectSpread(_objectSpread({}, data), update_Project_by_pk));\n      router.push(`/Project/List`);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const addproject = () => {\n    const pathname = `/Project/List`;\n    location.replace(pathname);\n  };\n\n  const updatedate = async ({\n    delivery_date,\n    contact_date\n  }) => {\n    try {\n      const count_d = differenceInDays(Date.parse(delivery_date), Date.parse(contact_date));\n\n      if (count_d < 1) {\n        alert(\"please enter a valid period\");\n      } else {\n        const idt = data.Project_by_pk.id;\n        const {\n          update_Project_by_pk\n        } = await hasura.request(UpdateProject, {\n          id: idt,\n          contact_date,\n          delivery_date\n        });\n        window.location.reload();\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: \"page-content-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"page-content\",\n    style: {\n      minHeight: 1500\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    class: \"profile-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    class: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    class: \"col-md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    class: \"portlet light \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    class: \"portlet-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    class: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 19\n    }\n  }, \" \", __jsx(\"div\", {\n    class: \"col-md-11\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 21\n    }\n  }, \" \", __jsx(\"h3\", {\n    className: \"caption-subject font-blue-madison bold uppercase\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 23\n    }\n  }, \"Update Project information\"), \" \", __jsx(\"ul\", {\n    className: \"nav nav-tabs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 23\n    }\n  }, __jsx(\"li\", {\n    className: \"active\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 25\n    }\n  }, __jsx(\"a\", {\n    href: \"#tab_1_1\",\n    \"data-toggle\": \"tab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 27\n    }\n  }, \"General Info\")), __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 25\n    }\n  }, __jsx(\"a\", {\n    href: \"#tab_1_2\",\n    \"data-toggle\": \"tab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 27\n    }\n  }, \"Update file/Contract\")), __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 25\n    }\n  }, __jsx(\"a\", {\n    href: \"#tab_1_3\",\n    \"data-toggle\": \"tab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 27\n    }\n  }, \"Update dates\")), \" \")), __jsx(\"div\", {\n    class: \"col-md-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 21\n    }\n  }, \" \", __jsx(\"div\", {\n    class: \"btn-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 23\n    }\n  }, \" \", __jsx(\"a\", {\n    id: \"sample_editable_1_2_new\",\n    class: \"btn sbold green\",\n    onClick: () => addproject(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 25\n    }\n  }, \"Back \", __jsx(\"i\", {\n    className: \"icon-logout\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 32\n    }\n  }))))), \" \", __jsx(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 19\n    }\n  }), \" \", __jsx(\"div\", {\n    className: \"tab-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 19\n    }\n  }, __jsx(\"div\", {\n    className: \"tab-pane active\",\n    id: \"tab_1_1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 21\n    }\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 23\n    }\n  }, \" \", __jsx(\"div\", {\n    class: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 25\n    }\n  }, __jsx(\"label\", {\n    class: \"control-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 27\n    }\n  }, \"Client\"), __jsx(\"input\", {\n    defaultValue: data.Project_by_pk.company_name,\n    name: \"company_name\",\n    id: \"company_name\",\n    type: \"text\",\n    placeholder: \"Client\",\n    class: \"form-control\",\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 27\n    }\n  }), \" \"), __jsx(\"div\", {\n    class: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 25\n    }\n  }, __jsx(\"label\", {\n    class: \"control-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 27\n    }\n  }, \"Project Title\"), __jsx(\"input\", {\n    defaultValue: data.Project_by_pk.Title,\n    name: \"Title\",\n    id: \"Title\",\n    type: \"text\",\n    placeholder: \"Project Title\",\n    class: \"form-control\",\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 27\n    }\n  }), \" \"), __jsx(\"div\", {\n    class: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 25\n    }\n  }, __jsx(\"label\", {\n    class: \"control-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 27\n    }\n  }, \"Project Description\"), __jsx(\"textarea\", {\n    defaultValue: data.Project_by_pk.Description,\n    name: \"Description\",\n    id: \"Description\",\n    type: \"textarea\",\n    placeholder: \"Description\",\n    class: \"form-control\",\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 27\n    }\n  }), \" \"), \" \", __jsx(\"div\", {\n    class: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 25\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 27\n    }\n  }, \"Income\"), __jsx(\"div\", {\n    class: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 27\n    }\n  }, __jsx(\"input\", {\n    defaultValue: data.Project_by_pk.income,\n    name: \"income\",\n    class: \"form-control\",\n    id: \"income\",\n    type: \"text\",\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 29\n    }\n  }), __jsx(\"span\", {\n    class: \"help-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 29\n    }\n  }, \" \"))), \" \", __jsx(\"div\", {\n    class: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 25\n    }\n  }, __jsx(\"label\", {\n    class: \"control-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 27\n    }\n  }, \"type\"), __jsx(\"input\", {\n    defaultValue: data.Project_by_pk.type,\n    name: \"type\",\n    id: \"type\",\n    type: \"text\",\n    placeholder: \"type\",\n    class: \"form-control\",\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 27\n    }\n  }), \" \"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 25\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 25\n    }\n  }), __jsx(\"div\", {\n    class: \"margiv-top-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 25\n    }\n  }, __jsx(\"button\", {\n    type: \"submit\",\n    class: \"btn green\",\n    disabled: isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 27\n    }\n  }, \" \", \"Save Changes\", \" \"))), \" \"), \" \", __jsx(\"div\", {\n    className: \"tab-pane \",\n    id: \"tab_1_2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 21\n    }\n  }, __jsx(\"form\", {\n    action: \"#\",\n    role: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 23\n    }\n  }, __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 25\n    }\n  }, __jsx(\"div\", {\n    className: \"fileinput fileinput-new\",\n    \"data-provides\": \"fileinput\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 27\n    }\n  }, __jsx(\"img\", {\n    src: \"../../assets/global/img/pdf.png\",\n    href: \"#myModal\",\n    style: {\n      maxWidth: 35\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 29\n    }\n  }), data.Project_by_pk.file, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 29\n    }\n  }, __jsx(\"span\", {\n    className: \"btn default btn-file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 31\n    }\n  }, __jsx(\"input\", {\n    type: \"file\",\n    name: \"File\",\n    onChange: uploadFileToClient,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 33\n    }\n  }))))), __jsx(\"div\", {\n    className: \"margin-top-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 25\n    }\n  }, state ? __jsx(\"button\", {\n    onClick: uploadFileToServer,\n    className: \"btn green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 29\n    }\n  }, \" \", \"Submit\", \" \") : __jsx(\"button\", {\n    onClick: uploadFileToServer,\n    className: \"btn green\",\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 29\n    }\n  }, \" \", \"Submit\", \" \")))), __jsx(\"div\", {\n    className: \"tab-pane \",\n    id: \"tab_1_3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 21\n    }\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit2(updatedate),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 23\n    }\n  }, __jsx(\"div\", {\n    class: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 25\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 27\n    }\n  }, \"starting date\"), \" \", __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 56\n    }\n  }), __jsx(TextField, {\n    id: \"contact_date\",\n    name: \"contact_date\",\n    type: \"date\",\n    defaultValue: startdate,\n    inputRef: register2,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 27\n    }\n  })), __jsx(\"div\", {\n    class: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 25\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 27\n    }\n  }, \"expected delievry date\"), \" \", __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 65\n    }\n  }), __jsx(TextField, {\n    id: \"delivery_date\",\n    name: \"delivery_date\",\n    type: \"date\",\n    defaultValue: endate,\n    inputRef: register2,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 27\n    }\n  })), \" \", __jsx(\"div\", {\n    className: \"margin-top-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 25\n    }\n  }, __jsx(\"button\", {\n    type: \"submit\",\n    class: \"btn green\",\n    disabled: isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 27\n    }\n  }, \"Change dates\", \" \"))))))))))));\n}","map":{"version":3,"sources":["C:/Users/msdtt/OneDrive/Documents/amai_hr_next_js_hasura/amai-hr/pages/Project/[id].js"],"names":["useRouter","useSWR","useForm","gql","hasuraUserClient","useAuthState","useEffect","TextField","useState","format","parseISO","getProjectsIds","GetProjectByID","GetProjectByUser","getStaticPaths","hasura","Project","request","paths","map","id","params","toString","fallback","getStaticProps","initialData","props","revalidate","UpdateProject","Updatedates","ProjectEdit","query","router","isAuthenticated","user","File","setFile","state","setState","createObjectURL","setCreateObjectURL","push","handleSubmit","register","control","errors","formState","isSubmitting","defaultValues","register2","errors2","handleSubmit2","data","mutate","revalidateOnMount","startdate","Project_by_pk","contact_date","endate","delivery_date","uploadFileToClient","event","target","files","i","URL","uploadFileToServer","body","FormData","append","response","fetch","method","UploadFile","update_Project_by_pk","file","name","window","location","reload","error","console","onSubmit","Title","Description","company_name","income","type","log","err","addproject","pathname","replace","updatedate","count_d","differenceInDays","Date","parse","alert","idt","minHeight","maxWidth"],"mappings":"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","sourcesContent":["import { useRouter } from \"next/router\";\r\nimport useSWR from \"swr\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { gql, hasuraUserClient } from \"../../lib/hasura-user-client\";\r\nimport { useAuthState } from \"../../context/auth\";\r\nimport { useEffect } from \"react\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { useState } from \"react\";\r\nimport { format, parseISO } from \"date-fns\";\r\n\r\nconst getProjectsIds = gql`\r\n  {\r\n    Project {\r\n      id\r\n      Description\r\n      created_at\r\n      Title\r\n      delivery_date\r\n      assigned\r\n      contact_date\r\n      company_name\r\n      type\r\n      file\r\n      income\r\n    }\r\n  }\r\n`;\r\n\r\nconst GetProjectByID = gql`\r\n  query GetProjectByID($id: Int!) {\r\n    Project_by_pk(id: $id) {\r\n      id\r\n      Description\r\n      created_at\r\n      Title\r\n      delivery_date\r\n      assigned\r\n      contact_date\r\n      company_name\r\n      type\r\n      file\r\n      income\r\n    }\r\n  }\r\n`;\r\nconst GetProjectByUser = gql`\r\n  query User($id: Int!) {\r\n    User(where: { project_id: { _is_null: true } }) {\r\n      id\r\n      Name\r\n    }\r\n  }\r\n`;\r\nexport const getStaticPaths = async () => {\r\n  const hasura = hasuraUserClient();\r\n\r\n  const { Project } = await hasura.request(getProjectsIds);\r\n\r\n  return {\r\n    paths: Project.map(({ id }) => ({\r\n      params: {\r\n        id: id.toString(),\r\n      },\r\n    })),\r\n    fallback: false,\r\n  };\r\n};\r\n\r\nexport const getStaticProps = async ({ params }) => {\r\n  const hasura = hasuraUserClient();\r\n  const { id } = params;\r\n\r\n  const initialData = await hasura.request(GetProjectByID, { id });\r\n\r\n  return {\r\n    props: {\r\n      initialData,\r\n    },\r\n    revalidate: 1,\r\n  };\r\n};\r\nconst UpdateProject = gql`\r\n  mutation update_Candidate_by_pk(\r\n    $id: Int!\r\n    $Title: String!\r\n    $Description: String!\r\n    $company_name: String!\r\n    $type: String!\r\n    $income: String!\r\n  ) {\r\n    update_Project_by_pk(\r\n      pk_columns: { id: $id }\r\n      _set: {\r\n        Title: $Title\r\n        Description: $Description\r\n        company_name: $company_name\r\n        type: $type\r\n        income: $income\r\n      }\r\n    ) {\r\n      id\r\n      Title\r\n      Description\r\n      created_at\r\n      delivery_date\r\n      assigned\r\n      contact_date\r\n      company_name\r\n      type\r\n      income\r\n    }\r\n  }\r\n`;\r\nconst Updatedates = gql`\r\n  mutation update_Candidate_by_pk(\r\n    $id: Int!\r\n    $contact_date: timestamp!\r\n    $delivery_date: timestamp!\r\n  ) {\r\n    update_Project_by_pk(\r\n      pk_columns: { id: $id }\r\n      _set: { contact_date: $contact_date, delivery_date: $delivery_date }\r\n    ) {\r\n      id\r\n      Title\r\n      Description\r\n      created_at\r\n      delivery_date\r\n      assigned\r\n      contact_date\r\n      company_name\r\n      type\r\n      income\r\n    }\r\n  }\r\n`;\r\nexport default function ProjectEdit({ initialData }) {\r\n  const hasura = hasuraUserClient();\r\n  const { query } = useRouter();\r\n  const router = useRouter();\r\n  const { isAuthenticated, user } = useAuthState();\r\n  const [File, setFile] = useState(null);\r\n  const [state, setState] = useState(false);\r\n\r\n  const [createObjectURL, setCreateObjectURL] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (!isAuthenticated) router.push(\"/\");\r\n  }, [isAuthenticated]);\r\n\r\n  const { id } = query;\r\n  const {\r\n    handleSubmit,\r\n    register,\r\n    control,\r\n    errors,\r\n    formState: { isSubmitting },\r\n    defaultValues: { ...defaultValues },\r\n  } = useForm();\r\n  const {\r\n    register: register2,\r\n    errors: errors2,\r\n    handleSubmit: handleSubmit2,\r\n  } = useForm();\r\n  const { data, mutate } = useSWR(\r\n    [GetProjectByID, id],\r\n    (query, id) => hasura.request(query, { id }),\r\n    {\r\n      initialData,\r\n      revalidateOnMount: true,\r\n    }\r\n  );\r\n  const startdate = format(\r\n    parseISO(data.Project_by_pk.contact_date),\r\n    \"yyyy-MM-dd\"\r\n  );\r\n  const endate = format(\r\n    parseISO(data.Project_by_pk.delivery_date),\r\n    \"yyyy-MM-dd\"\r\n  );\r\n  const uploadFileToClient = (event) => {\r\n    if (event.target.files && event.target.files[0]) {\r\n      const i = event.target.files[0];\r\n      setFile(i);\r\n      setState(true);\r\n      setCreateObjectURL(URL.createObjectURL(i));\r\n    }\r\n  };\r\n  const uploadFileToServer = async () => {\r\n    const body = new FormData();\r\n    body.append(\"file\", File);\r\n    const response = await fetch(\"/api/file/\", {\r\n      method: \"POST\",\r\n      body,\r\n    });\r\n\r\n    const UploadFile = gql`\r\n      mutation MyMutation($file: String!, $id: Int!) {\r\n        update_Project_by_pk(pk_columns: { id: $id }, _set: { file: $file }) {\r\n          file\r\n        }\r\n      }\r\n    `;\r\n    try {\r\n      const { update_Project_by_pk } = await hasura.request(UploadFile, {\r\n        id,\r\n        file: File.name,\r\n      });\r\n      window.location.reload();\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n    return;\r\n  };\r\n  const onSubmit = async ({\r\n    Title,\r\n    Description,\r\n    company_name,\r\n    income,\r\n    type,\r\n  }) => {\r\n    try {\r\n      const id = data.Project_by_pk.id;\r\n      console.log(id);\r\n      const { update_Project_by_pk } = await hasura.request(UpdateProject, {\r\n        id,\r\n        Title,\r\n        Description,\r\n        company_name,\r\n        income,\r\n        type,\r\n      });\r\n\r\n      mutate({\r\n        ...data,\r\n        ...update_Project_by_pk,\r\n      });\r\n      router.push(`/Project/List`);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  const addproject = () => {\r\n    const pathname = `/Project/List`;\r\n    location.replace(pathname);\r\n  };\r\n  const updatedate = async ({ delivery_date, contact_date }) => {\r\n    try {\r\n      const count_d = differenceInDays(\r\n        Date.parse(delivery_date),\r\n        Date.parse(contact_date)\r\n      );\r\n      if (count_d < 1) {\r\n        alert(\"please enter a valid period\");\r\n      } else {\r\n        const idt = data.Project_by_pk.id;\r\n        const { update_Project_by_pk } = await hasura.request(UpdateProject, {\r\n          id: idt,\r\n          contact_date,\r\n          delivery_date,\r\n        });\r\n\r\n        window.location.reload();\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"page-content-wrapper\">\r\n      <div className=\"page-content\" style={{ minHeight: 1500 }}>\r\n        <div class=\"profile-content\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n              <div class=\"portlet light \">\r\n                <div class=\"portlet-body\">\r\n                  <div class=\"row\">\r\n                    {\" \"}\r\n                    <div class=\"col-md-11\">\r\n                      {\" \"}\r\n                      <h3 className=\"caption-subject font-blue-madison bold uppercase\">\r\n                        Update Project information\r\n                      </h3>{\" \"}\r\n                      <ul className=\"nav nav-tabs\">\r\n                        <li className=\"active\">\r\n                          <a href=\"#tab_1_1\" data-toggle=\"tab\">\r\n                            General Info\r\n                          </a>\r\n                        </li>\r\n                        <li>\r\n                          <a href=\"#tab_1_2\" data-toggle=\"tab\">\r\n                            Update file/Contract\r\n                          </a>\r\n                        </li>\r\n                        <li>\r\n                          <a href=\"#tab_1_3\" data-toggle=\"tab\">\r\n                            Update dates\r\n                          </a>\r\n                        </li>{\" \"}\r\n                      </ul>\r\n                    </div>\r\n                    <div class=\"col-md-1\">\r\n                      {\" \"}\r\n                      <div class=\"btn-group\">\r\n                        {\" \"}\r\n                        <a\r\n                          id=\"sample_editable_1_2_new\"\r\n                          class=\"btn sbold green\"\r\n                          onClick={() => addproject()}\r\n                        >\r\n                          Back <i className=\"icon-logout\"></i>\r\n                        </a>\r\n                      </div>\r\n                    </div>\r\n                  </div>{\" \"}\r\n                  <hr></hr>{\" \"}\r\n                  <div className=\"tab-content\">\r\n                    <div className=\"tab-pane active\" id=\"tab_1_1\">\r\n                      <form onSubmit={handleSubmit(onSubmit)}>\r\n                        {\" \"}\r\n                        <div class=\"form-group\">\r\n                          <label class=\"control-label\">Client</label>\r\n                          <input\r\n                            defaultValue={data.Project_by_pk.company_name}\r\n                            name=\"company_name\"\r\n                            id=\"company_name\"\r\n                            type=\"text\"\r\n                            placeholder=\"Client\"\r\n                            class=\"form-control\"\r\n                            ref={register}\r\n                          />{\" \"}\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                          <label class=\"control-label\">Project Title</label>\r\n                          <input\r\n                            defaultValue={data.Project_by_pk.Title}\r\n                            name=\"Title\"\r\n                            id=\"Title\"\r\n                            type=\"text\"\r\n                            placeholder=\"Project Title\"\r\n                            class=\"form-control\"\r\n                            ref={register}\r\n                          />{\" \"}\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                          <label class=\"control-label\">\r\n                            Project Description\r\n                          </label>\r\n                          <textarea\r\n                            defaultValue={data.Project_by_pk.Description}\r\n                            name=\"Description\"\r\n                            id=\"Description\"\r\n                            type=\"textarea\"\r\n                            placeholder=\"Description\"\r\n                            class=\"form-control\"\r\n                            ref={register}\r\n                          />{\" \"}\r\n                        </div>{\" \"}\r\n                        <div class=\"form-group\">\r\n                          <label>Income</label>\r\n                          <div class=\"form-group\">\r\n                            <input\r\n                              defaultValue={data.Project_by_pk.income}\r\n                              name=\"income\"\r\n                              class=\"form-control\"\r\n                              id=\"income\"\r\n                              type=\"text\"\r\n                              ref={register}\r\n                            />\r\n                            <span class=\"help-block\"> </span>\r\n                          </div>\r\n                        </div>{\" \"}\r\n                        <div class=\"form-group\">\r\n                          <label class=\"control-label\">type</label>\r\n                          <input\r\n                            defaultValue={data.Project_by_pk.type}\r\n                            name=\"type\"\r\n                            id=\"type\"\r\n                            type=\"text\"\r\n                            placeholder=\"type\"\r\n                            class=\"form-control\"\r\n                            ref={register}\r\n                          />{\" \"}\r\n                        </div>\r\n                        {/*make it tabs  */}\r\n                        <br />\r\n                        <br />\r\n                        <div class=\"margiv-top-10\">\r\n                          <button\r\n                            type=\"submit\"\r\n                            class=\"btn green\"\r\n                            disabled={isSubmitting}\r\n                          >\r\n                            {\" \"}\r\n                            Save Changes{\" \"}\r\n                          </button>\r\n                        </div>\r\n                      </form>{\" \"}\r\n                    </div>{\" \"}\r\n                    <div className=\"tab-pane \" id=\"tab_1_2\">\r\n                      <form action=\"#\" role=\"form\">\r\n                        <div className=\"form-group\">\r\n                          <div\r\n                            className=\"fileinput fileinput-new\"\r\n                            data-provides=\"fileinput\"\r\n                          >\r\n                            <img\r\n                              src=\"../../assets/global/img/pdf.png\"\r\n                              href=\"#myModal\"\r\n                              style={{ maxWidth: 35 }}\r\n                            />\r\n                            {data.Project_by_pk.file}\r\n                            <div>\r\n                              <span className=\"btn default btn-file\">\r\n                                <input\r\n                                  type=\"file\"\r\n                                  name=\"File\"\r\n                                  onChange={uploadFileToClient}\r\n                                  required\r\n                                />\r\n                              </span>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"margin-top-10\">\r\n                          {state ? (\r\n                            <button\r\n                              onClick={uploadFileToServer}\r\n                              className=\"btn green\"\r\n                            >\r\n                              {\" \"}\r\n                              Submit{\" \"}\r\n                            </button>\r\n                          ) : (\r\n                            <button\r\n                              onClick={uploadFileToServer}\r\n                              className=\"btn green\"\r\n                              disabled\r\n                            >\r\n                              {\" \"}\r\n                              Submit{\" \"}\r\n                            </button>\r\n                          )}\r\n                        </div>\r\n                      </form>\r\n                    </div>\r\n                    <div className=\"tab-pane \" id=\"tab_1_3\">\r\n                      <form onSubmit={handleSubmit2(updatedate)}>\r\n                        <div class=\"form-group\">\r\n                          <label>starting date</label> <br />\r\n                          <TextField\r\n                            id=\"contact_date\"\r\n                            name=\"contact_date\"\r\n                            type=\"date\"\r\n                            defaultValue={startdate}\r\n                            inputRef={register2}\r\n                            required\r\n                          />\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                          <label>expected delievry date</label> <br />\r\n                          <TextField\r\n                            id=\"delivery_date\"\r\n                            name=\"delivery_date\"\r\n                            type=\"date\"\r\n                            defaultValue={endate}\r\n                            inputRef={register2}\r\n                            required\r\n                          />\r\n                        </div>{\" \"}\r\n                        <div className=\"margin-top-10\">\r\n                          <button\r\n                            type=\"submit\"\r\n                            class=\"btn green\"\r\n                            disabled={isSubmitting}\r\n                          >\r\n                            Change dates{\" \"}\r\n                          </button>\r\n                        </div>\r\n                      </form>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}