{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\msdtt\\\\OneDrive\\\\Documents\\\\amai_hr_next_js_hasura\\\\amai-hr\\\\pages\\\\RegisterCandidatAccount\\\\[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect } from \"react\";\nimport useSWR from \"swr\";\nimport { useRouter } from \"next/router\";\nimport { useForm } from \"react-hook-form\";\nimport { gql, hasuraUserClient } from \"../../lib/hasura-user-client\";\nimport { useAuthState, useAuthDispatch } from \"../../context/auth\";\nimport { useState } from \"react\";\nconst created_at = new Date().toISOString();\nconst GetUserByEmail = gql`\n  query GetUserByEmail($email: String!) {\n    User(where: { email: { _eq: $email } }) {\n      id\n    }\n  }\n`;\nconst GetCandidateIds = gql`\n  {\n    Candidate {\n      id\n      Email\n      Last_Name\n      Name\n      domain\n      phone_number\n      Status\n      File\n    }\n  }\n`;\nconst GetCandidateById = gql`\n  query GetCategoryById($id: Int!) {\n    Candidate_by_pk(id: $id) {\n      id\n      Email\n      Last_Name\n      Name\n      domain\n      phone_number\n      Status\n      File\n    }\n  }\n`;\nexport const getStaticPaths = async () => {\n  const hasura = hasuraUserClient();\n  const {\n    Candidate\n  } = await hasura.request(GetCandidateIds);\n  return {\n    paths: Candidate.map(({\n      id\n    }) => ({\n      params: {\n        id: id.toString()\n      }\n    })),\n    fallback: false\n  };\n};\nexport const getStaticProps = async ({\n  params\n}) => {\n  const hasura = hasuraUserClient();\n  const {\n    id\n  } = params;\n  console.log(params);\n  console.log(id);\n  const initialData = await hasura.request(GetCandidateById, {\n    id\n  });\n  return {\n    props: {\n      initialData\n    },\n    revalidate: 1\n  };\n};\nexport default function RegisterPage({\n  initialData\n}) {\n  const {\n    query\n  } = useRouter();\n  const router = useRouter();\n  const hasura = hasuraUserClient();\n  const {\n    id\n  } = query;\n  const {\n    isAuthenticated\n  } = useAuthState();\n  const {\n    register: createUser\n  } = useAuthDispatch();\n  const {\n    0: File,\n    1: setFile\n  } = useState(null);\n  const {\n    0: createObjectURL,\n    1: setCreateObjectURL\n  } = useState(null);\n  const {\n    handleSubmit,\n    register,\n    errors,\n    formState: {\n      isSubmitting\n    },\n    setError\n  } = useForm({\n    defaultValues: {\n      save_last_seen: true\n    }\n  });\n  useEffect(() => {\n    if (!isAuthenticated) router.push(\"/\");\n  }, [isAuthenticated]);\n\n  const uploadFileToClient = event => {\n    if (event.target.files && event.target.files[0]) {\n      const i = event.target.files[0];\n      setFile(i);\n      setCreateObjectURL(URL.createObjectURL(i));\n    }\n  };\n\n  const {\n    data,\n    mutate\n  } = useSWR([GetCandidateById, id], (query, id) => hasura.request(query, {\n    id\n  }), {\n    initialData,\n    revalidateOnMount: true\n  }); // if (isAuthenticated) return null;\n\n  const onSubmit = async ({\n    name,\n    last_name,\n    email,\n    domain,\n    phone_number,\n    password,\n    confirmpassword,\n    manager_id\n  }) => {\n    const SetStatus = gql`\n      mutation MyMutation($id: Int!) {\n        update_Candidate_by_pk(pk_columns: { id: $id }, _set: { Status: 1 }) {\n          id\n          Status\n        }\n      }\n    `;\n    const {\n      User: [foundUser]\n    } = await hasura.request(GetUserByEmail, {\n      email\n    });\n\n    if (foundUser) {\n      alert(\"Email already exists , please try another\");\n    } else if (password != confirmpassword) {\n      alert(\"Passwords don't match\");\n    } else {\n      try {\n        await hasura.request(SetStatus, {\n          id: id\n        });\n        mutate();\n        await createUser({\n          name,\n          last_name,\n          email,\n          domain,\n          phone_number,\n          password,\n          created_at,\n          manager_id,\n          File: data.Candidate_by_pk.File,\n          manager_id\n        }); // await fetch(\"/api/AcceptEmail\", {\n        //   method: \"POST\",\n        //   headers: { \"content-type\": \"application/json\" },\n        //   body: JSON.stringify(data),\n        // });\n        // router.push(\"/CandidatList\");\n      } catch ({\n        message\n      }) {\n        setError(\"email\", {\n          type: \"manual\",\n          message\n        });\n      }\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: \"page-content-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"page-content\",\n    style: {\n      minHeight: 1500\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }\n  }, \" \", __jsx(\"div\", {\n    class: \"profile-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    class: \"col-md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 11\n    }\n  }, \" \", __jsx(\"div\", {\n    class: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }\n  }, \" \", __jsx(\"div\", {\n    class: \"portlet light \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    class: \"portlet-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 17\n    }\n  }, \" \", __jsx(\"h3\", {\n    class: \"font-green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 19\n    }\n  }, \"New AMAIER ! \"), \" \", __jsx(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 61\n    }\n  }), \" \", __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 19\n    }\n  }, __jsx(\"img\", {\n    style: {\n      display: \"block\",\n      objectFit: \"cover\",\n      width: 500,\n      height: 470,\n      margin: \"auto\"\n    },\n    src: \"../aam.jpg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 21\n    }\n  }))))), __jsx(\"div\", {\n    class: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    class: \"portlet light \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    class: \"portlet-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 17\n    }\n  }, __jsx(\"form\", {\n    class: \"register-form\",\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 19\n    }\n  }, __jsx(\"div\", {\n    class: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 21\n    }\n  }, \" \", __jsx(\"h3\", {\n    class: \"font-green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 23\n    }\n  }, \"Register Candidate\"), \" \", __jsx(\"div\", {\n    class: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 23\n    }\n  }, \" \", __jsx(\"label\", {\n    className: \"control-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 25\n    }\n  }, \"First name\"), __jsx(\"input\", {\n    defaultValue: data.Candidate_by_pk.Name,\n    class: \"form-control form-control-solid placeholder-no-fix\",\n    name: \"name\",\n    id: \"name\",\n    ref: register,\n    placeholder: \"first name\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 25\n    }\n  })), __jsx(\"div\", {\n    class: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 23\n    }\n  }, \" \", __jsx(\"label\", {\n    className: \"control-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 25\n    }\n  }, \"Last name\"), __jsx(\"input\", {\n    defaultValue: data.Candidate_by_pk.Last_Name,\n    class: \"form-control form-control-solid placeholder-no-fix\",\n    name: \"last_name\",\n    id: \"last_name\",\n    ref: register,\n    placeholder: \"last name\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 25\n    }\n  })), __jsx(\"div\", {\n    class: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 23\n    }\n  }, __jsx(\"label\", {\n    className: \"control-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 25\n    }\n  }, \"Email\"), __jsx(\"input\", {\n    defaultValue: data.Candidate_by_pk.Email,\n    class: \"form-control form-control-solid placeholder-no-fix\",\n    type: \"email\",\n    name: \"email\",\n    id: \"email\",\n    ref: register({\n      required: \"You must provide a email.\",\n      pattern: {\n        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n        message: \"You must provide a valid email\"\n      }\n    }),\n    placeholder: \"Your email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 25\n    }\n  }), errors.email && __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 42\n    }\n  }, errors.email.message)), \" \", __jsx(\"div\", {\n    class: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 23\n    }\n  }, \" \", __jsx(\"label\", {\n    className: \"control-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 25\n    }\n  }, \"phone_number\"), __jsx(\"input\", {\n    defaultValue: data.Candidate_by_pk.phone_number,\n    class: \"form-control form-control-solid placeholder-no-fix\",\n    name: \"phone_number\",\n    id: \"phone_number\",\n    ref: register,\n    placeholder: \"phone number\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 25\n    }\n  })), \" \", __jsx(\"div\", {\n    class: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 23\n    }\n  }, \" \", __jsx(\"label\", {\n    className: \"control-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 25\n    }\n  }, \"Domain\"), __jsx(\"input\", {\n    defaultValue: data.Candidate_by_pk.domain,\n    class: \"form-control form-control-solid placeholder-no-fix\",\n    name: \"domain\",\n    id: \"domain\",\n    ref: register,\n    placeholder: \"Domain\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 25\n    }\n  })), \" \", __jsx(\"div\", {\n    class: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 23\n    }\n  }, __jsx(\"label\", {\n    class: \"control-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 25\n    }\n  }, \"File\"), \" \", data.Candidate_by_pk.File), \" \", __jsx(\"div\", {\n    class: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 23\n    }\n  }, __jsx(\"select\", {\n    name: \"manager_id\",\n    id: \"manager_id\",\n    ref: register,\n    required: true,\n    className: \"form-control select2 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 25\n    }\n  }, Manager.User.map(({\n    id,\n    Name,\n    Avatar\n  }) => __jsx(React.Fragment, {\n    key: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 29\n    }\n  }, \" \", __jsx(\"option\", {\n    value: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 31\n    }\n  }, Name, \" \")))), \" \"), __jsx(\"div\", {\n    class: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 23\n    }\n  }, \" \", __jsx(\"label\", {\n    className: \"control-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 25\n    }\n  }, \" Password\"), __jsx(\"input\", {\n    class: \"form-control form-control-solid placeholder-no-fix\",\n    type: \"password\",\n    name: \"password\",\n    id: \"password\",\n    ref: register({\n      required: \"You must provide a password.\",\n      minLength: {\n        message: \"Your password must be at least 6 characters\",\n        value: 6\n      }\n    }),\n    placeholder: \"Choose a password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 25\n    }\n  }), errors.password && __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 27\n    }\n  }, errors.password.message)), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 23\n    }\n  }, __jsx(\"label\", {\n    className: \"control-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 25\n    }\n  }, \"Confirm Password\"), __jsx(\"input\", {\n    name: \"confirmpassword\",\n    type: \"password\",\n    class: \"form-control form-control-solid placeholder-no-fix\",\n    ref: register({\n      required: \"You must confirm  the password.\",\n      minLength: {\n        message: \"Your password must be at least 6 characters\",\n        value: 6\n      }\n    }),\n    placeholder: \"Confirm password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 25\n    }\n  }), \" \", errors.confirmpassword && __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 27\n    }\n  }, errors.confirmpassword.message)), __jsx(\"div\", {\n    class: \"create-account\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 23\n    }\n  }, __jsx(\"button\", {\n    type: \"submit\",\n    disabled: isSubmitting,\n    class: \"btn green uppercase\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 25\n    }\n  }, \"Create account\")), \" \")))))))));\n}","map":{"version":3,"sources":["C:/Users/msdtt/OneDrive/Documents/amai_hr_next_js_hasura/amai-hr/pages/RegisterCandidatAccount/[id].js"],"names":["useEffect","useSWR","useRouter","useForm","gql","hasuraUserClient","useAuthState","useAuthDispatch","useState","created_at","Date","toISOString","GetUserByEmail","GetCandidateIds","GetCandidateById","getStaticPaths","hasura","Candidate","request","paths","map","id","params","toString","fallback","getStaticProps","console","log","initialData","props","revalidate","RegisterPage","query","router","isAuthenticated","register","createUser","File","setFile","createObjectURL","setCreateObjectURL","handleSubmit","errors","formState","isSubmitting","setError","defaultValues","save_last_seen","push","uploadFileToClient","event","target","files","i","URL","data","mutate","revalidateOnMount","onSubmit","name","last_name","email","domain","phone_number","password","confirmpassword","manager_id","SetStatus","User","foundUser","alert","Candidate_by_pk","message","type","minHeight","display","objectFit","width","height","margin","Name","Last_Name","Email","required","pattern","value","Manager","Avatar","minLength"],"mappings":"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","sourcesContent":["import { useEffect } from \"react\";\r\nimport useSWR from \"swr\";\r\n\r\nimport { useRouter } from \"next/router\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { gql, hasuraUserClient } from \"../../lib/hasura-user-client\";\r\nimport { useAuthState, useAuthDispatch } from \"../../context/auth\";\r\nimport { useState } from \"react\";\r\n\r\nconst created_at = new Date().toISOString();\r\nconst GetUserByEmail = gql`\r\n  query GetUserByEmail($email: String!) {\r\n    User(where: { email: { _eq: $email } }) {\r\n      id\r\n    }\r\n  }\r\n`;\r\nconst GetCandidateIds = gql`\r\n  {\r\n    Candidate {\r\n      id\r\n      Email\r\n      Last_Name\r\n      Name\r\n      domain\r\n      phone_number\r\n      Status\r\n      File\r\n    }\r\n  }\r\n`;\r\n\r\nconst GetCandidateById = gql`\r\n  query GetCategoryById($id: Int!) {\r\n    Candidate_by_pk(id: $id) {\r\n      id\r\n      Email\r\n      Last_Name\r\n      Name\r\n      domain\r\n      phone_number\r\n      Status\r\n      File\r\n    }\r\n  }\r\n`;\r\n\r\nexport const getStaticPaths = async () => {\r\n  const hasura = hasuraUserClient();\r\n\r\n  const { Candidate } = await hasura.request(GetCandidateIds);\r\n\r\n  return {\r\n    paths: Candidate.map(({ id }) => ({\r\n      params: {\r\n        id: id.toString(),\r\n      },\r\n    })),\r\n    fallback: false,\r\n  };\r\n};\r\n\r\nexport const getStaticProps = async ({ params }) => {\r\n  const hasura = hasuraUserClient();\r\n  const { id } = params;\r\n  console.log(params);\r\n  console.log(id);\r\n  const initialData = await hasura.request(GetCandidateById, { id });\r\n\r\n  return {\r\n    props: {\r\n      initialData,\r\n    },\r\n    revalidate: 1,\r\n  };\r\n};\r\nexport default function RegisterPage({ initialData }) {\r\n  const { query } = useRouter();\r\n  const router = useRouter();\r\n  const hasura = hasuraUserClient();\r\n  const { id } = query;\r\n  const { isAuthenticated } = useAuthState();\r\n  const { register: createUser } = useAuthDispatch();\r\n  const [File, setFile] = useState(null);\r\n  const [createObjectURL, setCreateObjectURL] = useState(null);\r\n  const {\r\n    handleSubmit,\r\n    register,\r\n    errors,\r\n    formState: { isSubmitting },\r\n    setError,\r\n  } = useForm({ defaultValues: { save_last_seen: true } });\r\n\r\n  useEffect(() => {\r\n    if (!isAuthenticated) router.push(\"/\");\r\n  }, [isAuthenticated]);\r\n  const uploadFileToClient = (event) => {\r\n    if (event.target.files && event.target.files[0]) {\r\n      const i = event.target.files[0];\r\n      setFile(i);\r\n      setCreateObjectURL(URL.createObjectURL(i));\r\n    }\r\n  };\r\n\r\n  const { data, mutate } = useSWR(\r\n    [GetCandidateById, id],\r\n    (query, id) => hasura.request(query, { id }),\r\n    {\r\n      initialData,\r\n      revalidateOnMount: true,\r\n    }\r\n  );\r\n  // if (isAuthenticated) return null;\r\n  const onSubmit = async ({\r\n    name,\r\n    last_name,\r\n    email,\r\n    domain,\r\n    phone_number,\r\n    password,\r\n    confirmpassword,\r\n    manager_id,\r\n  }) => {\r\n    const SetStatus = gql`\r\n      mutation MyMutation($id: Int!) {\r\n        update_Candidate_by_pk(pk_columns: { id: $id }, _set: { Status: 1 }) {\r\n          id\r\n          Status\r\n        }\r\n      }\r\n    `;\r\n    const {\r\n      User: [foundUser],\r\n    } = await hasura.request(GetUserByEmail, {\r\n      email,\r\n    });\r\n    if (foundUser) {\r\n      alert(\"Email already exists , please try another\");\r\n    } else if (password != confirmpassword) {\r\n      alert(\"Passwords don't match\");\r\n    } else {\r\n      try {\r\n        await hasura.request(SetStatus, { id: id });\r\n        mutate();\r\n        await createUser({\r\n          name,\r\n          last_name,\r\n          email,\r\n          domain,\r\n          phone_number,\r\n          password,\r\n          created_at,\r\n          manager_id,\r\n          File: data.Candidate_by_pk.File,\r\n          manager_id,\r\n        });\r\n\r\n        // await fetch(\"/api/AcceptEmail\", {\r\n        //   method: \"POST\",\r\n        //   headers: { \"content-type\": \"application/json\" },\r\n        //   body: JSON.stringify(data),\r\n        // });\r\n        // router.push(\"/CandidatList\");\r\n      } catch ({ message }) {\r\n        setError(\"email\", {\r\n          type: \"manual\",\r\n          message,\r\n        });\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"page-content-wrapper\">\r\n      <div className=\"page-content\" style={{ minHeight: 1500 }}>\r\n        {\" \"}\r\n        <div class=\"profile-content\">\r\n          <div class=\"col-md-12\">\r\n            {\" \"}\r\n            <div class=\"col-md-6\">\r\n              {\" \"}\r\n              <div class=\"portlet light \">\r\n                <div class=\"portlet-body\">\r\n                  {\" \"}\r\n                  <h3 class=\"font-green\">New AMAIER ! </h3> <hr />{\" \"}\r\n                  <div>\r\n                    <img\r\n                      style={{\r\n                        display: \"block\",\r\n                        objectFit: \"cover\",\r\n                        width: 500,\r\n                        height: 470,\r\n                        margin: \"auto\",\r\n                      }}\r\n                      src=\"../aam.jpg\"\r\n                    ></img>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-md-6\">\r\n              <div class=\"portlet light \">\r\n                <div class=\"portlet-body\">\r\n                  <form class=\"register-form\" onSubmit={handleSubmit(onSubmit)}>\r\n                    <div class=\"content\">\r\n                      {\" \"}\r\n                      <h3 class=\"font-green\">Register Candidate</h3>{\" \"}\r\n                      <div class=\"form-group\">\r\n                        {\" \"}\r\n                        <label className=\"control-label\">First name</label>\r\n                        <input\r\n                          defaultValue={data.Candidate_by_pk.Name}\r\n                          class=\"form-control form-control-solid placeholder-no-fix\"\r\n                          name=\"name\"\r\n                          id=\"name\"\r\n                          ref={register}\r\n                          placeholder=\"first name\"\r\n                          required\r\n                        />\r\n                      </div>\r\n                      <div class=\"form-group\">\r\n                        {\" \"}\r\n                        <label className=\"control-label\">Last name</label>\r\n                        <input\r\n                          defaultValue={data.Candidate_by_pk.Last_Name}\r\n                          class=\"form-control form-control-solid placeholder-no-fix\"\r\n                          name=\"last_name\"\r\n                          id=\"last_name\"\r\n                          ref={register}\r\n                          placeholder=\"last name\"\r\n                          required\r\n                        />\r\n                      </div>\r\n                      <div class=\"form-group\">\r\n                        <label className=\"control-label\">Email</label>\r\n                        <input\r\n                          defaultValue={data.Candidate_by_pk.Email}\r\n                          class=\"form-control form-control-solid placeholder-no-fix\"\r\n                          type=\"email\"\r\n                          name=\"email\"\r\n                          id=\"email\"\r\n                          ref={register({\r\n                            required: \"You must provide a email.\",\r\n                            pattern: {\r\n                              value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                              message: \"You must provide a valid email\",\r\n                            },\r\n                          })}\r\n                          placeholder=\"Your email\"\r\n                        />\r\n                        {errors.email && <span>{errors.email.message}</span>}\r\n                      </div>{\" \"}\r\n                      <div class=\"form-group\">\r\n                        {\" \"}\r\n                        <label className=\"control-label\">phone_number</label>\r\n                        <input\r\n                          defaultValue={data.Candidate_by_pk.phone_number}\r\n                          class=\"form-control form-control-solid placeholder-no-fix\"\r\n                          name=\"phone_number\"\r\n                          id=\"phone_number\"\r\n                          ref={register}\r\n                          placeholder=\"phone number\"\r\n                          required\r\n                        />\r\n                      </div>{\" \"}\r\n                      <div class=\"form-group\">\r\n                        {\" \"}\r\n                        <label className=\"control-label\">Domain</label>\r\n                        <input\r\n                          defaultValue={data.Candidate_by_pk.domain}\r\n                          class=\"form-control form-control-solid placeholder-no-fix\"\r\n                          name=\"domain\"\r\n                          id=\"domain\"\r\n                          ref={register}\r\n                          placeholder=\"Domain\"\r\n                          required\r\n                        />\r\n                      </div>{\" \"}\r\n                      <div class=\"form-group\">\r\n                        <label class=\"control-label\">File</label>{\" \"}\r\n                        {data.Candidate_by_pk.File}\r\n                      </div>{\" \"}\r\n                      <div class=\"form-group\">\r\n                        <select\r\n                          name=\"manager_id\"\r\n                          id=\"manager_id\"\r\n                          ref={register}\r\n                          required\r\n                          className=\"form-control select2 \"\r\n                        >\r\n                          {Manager.User.map(({ id, Name, Avatar }) => (\r\n                            <React.Fragment key={id}>\r\n                              {\" \"}\r\n                              {/* <option selected disabled>\r\n                                Select country\r\n                              </option> */}\r\n                              <option value={id}>{Name} </option>\r\n                            </React.Fragment>\r\n                          ))}\r\n                        </select>{\" \"}\r\n                      </div>\r\n                      <div class=\"form-group\">\r\n                        {\" \"}\r\n                        <label className=\"control-label\"> Password</label>\r\n                        <input\r\n                          class=\"form-control form-control-solid placeholder-no-fix\"\r\n                          type=\"password\"\r\n                          name=\"password\"\r\n                          id=\"password\"\r\n                          ref={register({\r\n                            required: \"You must provide a password.\",\r\n                            minLength: {\r\n                              message:\r\n                                \"Your password must be at least 6 characters\",\r\n                              value: 6,\r\n                            },\r\n                          })}\r\n                          placeholder=\"Choose a password\"\r\n                        />\r\n                        {errors.password && (\r\n                          <span>{errors.password.message}</span>\r\n                        )}\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                        <label className=\"control-label\">\r\n                          Confirm Password\r\n                        </label>\r\n                        <input\r\n                          name=\"confirmpassword\"\r\n                          type=\"password\"\r\n                          class=\"form-control form-control-solid placeholder-no-fix\"\r\n                          ref={register({\r\n                            required: \"You must confirm  the password.\",\r\n                            minLength: {\r\n                              message:\r\n                                \"Your password must be at least 6 characters\",\r\n                              value: 6,\r\n                            },\r\n                          })}\r\n                          placeholder=\"Confirm password\"\r\n                        />{\" \"}\r\n                        {errors.confirmpassword && (\r\n                          <span>{errors.confirmpassword.message}</span>\r\n                        )}\r\n                      </div>\r\n                      <div class=\"create-account\">\r\n                        <button\r\n                          type=\"submit\"\r\n                          disabled={isSubmitting}\r\n                          class=\"btn green uppercase\"\r\n                        >\r\n                          Create account\r\n                        </button>\r\n                      </div>{\" \"}\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}