{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\msdtt\\\\OneDrive\\\\Documents\\\\amai_hr_next_js_hasura\\\\amai-hr\\\\pages\\\\Calendar\\\\index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport useSWR, { mutate } from \"swr\";\nimport { useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useForm } from \"react-hook-form\";\nimport React, { useState } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport Link from \"next/link\";\nimport gql from \"graphql-tag\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { format, parseISO } from \"date-fns\";\nimport FullCalendar from \"@fullcalendar/react\"; // must go before plugins\n\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport \"@fullcalendar/common/main.css\";\nimport \"@fullcalendar/daygrid/main.css\";\nimport \"@fullcalendar/timegrid/main.css\";\nimport \"@fullcalendar/list/main.css\";\nimport resourceTimelinePlugin from \"@fullcalendar/resource-timeline\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport listPlugin from \"@fullcalendar/list\";\nimport { hasuraUserClient } from \"../../lib/hasura-user-client\";\nexport default function Projects(_ref) {\n  _s();\n\n  var initialData = _ref.initialData;\n\n  var _useState = useState(new Date()),\n      startDate = _useState[0],\n      setStartDate = _useState[1];\n\n  var _useState2 = useState(new Date()),\n      EndDate = _useState2[0],\n      setEndDate = _useState2[1];\n\n  var _useState3 = useState(null),\n      File = _useState3[0],\n      setFile = _useState3[1];\n\n  var _useState4 = useState(null),\n      createObjectURL = _useState4[0],\n      setCreateObjectURL = _useState4[1];\n\n  var hasura = hasuraUserClient();\n  var router = useRouter();\n  return __jsx(\"div\", {\n    className: \"page-content-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"page-content\",\n    style: {\n      minHeight: 1500\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, \" \", __jsx(\"div\", {\n    \"class\": \"col-md-3 col-sm-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    \"class\": \"col-md-9 col-sm-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, __jsx(FullCalendar, {\n    plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin, listPlugin],\n    headerToolbar: {\n      left: \"prev,next today\",\n      center: \"title\",\n      right: \"dayGridMonth,timeGridWeek,timeGridDay,listWeek\"\n    },\n    initialView: \"dayGridMonth\",\n    editable: true,\n    selectable: true,\n    selectMirror: true,\n    dayMaxEvents: true,\n    events: [{\n      title: \"test\",\n      date: \"2021-07-23\",\n      start: \"2021-07-23\",\n      end: \"2021-07-25\"\n    }, {\n      title: \"test2\",\n      date: \"2021-07-23\",\n      start: \"2021-07-23\"\n    }],\n    eventColor: \"#378006\" // weekends={this.state.weekendsVisible}\n    // initialEvents={INITIAL_EVENTS} // alternatively, use the `events` setting to fetch from a feed\n    // select={this.handleDateSelect}\n    // eventContent={renderEventContent} // custom render function\n    // eventClick={this.handleEventClick}\n    // eventsSet={this.handleEvents} // called after events are initialized/added/changed/removed\n\n    /* you can update a remote database when these fire:\r\n        eventAdd={function(){}}\r\n        eventChange={function(){}}\r\n        eventRemove={function(){}}\r\n        */\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }))));\n}\n\n_s(Projects, \"OIs4cnMlhAOVuGLpR/ekMofy/BE=\", false, function () {\n  return [useRouter];\n});\n\n_c = Projects;\n\nvar _c;\n\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"sources":["C:/Users/msdtt/OneDrive/Documents/amai_hr_next_js_hasura/amai-hr/pages/Calendar/index.js"],"names":["useSWR","mutate","useEffect","useRouter","useForm","React","useState","Form","Link","gql","DatePicker","format","parseISO","FullCalendar","dayGridPlugin","resourceTimelinePlugin","interactionPlugin","timeGridPlugin","listPlugin","hasuraUserClient","Projects","initialData","Date","startDate","setStartDate","EndDate","setEndDate","File","setFile","createObjectURL","setCreateObjectURL","hasura","router","minHeight","left","center","right","title","date","start","end"],"mappings":"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","sourcesContent":["import useSWR, { mutate } from \"swr\";\r\nimport { useEffect } from \"react\";\r\nimport { useRouter } from \"next/router\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport React, { useState } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport Link from \"next/link\";\r\nimport gql from \"graphql-tag\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { format, parseISO } from \"date-fns\";\r\nimport FullCalendar from \"@fullcalendar/react\"; // must go before plugins\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport \"@fullcalendar/common/main.css\";\r\nimport \"@fullcalendar/daygrid/main.css\";\r\nimport \"@fullcalendar/timegrid/main.css\";\r\nimport \"@fullcalendar/list/main.css\";\r\nimport resourceTimelinePlugin from \"@fullcalendar/resource-timeline\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\";\r\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\r\nimport listPlugin from \"@fullcalendar/list\";\r\nimport { hasuraUserClient } from \"../../lib/hasura-user-client\";\r\n\r\nexport default function Projects({ initialData }) {\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const [EndDate, setEndDate] = useState(new Date());\r\n  const [File, setFile] = useState(null);\r\n  const [createObjectURL, setCreateObjectURL] = useState(null);\r\n\r\n  const hasura = hasuraUserClient();\r\n  const router = useRouter();\r\n\r\n  return (\r\n    <div className=\"page-content-wrapper\">\r\n      <div className=\"page-content\" style={{ minHeight: 1500 }}>\r\n        {\" \"}\r\n        <div class=\"col-md-3 col-sm-12\"></div>\r\n        <div class=\"col-md-9 col-sm-12\">\r\n          <FullCalendar\r\n            plugins={[\r\n              dayGridPlugin,\r\n              timeGridPlugin,\r\n              interactionPlugin,\r\n              listPlugin,\r\n            ]}\r\n            headerToolbar={{\r\n              left: \"prev,next today\",\r\n              center: \"title\",\r\n              right: \"dayGridMonth,timeGridWeek,timeGridDay,listWeek\",\r\n            }}\r\n            initialView=\"dayGridMonth\"\r\n            editable={true}\r\n            selectable={true}\r\n            selectMirror={true}\r\n            dayMaxEvents={true}\r\n            events={[\r\n              {\r\n                title: \"test\",\r\n                date: \"2021-07-23\",\r\n                start: \"2021-07-23\",\r\n                end: \"2021-07-25\",\r\n              },\r\n              {\r\n                title: \"test2\",\r\n                date: \"2021-07-23\",\r\n                start: \"2021-07-23\",\r\n              },\r\n            ]}\r\n            eventColor=\"#378006\"\r\n\r\n            // weekends={this.state.weekendsVisible}\r\n            // initialEvents={INITIAL_EVENTS} // alternatively, use the `events` setting to fetch from a feed\r\n            // select={this.handleDateSelect}\r\n            // eventContent={renderEventContent} // custom render function\r\n            // eventClick={this.handleEventClick}\r\n            // eventsSet={this.handleEvents} // called after events are initialized/added/changed/removed\r\n            /* you can update a remote database when these fire:\r\n                eventAdd={function(){}}\r\n                eventChange={function(){}}\r\n                eventRemove={function(){}}\r\n                */\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}