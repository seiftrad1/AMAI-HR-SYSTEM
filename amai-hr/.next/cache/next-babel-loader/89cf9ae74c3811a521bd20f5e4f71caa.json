{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _templateObject,\n    _jsxFileName = \"C:\\\\Users\\\\msdtt\\\\OneDrive\\\\Documents\\\\amai_hr_next_js_hasura\\\\amai-hr\\\\pages\\\\register.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useForm } from \"react-hook-form\";\nimport { hasuraAdminClient, gql } from \"../lib/hasura-admin-client\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport { useAuthState, useAuthDispatch } from \"../context/auth\";\nvar created_at = new Date().toISOString();\nvar GetUserByEmail = gql(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  query GetUserByEmail($email: String!) {\\n    User(where: { email: { _eq: $email } }) {\\n      id\\n    }\\n  }\\n\"])));\nexport var __N_SSG = true;\nexport default function RegisterPage(_ref) {\n  _s();\n\n  var _this = this;\n\n  var Manager = _ref.Manager;\n  var router = useRouter();\n\n  var _useAuthState = useAuthState(),\n      isAuthenticated = _useAuthState.isAuthenticated;\n\n  var _useAuthDispatch = useAuthDispatch(),\n      createUser = _useAuthDispatch.register;\n\n  var _useForm = useForm({\n    defaultValues: {\n      save_last_seen: true\n    }\n  }),\n      handleSubmit = _useForm.handleSubmit,\n      register = _useForm.register,\n      errors = _useForm.errors,\n      isSubmitting = _useForm.formState.isSubmitting,\n      setError = _useForm.setError;\n\n  var _useForm2 = useForm(),\n      register2 = _useForm2.register,\n      errors2 = _useForm2.errors,\n      handleSubmit2 = _useForm2.handleSubmit; // useEffect(() => {\n  //   if (isAuthenticated) {\n  //     router.push(\"/\");\n  //   }\n  // }, [isAuthenticated]);\n  // if (isAuthenticated) return null;\n\n\n  console.log(Manager);\n\n  var onSubmit = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {\n      var name, email, password, last_name, domain, phone_number, confirmpassword, manager_id, _yield$hasuraAdminCli, _yield$hasuraAdminCli2, foundUser, message;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              name = _ref2.name, email = _ref2.email, password = _ref2.password, last_name = _ref2.last_name, domain = _ref2.domain, phone_number = _ref2.phone_number, confirmpassword = _ref2.confirmpassword, manager_id = _ref2.manager_id;\n              _context.next = 3;\n              return hasuraAdminClient.request(GetUserByEmail, {\n                email: email\n              });\n\n            case 3:\n              _yield$hasuraAdminCli = _context.sent;\n              _yield$hasuraAdminCli2 = _slicedToArray(_yield$hasuraAdminCli.User, 1);\n              foundUser = _yield$hasuraAdminCli2[0];\n\n              if (!foundUser) {\n                _context.next = 10;\n                break;\n              }\n\n              alert(\"Email already exists , please try another\");\n              _context.next = 27;\n              break;\n\n            case 10:\n              if (!(password != confirmpassword)) {\n                _context.next = 14;\n                break;\n              }\n\n              alert(\"Passwords don't match\");\n              _context.next = 27;\n              break;\n\n            case 14:\n              _context.prev = 14;\n              _context.next = 17;\n              return createUser({\n                name: name,\n                email: email,\n                password: password,\n                last_name: last_name,\n                domain: domain,\n                phone_number: phone_number,\n                created_at: created_at,\n                manager_id: manager_id\n              });\n\n            case 17:\n              toast(\"Account created\");\n              window.location.reload();\n              _context.next = 21;\n              return fetch(\"/api/emailhey\", {\n                method: \"POST\",\n                headers: {\n                  \"content-type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                  name: name,\n                  email: email,\n                  password: password\n                })\n              });\n\n            case 21:\n              _context.next = 27;\n              break;\n\n            case 23:\n              _context.prev = 23;\n              _context.t0 = _context[\"catch\"](14);\n              message = _context.t0.message;\n              setError(\"email\", {\n                type: \"manual\",\n                message: message\n              });\n\n            case 27:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[14, 23]]);\n    }));\n\n    return function onSubmit(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var onSubmitManager = /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_ref5) {\n      var name, email, password, last_name, domain, phone_number, confirmpassword, _yield$hasuraAdminCli3, _yield$hasuraAdminCli4, foundUser, message;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              name = _ref5.name, email = _ref5.email, password = _ref5.password, last_name = _ref5.last_name, domain = _ref5.domain, phone_number = _ref5.phone_number, confirmpassword = _ref5.confirmpassword;\n              _context2.next = 3;\n              return hasuraAdminClient.request(GetUserByEmail, {\n                email: email\n              });\n\n            case 3:\n              _yield$hasuraAdminCli3 = _context2.sent;\n              _yield$hasuraAdminCli4 = _slicedToArray(_yield$hasuraAdminCli3.User, 1);\n              foundUser = _yield$hasuraAdminCli4[0];\n\n              if (!foundUser) {\n                _context2.next = 10;\n                break;\n              }\n\n              alert(\"Email already exists , please try another\");\n              _context2.next = 25;\n              break;\n\n            case 10:\n              if (!(password != confirmpassword)) {\n                _context2.next = 14;\n                break;\n              }\n\n              alert(\"Passwords don't match\");\n              _context2.next = 25;\n              break;\n\n            case 14:\n              _context2.prev = 14;\n              _context2.next = 17;\n              return createUser({\n                name: name,\n                email: email,\n                password: password,\n                last_name: last_name,\n                domain: domain,\n                phone_number: phone_number,\n                created_at: created_at,\n                Role: Role\n              });\n\n            case 17:\n              toast(\"Account created\");\n              window.location.reload(); // await fetch(\"/api/emailhey\", {\n              //   method: \"POST\",\n              //   headers: { \"content-type\": \"application/json\" },\n              //   body: JSON.stringify({\n              //     name,\n              //     email,\n              //     password,\n              //   }),\n              // });\n\n              _context2.next = 25;\n              break;\n\n            case 21:\n              _context2.prev = 21;\n              _context2.t0 = _context2[\"catch\"](14);\n              message = _context2.t0.message;\n              setError(\"email\", {\n                type: \"manual\",\n                message: message\n              });\n\n            case 25:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[14, 21]]);\n    }));\n\n    return function onSubmitManager(_x2) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(\"div\", {\n    className: \"page-content-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"page-content\",\n    style: {\n      minHeight: 1500\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }\n  }, \" \", __jsx(\"div\", {\n    \"class\": \"profile-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    \"class\": \"col-md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 11\n    }\n  }, \" \", __jsx(\"div\", {\n    \"class\": \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }\n  }, \" \", __jsx(\"div\", {\n    \"class\": \"portlet light \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    \"class\": \"portlet-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 17\n    }\n  }, \" \", __jsx(\"h3\", {\n    \"class\": \"font-green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 19\n    }\n  }, \"New AMAIER ! \"), \" \", __jsx(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 61\n    }\n  }), \" \", __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 19\n    }\n  }, __jsx(\"img\", {\n    style: {\n      display: \"block\",\n      objectFit: \"cover\",\n      width: 500,\n      height: 470,\n      margin: \"auto\"\n    },\n    src: \"../aam.jpg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 21\n    }\n  }))))), __jsx(\"div\", {\n    \"class\": \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    \"class\": \"portlet light \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 15\n    }\n  }, \" \", __jsx(\"div\", {\n    className: \"portlet-title tabbable-line\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"caption caption-md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 19\n    }\n  }, __jsx(\"i\", {\n    className: \"icon-globe theme-font hide\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 21\n    }\n  }), __jsx(\"span\", {\n    className: \"caption-subject font-blue-madison bold uppercase\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 21\n    }\n  }, \"Create user account\")), __jsx(\"ul\", {\n    className: \"nav nav-tabs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 19\n    }\n  }, __jsx(\"li\", {\n    className: \"active\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 21\n    }\n  }, __jsx(\"a\", {\n    href: \"#tab_1_1\",\n    \"data-toggle\": \"tab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 23\n    }\n  }, \"Personal Info\")), __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 21\n    }\n  }, __jsx(\"a\", {\n    href: \"#tab_1_2\",\n    \"data-toggle\": \"tab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 23\n    }\n  }, \"Change Avatar\")))), __jsx(\"div\", {\n    \"class\": \"portlet-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 17\n    }\n  }, \" \", __jsx(\"div\", {\n    className: \"tab-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 19\n    }\n  }, __jsx(\"div\", {\n    className: \"tab-pane active\",\n    id: \"tab_1_1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 21\n    }\n  }, __jsx(\"h3\", {\n    \"class\": \"font-green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 23\n    }\n  }, \"Employee\"), __jsx(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 23\n    }\n  }), __jsx(\"form\", {\n    \"class\": \"register-form\",\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 23\n    }\n  }, __jsx(\"div\", {\n    \"class\": \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 25\n    }\n  }, \" \", __jsx(\"div\", {\n    \"class\": \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 27\n    }\n  }, \" \", __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 29\n    }\n  }, \"First Name\"), \" \", __jsx(\"input\", {\n    \"class\": \"form-control form-control-solid placeholder-no-fix\",\n    name: \"name\",\n    id: \"name\",\n    ref: register,\n    placeholder: \"name\",\n    size: \"10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 29\n    }\n  })), __jsx(\"div\", {\n    \"class\": \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 27\n    }\n  }, \" \", __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 29\n    }\n  }, \"Last Name\"), __jsx(\"input\", {\n    \"class\": \"form-control form-control-solid placeholder-no-fix\",\n    name: \"last_name\",\n    id: \"last_name\",\n    ref: register,\n    placeholder: \"last name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 29\n    }\n  })), errors.name && __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 43\n    }\n  }, errors.name.message), __jsx(\"div\", {\n    \"class\": \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 27\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 29\n    }\n  }, \"Email\"), __jsx(\"input\", {\n    \"class\": \"form-control form-control-solid placeholder-no-fix\",\n    type: \"email\",\n    name: \"email\",\n    id: \"email\",\n    ref: register({\n      required: \"You must provide a email.\",\n      pattern: {\n        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n        message: \"You must provide a valid email\"\n      }\n    }),\n    placeholder: \"Your email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 29\n    }\n  }), errors.email && __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 31\n    }\n  }, errors.email.message)), \" \", __jsx(\"div\", {\n    \"class\": \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 27\n    }\n  }, \" \", __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 29\n    }\n  }, \"Domain\"), __jsx(\"input\", {\n    \"class\": \"form-control form-control-solid placeholder-no-fix\",\n    name: \"domain\",\n    id: \"domain\",\n    ref: register,\n    placeholder: \"domain\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 29\n    }\n  })), \" \", __jsx(\"div\", {\n    \"class\": \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 27\n    }\n  }, \" \", __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 29\n    }\n  }, \"Phone number\"), __jsx(\"input\", {\n    \"class\": \"form-control form-control-solid placeholder-no-fix\",\n    name: \"phone_number\",\n    id: \"phone_number\",\n    ref: register,\n    placeholder: \"Phone number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 29\n    }\n  })), \" \", __jsx(\"div\", {\n    \"class\": \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 27\n    }\n  }, __jsx(\"select\", {\n    name: \"manager_id\",\n    id: \"manager_id\",\n    ref: register,\n    required: true,\n    className: \"form-control select2 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 29\n    }\n  }, Manager.User.map(function (_ref8) {\n    var id = _ref8.id,\n        Name = _ref8.Name,\n        Avatar = _ref8.Avatar;\n    return __jsx(React.Fragment, {\n      key: id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 33\n      }\n    }, \" \", __jsx(\"option\", {\n      selected: true,\n      disabled: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 35\n      }\n    }, \"Select Manager\"), __jsx(\"option\", {\n      value: id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 35\n      }\n    }, Name, \" \"));\n  })), \" \"), __jsx(\"div\", {\n    \"class\": \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 27\n    }\n  }, \" \", __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 29\n    }\n  }, \"Password\"), __jsx(\"input\", {\n    \"class\": \"form-control form-control-solid placeholder-no-fix\",\n    type: \"password\",\n    name: \"password\",\n    id: \"password\",\n    ref: register({\n      required: \"You must provide a password.\",\n      minLength: {\n        message: \"Your password must be at least 6 characters\",\n        value: 6\n      }\n    }),\n    placeholder: \"Choose a password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 29\n    }\n  }), errors.password && __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 31\n    }\n  }, errors.password.message), \" \"), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 27\n    }\n  }, __jsx(\"label\", {\n    className: \"control-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 29\n    }\n  }, \"Confirm Password\"), __jsx(\"input\", {\n    name: \"confirmpassword\",\n    type: \"password\",\n    \"class\": \"form-control form-control-solid placeholder-no-fix\",\n    ref: register({\n      required: \"You must confirm  the password.\",\n      minLength: {\n        message: \"Your password must be at least 6 characters\",\n        value: 6\n      }\n    }),\n    placeholder: \"Confirm password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 29\n    }\n  }), \" \"), __jsx(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 27\n    }\n  }), __jsx(\"div\", {\n    \"class\": \"create-account\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 27\n    }\n  }, __jsx(\"button\", {\n    type: \"submit\",\n    disabled: isSubmitting,\n    \"class\": \"btn green uppercase\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 29\n    }\n  }, \"Create account\"), \" \", __jsx(ToastContainer, {\n    hideProgressBar: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 29\n    }\n  })), \" \"))), \" \", __jsx(\"div\", {\n    className: \"tab-pane\",\n    id: \"tab_1_2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 21\n    }\n  }, \" \", __jsx(\"h3\", {\n    \"class\": \"font-green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 23\n    }\n  }, \"Manager\"), __jsx(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 23\n    }\n  }), __jsx(\"form\", {\n    \"class\": \"register-form\",\n    onSubmit: handleSubmit2(onSubmitManager),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 23\n    }\n  }, __jsx(\"div\", {\n    \"class\": \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 25\n    }\n  }, \" \", __jsx(\"div\", {\n    \"class\": \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 27\n    }\n  }, \" \", __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 29\n    }\n  }, \"First Name\"), \" \", __jsx(\"input\", {\n    \"class\": \"form-control form-control-solid placeholder-no-fix\",\n    name: \"name\",\n    id: \"name\",\n    ref: register2,\n    placeholder: \"name\",\n    size: \"10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 29\n    }\n  })), __jsx(\"div\", {\n    \"class\": \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 27\n    }\n  }, \" \", __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 29\n    }\n  }, \"Last Name\"), __jsx(\"input\", {\n    \"class\": \"form-control form-control-solid placeholder-no-fix\",\n    name: \"last_name\",\n    id: \"last_name\",\n    ref: register2,\n    placeholder: \"last name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 29\n    }\n  })), errors.name && __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 43\n    }\n  }, errors.name.message), __jsx(\"div\", {\n    \"class\": \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 27\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 29\n    }\n  }, \"Email\"), __jsx(\"input\", {\n    \"class\": \"form-control form-control-solid placeholder-no-fix\",\n    type: \"email\",\n    name: \"email\",\n    id: \"email\",\n    ref: register2({\n      required: \"You must provide a email.\",\n      pattern: {\n        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n        message: \"You must provide a valid email\"\n      }\n    }),\n    placeholder: \"Your email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 29\n    }\n  }), errors.email && __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 31\n    }\n  }, errors.email.message)), \" \", __jsx(\"div\", {\n    \"class\": \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 27\n    }\n  }, \" \", __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 29\n    }\n  }, \"Domain\"), __jsx(\"input\", {\n    \"class\": \"form-control form-control-solid placeholder-no-fix\",\n    name: \"domain\",\n    id: \"domain\",\n    ref: register2,\n    placeholder: \"domain\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 29\n    }\n  })), \" \", __jsx(\"div\", {\n    \"class\": \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 27\n    }\n  }, \" \", __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 29\n    }\n  }, \"Phone number\"), __jsx(\"input\", {\n    \"class\": \"form-control form-control-solid placeholder-no-fix\",\n    name: \"phone_number\",\n    id: \"phone_number\",\n    ref: register2,\n    placeholder: \"Phone number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 29\n    }\n  })), \" \", __jsx(\"div\", {\n    \"class\": \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 27\n    }\n  }, \" \", __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 29\n    }\n  }, \"Password\"), __jsx(\"input\", {\n    \"class\": \"form-control form-control-solid placeholder-no-fix\",\n    type: \"password\",\n    name: \"password\",\n    id: \"password\",\n    ref: register2({\n      required: \"You must provide a password.\",\n      minLength: {\n        message: \"Your password must be at least 6 characters\",\n        value: 6\n      }\n    }),\n    placeholder: \"Choose a password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 29\n    }\n  }), errors.password && __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 31\n    }\n  }, errors.password.message), \" \"), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 27\n    }\n  }, __jsx(\"label\", {\n    className: \"control-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 29\n    }\n  }, \"Confirm Password\"), __jsx(\"input\", {\n    name: \"confirmpassword\",\n    type: \"password\",\n    \"class\": \"form-control form-control-solid placeholder-no-fix\",\n    ref: register2({\n      required: \"You must confirm  the password.\",\n      minLength: {\n        message: \"Your password must be at least 6 characters\",\n        value: 6\n      }\n    }),\n    placeholder: \"Confirm password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 29\n    }\n  }), \" \"), __jsx(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 27\n    }\n  }), __jsx(\"div\", {\n    \"class\": \"create-account\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 27\n    }\n  }, __jsx(\"button\", {\n    type: \"submit\",\n    disabled: isSubmitting,\n    \"class\": \"btn green uppercase\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 29\n    }\n  }, \"Create account\"), \" \", __jsx(ToastContainer, {\n    hideProgressBar: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 495,\n      columnNumber: 29\n    }\n  })), \" \")))))))), \" \")));\n}\n\n_s(RegisterPage, \"y+z9T1o9SEATA2VQPTzG/WuBIr4=\", false, function () {\n  return [useRouter, useAuthState, useAuthDispatch, useForm, useForm];\n});\n\n_c = RegisterPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"sources":["C:/Users/msdtt/OneDrive/Documents/amai_hr_next_js_hasura/amai-hr/pages/register.js"],"names":["useEffect","useRouter","useForm","hasuraAdminClient","gql","ToastContainer","toast","useAuthState","useAuthDispatch","created_at","Date","toISOString","GetUserByEmail","RegisterPage","Manager","router","isAuthenticated","createUser","register","defaultValues","save_last_seen","handleSubmit","errors","isSubmitting","formState","setError","register2","errors2","handleSubmit2","console","log","onSubmit","name","email","password","last_name","domain","phone_number","confirmpassword","manager_id","request","User","foundUser","alert","window","location","reload","fetch","method","headers","body","JSON","stringify","message","type","onSubmitManager","Role","minHeight","display","objectFit","width","height","margin","required","pattern","value","map","id","Name","Avatar","minLength"],"mappings":";;;;;;;;;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,iBAAT,EAA4BC,GAA5B,QAAuC,4BAAvC;AACA,SAASC,cAAT,EAAyBC,KAAzB,QAAsC,gBAAtC;AAEA,SAASC,YAAT,EAAuBC,eAAvB,QAA8C,iBAA9C;AACA,IAAMC,UAAU,GAAG,IAAIC,IAAJ,GAAWC,WAAX,EAAnB;AACA,IAAMC,cAAc,GAAGR,GAAH,uLAApB;;AA2BA,eAAe,SAASS,YAAT,OAAmC;AAAA;;AAAA;;AAAA,MAAXC,OAAW,QAAXA,OAAW;AAChD,MAAMC,MAAM,GAAGd,SAAS,EAAxB;;AACA,sBAA4BM,YAAY,EAAxC;AAAA,MAAQS,eAAR,iBAAQA,eAAR;;AACA,yBAAiCR,eAAe,EAAhD;AAAA,MAAkBS,UAAlB,oBAAQC,QAAR;;AACA,iBAMIhB,OAAO,CAAC;AAAEiB,IAAAA,aAAa,EAAE;AAAEC,MAAAA,cAAc,EAAE;AAAlB;AAAjB,GAAD,CANX;AAAA,MACEC,YADF,YACEA,YADF;AAAA,MAEEH,QAFF,YAEEA,QAFF;AAAA,MAGEI,MAHF,YAGEA,MAHF;AAAA,MAIeC,YAJf,YAIEC,SAJF,CAIeD,YAJf;AAAA,MAKEE,QALF,YAKEA,QALF;;AAOA,kBAIIvB,OAAO,EAJX;AAAA,MACYwB,SADZ,aACER,QADF;AAAA,MAEUS,OAFV,aAEEL,MAFF;AAAA,MAGgBM,aAHhB,aAGEP,YAHF,CAXgD,CAiBhD;AACA;AACA;AACA;AACA;AAEA;;;AACAQ,EAAAA,OAAO,CAACC,GAAR,CAAYhB,OAAZ;;AACA,MAAMiB,QAAQ;AAAA,yEAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AACfC,cAAAA,IADe,SACfA,IADe,EAEfC,KAFe,SAEfA,KAFe,EAGfC,QAHe,SAGfA,QAHe,EAIfC,SAJe,SAIfA,SAJe,EAKfC,MALe,SAKfA,MALe,EAMfC,YANe,SAMfA,YANe,EAOfC,eAPe,SAOfA,eAPe,EAQfC,UARe,SAQfA,UARe;AAAA;AAAA,qBAYLpC,iBAAiB,CAACqC,OAAlB,CAA0B5B,cAA1B,EAA0C;AAClDqB,gBAAAA,KAAK,EAALA;AADkD,eAA1C,CAZK;;AAAA;AAAA;AAAA,4EAWbQ,IAXa;AAWNC,cAAAA,SAXM;;AAAA,mBAgBXA,SAhBW;AAAA;AAAA;AAAA;;AAiBbC,cAAAA,KAAK,CAAC,2CAAD,CAAL;AAjBa;AAAA;;AAAA;AAAA,oBAkBJT,QAAQ,IAAII,eAlBR;AAAA;AAAA;AAAA;;AAmBbK,cAAAA,KAAK,CAAC,uBAAD,CAAL;AAnBa;AAAA;;AAAA;AAAA;AAAA;AAAA,qBAsBL1B,UAAU,CAAC;AACfe,gBAAAA,IAAI,EAAJA,IADe;AAEfC,gBAAAA,KAAK,EAALA,KAFe;AAGfC,gBAAAA,QAAQ,EAARA,QAHe;AAIfC,gBAAAA,SAAS,EAATA,SAJe;AAKfC,gBAAAA,MAAM,EAANA,MALe;AAMfC,gBAAAA,YAAY,EAAZA,YANe;AAOf5B,gBAAAA,UAAU,EAAVA,UAPe;AAQf8B,gBAAAA,UAAU,EAAVA;AARe,eAAD,CAtBL;;AAAA;AAgCXjC,cAAAA,KAAK,CAAC,iBAAD,CAAL;AACAsC,cAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AAjCW;AAAA,qBAmCLC,KAAK,CAAC,eAAD,EAAkB;AAC3BC,gBAAAA,MAAM,EAAE,MADmB;AAE3BC,gBAAAA,OAAO,EAAE;AAAE,kCAAgB;AAAlB,iBAFkB;AAG3BC,gBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBpB,kBAAAA,IAAI,EAAJA,IADmB;AAEnBC,kBAAAA,KAAK,EAALA,KAFmB;AAGnBC,kBAAAA,QAAQ,EAARA;AAHmB,iBAAf;AAHqB,eAAlB,CAnCA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AA4CFmB,cAAAA,OA5CE,eA4CFA,OA5CE;AA6CX5B,cAAAA,QAAQ,CAAC,OAAD,EAAU;AAChB6B,gBAAAA,IAAI,EAAE,QADU;AAEhBD,gBAAAA,OAAO,EAAPA;AAFgB,eAAV,CAAR;;AA7CW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAARtB,QAAQ;AAAA;AAAA;AAAA,KAAd;;AAoDA,MAAMwB,eAAe;AAAA,yEAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AACtBvB,cAAAA,IADsB,SACtBA,IADsB,EAEtBC,KAFsB,SAEtBA,KAFsB,EAGtBC,QAHsB,SAGtBA,QAHsB,EAItBC,SAJsB,SAItBA,SAJsB,EAKtBC,MALsB,SAKtBA,MALsB,EAMtBC,YANsB,SAMtBA,YANsB,EAOtBC,eAPsB,SAOtBA,eAPsB;AAAA;AAAA,qBAWZnC,iBAAiB,CAACqC,OAAlB,CAA0B5B,cAA1B,EAA0C;AAClDqB,gBAAAA,KAAK,EAALA;AADkD,eAA1C,CAXY;;AAAA;AAAA;AAAA,6EAUpBQ,IAVoB;AAUbC,cAAAA,SAVa;;AAAA,mBAelBA,SAfkB;AAAA;AAAA;AAAA;;AAgBpBC,cAAAA,KAAK,CAAC,2CAAD,CAAL;AAhBoB;AAAA;;AAAA;AAAA,oBAiBXT,QAAQ,IAAII,eAjBD;AAAA;AAAA;AAAA;;AAkBpBK,cAAAA,KAAK,CAAC,uBAAD,CAAL;AAlBoB;AAAA;;AAAA;AAAA;AAAA;AAAA,qBAqBZ1B,UAAU,CAAC;AACfe,gBAAAA,IAAI,EAAJA,IADe;AAEfC,gBAAAA,KAAK,EAALA,KAFe;AAGfC,gBAAAA,QAAQ,EAARA,QAHe;AAIfC,gBAAAA,SAAS,EAATA,SAJe;AAKfC,gBAAAA,MAAM,EAANA,MALe;AAMfC,gBAAAA,YAAY,EAAZA,YANe;AAOf5B,gBAAAA,UAAU,EAAVA,UAPe;AAQf+C,gBAAAA,IAAI,EAAJA;AARe,eAAD,CArBE;;AAAA;AA+BlBlD,cAAAA,KAAK,CAAC,iBAAD,CAAL;AACAsC,cAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,GAhCkB,CAkClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA1CkB;AAAA;;AAAA;AAAA;AAAA;AA2CTO,cAAAA,OA3CS,gBA2CTA,OA3CS;AA4ClB5B,cAAAA,QAAQ,CAAC,OAAD,EAAU;AAChB6B,gBAAAA,IAAI,EAAE,QADU;AAEhBD,gBAAAA,OAAO,EAAPA;AAFgB,eAAV,CAAR;;AA5CkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAfE,eAAe;AAAA;AAAA;AAAA,KAArB;;AAmDA,SACE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAA8B,IAAA,KAAK,EAAE;AAAEE,MAAAA,SAAS,EAAE;AAAb,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,GADH,EAEE;AAAK,aAAM,iBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,aAAM,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,GADH,EAEE;AAAK,aAAM,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,GADH,EAEE;AAAK,aAAM,gBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,aAAM,cAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,GADH,EAEE;AAAI,aAAM,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFF,OAE4C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAF5C,EAEmD,GAFnD,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAE,OADJ;AAELC,MAAAA,SAAS,EAAE,OAFN;AAGLC,MAAAA,KAAK,EAAE,GAHF;AAILC,MAAAA,MAAM,EAAE,GAJH;AAKLC,MAAAA,MAAM,EAAE;AALH,KADT;AAQE,IAAA,GAAG,EAAC,YARN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAHF,CADF,CAFF,CAFF,EAuBE;AAAK,aAAM,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,aAAM,gBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,GADH,EAEE;AAAK,IAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,4BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAM,IAAA,SAAS,EAAC,kDAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAFF,CADF,EAOE;AAAI,IAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,IAAI,EAAC,UAAR;AAAmB,mBAAY,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CADF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,IAAI,EAAC,UAAR;AAAmB,mBAAY,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CANF,CAPF,CAFF,EAsBE;AAAK,aAAM,cAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,GADH,EAEE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAiC,IAAA,EAAE,EAAC,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,aAAM,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AACE,aAAM,eADR;AAEE,IAAA,QAAQ,EAAEzC,YAAY,CAACU,QAAD,CAFxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE;AAAK,aAAM,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,GADH,EAEE;AAAK,aAAM,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,GADH,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,EAE4B,GAF5B,EAGE;AACE,aAAM,oDADR;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,EAAE,EAAC,MAHL;AAIE,IAAA,GAAG,EAAEb,QAJP;AAKE,IAAA,WAAW,EAAC,MALd;AAME,IAAA,IAAI,EAAC,IANP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CAFF,EAcE;AAAK,aAAM,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,GADH,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,EAGE;AACE,aAAM,oDADR;AAEE,IAAA,IAAI,EAAC,WAFP;AAGE,IAAA,EAAE,EAAC,WAHL;AAIE,IAAA,GAAG,EAAEA,QAJP;AAKE,IAAA,WAAW,EAAC,WALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CAdF,EAyBGI,MAAM,CAACU,IAAP,IAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOV,MAAM,CAACU,IAAP,CAAYqB,OAAnB,CAzBlB,EA0BE;AAAK,aAAM,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AACE,aAAM,oDADR;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,EAAE,EAAC,OAJL;AAKE,IAAA,GAAG,EAAEnC,QAAQ,CAAC;AACZ6C,MAAAA,QAAQ,EAAE,2BADE;AAEZC,MAAAA,OAAO,EAAE;AACPC,QAAAA,KAAK,EACH,0CAFK;AAGPZ,QAAAA,OAAO,EAAE;AAHF;AAFG,KAAD,CALf;AAaE,IAAA,WAAW,EAAC,YAbd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAiBG/B,MAAM,CAACW,KAAP,IACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOX,MAAM,CAACW,KAAP,CAAaoB,OAApB,CAlBJ,CA1BF,EA8CS,GA9CT,EA+CE;AAAK,aAAM,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,GADH,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAGE;AACE,aAAM,oDADR;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,EAAE,EAAC,QAHL;AAIE,IAAA,GAAG,EAAEnC,QAJP;AAKE,IAAA,WAAW,EAAC,QALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CA/CF,EAyDS,GAzDT,EA0DE;AAAK,aAAM,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,GADH,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,EAGE;AACE,aAAM,oDADR;AAEE,IAAA,IAAI,EAAC,cAFP;AAGE,IAAA,EAAE,EAAC,cAHL;AAIE,IAAA,GAAG,EAAEA,QAJP;AAKE,IAAA,WAAW,EAAC,cALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CA1DF,EAoES,GApET,EAqEE;AAAK,aAAM,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,YADP;AAEE,IAAA,EAAE,EAAC,YAFL;AAGE,IAAA,GAAG,EAAEA,QAHP;AAIE,IAAA,QAAQ,MAJV;AAKE,IAAA,SAAS,EAAC,uBALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGJ,OAAO,CAAC2B,IAAR,CAAayB,GAAb,CAAiB;AAAA,QAAGC,EAAH,SAAGA,EAAH;AAAA,QAAOC,IAAP,SAAOA,IAAP;AAAA,QAAaC,MAAb,SAAaA,MAAb;AAAA,WAChB,MAAC,KAAD,CAAO,QAAP;AAAgB,MAAA,GAAG,EAAEF,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,GADH,EAEE;AAAQ,MAAA,QAAQ,MAAhB;AAAiB,MAAA,QAAQ,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF,EAKE;AAAQ,MAAA,KAAK,EAAEA,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoBC,IAApB,MALF,CADgB;AAAA,GAAjB,CAPH,CADF,EAiBY,GAjBZ,CArEF,EAwFE;AAAK,aAAM,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,GADH,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,EAGE;AACE,aAAM,oDADR;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,IAAI,EAAC,UAHP;AAIE,IAAA,EAAE,EAAC,UAJL;AAKE,IAAA,GAAG,EAAElD,QAAQ,CAAC;AACZ6C,MAAAA,QAAQ,EAAE,8BADE;AAEZO,MAAAA,SAAS,EAAE;AACTjB,QAAAA,OAAO,EACL,6CAFO;AAGTY,QAAAA,KAAK,EAAE;AAHE;AAFC,KAAD,CALf;AAaE,IAAA,WAAW,EAAC,mBAbd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAkBG3C,MAAM,CAACY,QAAP,IACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOZ,MAAM,CAACY,QAAP,CAAgBmB,OAAvB,CAnBJ,EAoBK,GApBL,CAxFF,EA8GE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,SAAS,EAAC,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAIE;AACE,IAAA,IAAI,EAAC,iBADP;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,aAAM,oDAHR;AAIE,IAAA,GAAG,EAAEnC,QAAQ,CAAC;AACZ6C,MAAAA,QAAQ,EAAE,iCADE;AAEZO,MAAAA,SAAS,EAAE;AACTjB,QAAAA,OAAO,EACL,6CAFO;AAGTY,QAAAA,KAAK,EAAE;AAHE;AAFC,KAAD,CAJf;AAYE,IAAA,WAAW,EAAC,kBAZd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAiBK,GAjBL,CA9GF,EAiIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjIF,EAkIE;AAAK,aAAM,gBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,QAAQ,EAAE1C,YAFZ;AAGE,aAAM,qBAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAOY,GAPZ,EAQE,MAAC,cAAD;AAAgB,IAAA,eAAe,EAAE,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CAlIF,EA2IS,GA3IT,CAJF,CAHF,CADF,EAsJS,GAtJT,EAuJE;AAAK,IAAA,SAAS,EAAC,UAAf;AAA0B,IAAA,EAAE,EAAC,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,GADH,EAEE;AAAI,aAAM,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE;AACE,aAAM,eADR;AAEE,IAAA,QAAQ,EAAEK,aAAa,CAAC2B,eAAD,CAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE;AAAK,aAAM,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,GADH,EAEE;AAAK,aAAM,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,GADH,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,EAE4B,GAF5B,EAGE;AACE,aAAM,oDADR;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,EAAE,EAAC,MAHL;AAIE,IAAA,GAAG,EAAE7B,SAJP;AAKE,IAAA,WAAW,EAAC,MALd;AAME,IAAA,IAAI,EAAC,IANP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CAFF,EAcE;AAAK,aAAM,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,GADH,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,EAGE;AACE,aAAM,oDADR;AAEE,IAAA,IAAI,EAAC,WAFP;AAGE,IAAA,EAAE,EAAC,WAHL;AAIE,IAAA,GAAG,EAAEA,SAJP;AAKE,IAAA,WAAW,EAAC,WALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CAdF,EAyBGJ,MAAM,CAACU,IAAP,IAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOV,MAAM,CAACU,IAAP,CAAYqB,OAAnB,CAzBlB,EA0BE;AAAK,aAAM,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AACE,aAAM,oDADR;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,EAAE,EAAC,OAJL;AAKE,IAAA,GAAG,EAAE3B,SAAS,CAAC;AACbqC,MAAAA,QAAQ,EAAE,2BADG;AAEbC,MAAAA,OAAO,EAAE;AACPC,QAAAA,KAAK,EACH,0CAFK;AAGPZ,QAAAA,OAAO,EAAE;AAHF;AAFI,KAAD,CALhB;AAaE,IAAA,WAAW,EAAC,YAbd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAiBG/B,MAAM,CAACW,KAAP,IACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOX,MAAM,CAACW,KAAP,CAAaoB,OAApB,CAlBJ,CA1BF,EA8CS,GA9CT,EA+CE;AAAK,aAAM,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,GADH,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAGE;AACE,aAAM,oDADR;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,EAAE,EAAC,QAHL;AAIE,IAAA,GAAG,EAAE3B,SAJP;AAKE,IAAA,WAAW,EAAC,QALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CA/CF,EAyDS,GAzDT,EA0DE;AAAK,aAAM,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,GADH,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,EAGE;AACE,aAAM,oDADR;AAEE,IAAA,IAAI,EAAC,cAFP;AAGE,IAAA,EAAE,EAAC,cAHL;AAIE,IAAA,GAAG,EAAEA,SAJP;AAKE,IAAA,WAAW,EAAC,cALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CA1DF,EAoES,GApET,EAqEE;AAAK,aAAM,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,GADH,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,EAGE;AACE,aAAM,oDADR;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,IAAI,EAAC,UAHP;AAIE,IAAA,EAAE,EAAC,UAJL;AAKE,IAAA,GAAG,EAAEA,SAAS,CAAC;AACbqC,MAAAA,QAAQ,EAAE,8BADG;AAEbO,MAAAA,SAAS,EAAE;AACTjB,QAAAA,OAAO,EACL,6CAFO;AAGTY,QAAAA,KAAK,EAAE;AAHE;AAFE,KAAD,CALhB;AAaE,IAAA,WAAW,EAAC,mBAbd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAkBG3C,MAAM,CAACY,QAAP,IACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOZ,MAAM,CAACY,QAAP,CAAgBmB,OAAvB,CAnBJ,EAoBK,GApBL,CArEF,EA2FE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,SAAS,EAAC,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAIE;AACE,IAAA,IAAI,EAAC,iBADP;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,aAAM,oDAHR;AAIE,IAAA,GAAG,EAAE3B,SAAS,CAAC;AACbqC,MAAAA,QAAQ,EAAE,iCADG;AAEbO,MAAAA,SAAS,EAAE;AACTjB,QAAAA,OAAO,EACL,6CAFO;AAGTY,QAAAA,KAAK,EAAE;AAHE;AAFE,KAAD,CAJhB;AAYE,IAAA,WAAW,EAAC,kBAZd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAiBK,GAjBL,CA3FF,EA8GE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA9GF,EA+GE;AAAK,aAAM,gBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,QAAQ,EAAE1C,YAFZ;AAGE,aAAM,qBAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAOY,GAPZ,EAQE,MAAC,cAAD;AAAgB,IAAA,eAAe,EAAE,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CA/GF,EAwHS,GAxHT,CAJF,CAJF,CAvJF,CAFF,CAtBF,CADF,CAvBF,CADF,EAgVS,GAhVT,CAFF,CADF,CADF;AAyVD;;GAzduBV,Y;UACPZ,S,EACaM,Y,EACKC,e,EAO7BN,O,EAKAA,O;;;KAfkBW,Y","sourcesContent":["import { useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useForm } from \"react-hook-form\";\nimport { hasuraAdminClient, gql } from \"../lib/hasura-admin-client\";\nimport { ToastContainer, toast } from \"react-toastify\";\n\nimport { useAuthState, useAuthDispatch } from \"../context/auth\";\nconst created_at = new Date().toISOString();\nconst GetUserByEmail = gql`\n  query GetUserByEmail($email: String!) {\n    User(where: { email: { _eq: $email } }) {\n      id\n    }\n  }\n`;\nconst GetUserByRole = gql`\n  query MyQuery {\n    User(where: { Role: { _eq: \"Manager\" } }) {\n      id\n      Name\n      Last_Name\n      email\n      Avatar\n    }\n  }\n`;\nexport const getStaticProps = async () => {\n  const Manager = await hasuraAdminClient.request(GetUserByRole);\n\n  return {\n    props: {\n      Manager,\n    },\n  };\n};\nexport default function RegisterPage({ Manager }) {\n  const router = useRouter();\n  const { isAuthenticated } = useAuthState();\n  const { register: createUser } = useAuthDispatch();\n  const {\n    handleSubmit,\n    register,\n    errors,\n    formState: { isSubmitting },\n    setError,\n  } = useForm({ defaultValues: { save_last_seen: true } });\n  const {\n    register: register2,\n    errors: errors2,\n    handleSubmit: handleSubmit2,\n  } = useForm();\n\n  // useEffect(() => {\n  //   if (isAuthenticated) {\n  //     router.push(\"/\");\n  //   }\n  // }, [isAuthenticated]);\n\n  // if (isAuthenticated) return null;\n  console.log(Manager);\n  const onSubmit = async ({\n    name,\n    email,\n    password,\n    last_name,\n    domain,\n    phone_number,\n    confirmpassword,\n    manager_id,\n  }) => {\n    const {\n      User: [foundUser],\n    } = await hasuraAdminClient.request(GetUserByEmail, {\n      email,\n    });\n\n    if (foundUser) {\n      alert(\"Email already exists , please try another\");\n    } else if (password != confirmpassword) {\n      alert(\"Passwords don't match\");\n    } else {\n      try {\n        await createUser({\n          name,\n          email,\n          password,\n          last_name,\n          domain,\n          phone_number,\n          created_at,\n          manager_id,\n        });\n        toast(\"Account created\");\n        window.location.reload();\n\n        await fetch(\"/api/emailhey\", {\n          method: \"POST\",\n          headers: { \"content-type\": \"application/json\" },\n          body: JSON.stringify({\n            name,\n            email,\n            password,\n          }),\n        });\n      } catch ({ message }) {\n        setError(\"email\", {\n          type: \"manual\",\n          message,\n        });\n      }\n    }\n  };\n  const onSubmitManager = async ({\n    name,\n    email,\n    password,\n    last_name,\n    domain,\n    phone_number,\n    confirmpassword,\n  }) => {\n    const {\n      User: [foundUser],\n    } = await hasuraAdminClient.request(GetUserByEmail, {\n      email,\n    });\n\n    if (foundUser) {\n      alert(\"Email already exists , please try another\");\n    } else if (password != confirmpassword) {\n      alert(\"Passwords don't match\");\n    } else {\n      try {\n        await createUser({\n          name,\n          email,\n          password,\n          last_name,\n          domain,\n          phone_number,\n          created_at,\n          Role,\n        });\n        toast(\"Account created\");\n        window.location.reload();\n\n        // await fetch(\"/api/emailhey\", {\n        //   method: \"POST\",\n        //   headers: { \"content-type\": \"application/json\" },\n        //   body: JSON.stringify({\n        //     name,\n        //     email,\n        //     password,\n        //   }),\n        // });\n      } catch ({ message }) {\n        setError(\"email\", {\n          type: \"manual\",\n          message,\n        });\n      }\n    }\n  };\n  return (\n    <div className=\"page-content-wrapper\">\n      <div className=\"page-content\" style={{ minHeight: 1500 }}>\n        {\" \"}\n        <div class=\"profile-content\">\n          <div class=\"col-md-12\">\n            {\" \"}\n            <div class=\"col-md-6\">\n              {\" \"}\n              <div class=\"portlet light \">\n                <div class=\"portlet-body\">\n                  {\" \"}\n                  <h3 class=\"font-green\">New AMAIER ! </h3> <hr />{\" \"}\n                  <div>\n                    <img\n                      style={{\n                        display: \"block\",\n                        objectFit: \"cover\",\n                        width: 500,\n                        height: 470,\n                        margin: \"auto\",\n                      }}\n                      src=\"../aam.jpg\"\n                    ></img>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"col-md-6\">\n              <div class=\"portlet light \">\n                {\" \"}\n                <div className=\"portlet-title tabbable-line\">\n                  <div className=\"caption caption-md\">\n                    <i className=\"icon-globe theme-font hide\"></i>\n                    <span className=\"caption-subject font-blue-madison bold uppercase\">\n                      Create user account\n                    </span>\n                  </div>\n                  <ul className=\"nav nav-tabs\">\n                    <li className=\"active\">\n                      <a href=\"#tab_1_1\" data-toggle=\"tab\">\n                        Personal Info\n                      </a>\n                    </li>\n                    <li>\n                      <a href=\"#tab_1_2\" data-toggle=\"tab\">\n                        Change Avatar\n                      </a>\n                    </li>\n                  </ul>\n                </div>\n                <div class=\"portlet-body\">\n                  {\" \"}\n                  <div className=\"tab-content\">\n                    <div className=\"tab-pane active\" id=\"tab_1_1\">\n                      <h3 class=\"font-green\">Employee</h3>\n                      <hr />\n                      <form\n                        class=\"register-form\"\n                        onSubmit={handleSubmit(onSubmit)}\n                      >\n                        <div class=\"content\">\n                          {\" \"}\n                          <div class=\"form-group\">\n                            {\" \"}\n                            <label>First Name</label>{\" \"}\n                            <input\n                              class=\"form-control form-control-solid placeholder-no-fix\"\n                              name=\"name\"\n                              id=\"name\"\n                              ref={register}\n                              placeholder=\"name\"\n                              size=\"10\"\n                            />\n                          </div>\n                          <div class=\"form-group\">\n                            {\" \"}\n                            <label>Last Name</label>\n                            <input\n                              class=\"form-control form-control-solid placeholder-no-fix\"\n                              name=\"last_name\"\n                              id=\"last_name\"\n                              ref={register}\n                              placeholder=\"last name\"\n                            />\n                          </div>\n                          {errors.name && <span>{errors.name.message}</span>}\n                          <div class=\"form-group\">\n                            <label>Email</label>\n                            <input\n                              class=\"form-control form-control-solid placeholder-no-fix\"\n                              type=\"email\"\n                              name=\"email\"\n                              id=\"email\"\n                              ref={register({\n                                required: \"You must provide a email.\",\n                                pattern: {\n                                  value:\n                                    /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                                  message: \"You must provide a valid email\",\n                                },\n                              })}\n                              placeholder=\"Your email\"\n                            />\n                            {errors.email && (\n                              <span>{errors.email.message}</span>\n                            )}\n                          </div>{\" \"}\n                          <div class=\"form-group\">\n                            {\" \"}\n                            <label>Domain</label>\n                            <input\n                              class=\"form-control form-control-solid placeholder-no-fix\"\n                              name=\"domain\"\n                              id=\"domain\"\n                              ref={register}\n                              placeholder=\"domain\"\n                            />\n                          </div>{\" \"}\n                          <div class=\"form-group\">\n                            {\" \"}\n                            <label>Phone number</label>\n                            <input\n                              class=\"form-control form-control-solid placeholder-no-fix\"\n                              name=\"phone_number\"\n                              id=\"phone_number\"\n                              ref={register}\n                              placeholder=\"Phone number\"\n                            />\n                          </div>{\" \"}\n                          <div class=\"form-group\">\n                            <select\n                              name=\"manager_id\"\n                              id=\"manager_id\"\n                              ref={register}\n                              required\n                              className=\"form-control select2 \"\n                            >\n                              {Manager.User.map(({ id, Name, Avatar }) => (\n                                <React.Fragment key={id}>\n                                  {\" \"}\n                                  <option selected disabled>\n                                    Select Manager\n                                  </option>\n                                  <option value={id}>{Name} </option>\n                                </React.Fragment>\n                              ))}\n                            </select>{\" \"}\n                          </div>\n                          <div class=\"form-group\">\n                            {\" \"}\n                            <label>Password</label>\n                            <input\n                              class=\"form-control form-control-solid placeholder-no-fix\"\n                              type=\"password\"\n                              name=\"password\"\n                              id=\"password\"\n                              ref={register({\n                                required: \"You must provide a password.\",\n                                minLength: {\n                                  message:\n                                    \"Your password must be at least 6 characters\",\n                                  value: 6,\n                                },\n                              })}\n                              placeholder=\"Choose a password\"\n                            />\n                            {errors.password && (\n                              <span>{errors.password.message}</span>\n                            )}{\" \"}\n                          </div>\n                          <div className=\"form-group\">\n                            <label className=\"control-label\">\n                              Confirm Password\n                            </label>\n                            <input\n                              name=\"confirmpassword\"\n                              type=\"password\"\n                              class=\"form-control form-control-solid placeholder-no-fix\"\n                              ref={register({\n                                required: \"You must confirm  the password.\",\n                                minLength: {\n                                  message:\n                                    \"Your password must be at least 6 characters\",\n                                  value: 6,\n                                },\n                              })}\n                              placeholder=\"Confirm password\"\n                            />{\" \"}\n                          </div>\n                          <hr />\n                          <div class=\"create-account\">\n                            <button\n                              type=\"submit\"\n                              disabled={isSubmitting}\n                              class=\"btn green uppercase\"\n                            >\n                              Create account\n                            </button>{\" \"}\n                            <ToastContainer hideProgressBar={true} />\n                          </div>{\" \"}\n                        </div>\n                      </form>\n                    </div>{\" \"}\n                    <div className=\"tab-pane\" id=\"tab_1_2\">\n                      {\" \"}\n                      <h3 class=\"font-green\">Manager</h3>\n                      <hr />\n                      <form\n                        class=\"register-form\"\n                        onSubmit={handleSubmit2(onSubmitManager)}\n                      >\n                        <div class=\"content\">\n                          {\" \"}\n                          <div class=\"form-group\">\n                            {\" \"}\n                            <label>First Name</label>{\" \"}\n                            <input\n                              class=\"form-control form-control-solid placeholder-no-fix\"\n                              name=\"name\"\n                              id=\"name\"\n                              ref={register2}\n                              placeholder=\"name\"\n                              size=\"10\"\n                            />\n                          </div>\n                          <div class=\"form-group\">\n                            {\" \"}\n                            <label>Last Name</label>\n                            <input\n                              class=\"form-control form-control-solid placeholder-no-fix\"\n                              name=\"last_name\"\n                              id=\"last_name\"\n                              ref={register2}\n                              placeholder=\"last name\"\n                            />\n                          </div>\n                          {errors.name && <span>{errors.name.message}</span>}\n                          <div class=\"form-group\">\n                            <label>Email</label>\n                            <input\n                              class=\"form-control form-control-solid placeholder-no-fix\"\n                              type=\"email\"\n                              name=\"email\"\n                              id=\"email\"\n                              ref={register2({\n                                required: \"You must provide a email.\",\n                                pattern: {\n                                  value:\n                                    /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                                  message: \"You must provide a valid email\",\n                                },\n                              })}\n                              placeholder=\"Your email\"\n                            />\n                            {errors.email && (\n                              <span>{errors.email.message}</span>\n                            )}\n                          </div>{\" \"}\n                          <div class=\"form-group\">\n                            {\" \"}\n                            <label>Domain</label>\n                            <input\n                              class=\"form-control form-control-solid placeholder-no-fix\"\n                              name=\"domain\"\n                              id=\"domain\"\n                              ref={register2}\n                              placeholder=\"domain\"\n                            />\n                          </div>{\" \"}\n                          <div class=\"form-group\">\n                            {\" \"}\n                            <label>Phone number</label>\n                            <input\n                              class=\"form-control form-control-solid placeholder-no-fix\"\n                              name=\"phone_number\"\n                              id=\"phone_number\"\n                              ref={register2}\n                              placeholder=\"Phone number\"\n                            />\n                          </div>{\" \"}\n                          <div class=\"form-group\">\n                            {\" \"}\n                            <label>Password</label>\n                            <input\n                              class=\"form-control form-control-solid placeholder-no-fix\"\n                              type=\"password\"\n                              name=\"password\"\n                              id=\"password\"\n                              ref={register2({\n                                required: \"You must provide a password.\",\n                                minLength: {\n                                  message:\n                                    \"Your password must be at least 6 characters\",\n                                  value: 6,\n                                },\n                              })}\n                              placeholder=\"Choose a password\"\n                            />\n                            {errors.password && (\n                              <span>{errors.password.message}</span>\n                            )}{\" \"}\n                          </div>\n                          <div className=\"form-group\">\n                            <label className=\"control-label\">\n                              Confirm Password\n                            </label>\n                            <input\n                              name=\"confirmpassword\"\n                              type=\"password\"\n                              class=\"form-control form-control-solid placeholder-no-fix\"\n                              ref={register2({\n                                required: \"You must confirm  the password.\",\n                                minLength: {\n                                  message:\n                                    \"Your password must be at least 6 characters\",\n                                  value: 6,\n                                },\n                              })}\n                              placeholder=\"Confirm password\"\n                            />{\" \"}\n                          </div>\n                          <hr />\n                          <div class=\"create-account\">\n                            <button\n                              type=\"submit\"\n                              disabled={isSubmitting}\n                              class=\"btn green uppercase\"\n                            >\n                              Create account\n                            </button>{\" \"}\n                            <ToastContainer hideProgressBar={true} />\n                          </div>{\" \"}\n                        </div>\n                      </form>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>{\" \"}\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}