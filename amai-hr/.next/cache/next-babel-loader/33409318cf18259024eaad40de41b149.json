{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _templateObject,\n    _templateObject2,\n    _jsxFileName = \"C:\\\\Users\\\\msdtt\\\\OneDrive\\\\Documents\\\\amai_hr_next_js_hasura\\\\amai-hr\\\\pages\\\\Todo.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport Layout from \"./Components/Layout\";\nimport { useAuthState } from \"../context/auth\";\nimport { gql } from \"../lib/hasura-admin-client\";\nimport { hasuraUserClient } from \"../lib/hasura-user-client\";\nvar GetTodos = gql(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  {\\n    Todo {\\n      Description\\n      Name\\n      Date\\n      User {\\n        Name\\n        id\\n      }\\n    }\\n  }\\n\"])));\nvar InsertTask = gql(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n  mutation InsertTask(\\n    $Description: String!\\n    $Name: String!\\n    $Date: timestamptz!\\n    $user_id: Int!\\n  ) {\\n    insert_Todo_one(\\n      object: {\\n        Email: $Email\\n        Last_Name: $Last_Name\\n        Name: $Name\\n        domain: $domain\\n        phone_number: $phone_number\\n      }\\n    ) {\\n      Email\\n      Last_Name\\n      Name\\n      domain\\n      id\\n      phone_number\\n    }\\n  }\\n\"])));\n\nvar handleUpdate = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n    var id, message, _yield$hasura$request, update_posts_by_pk;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            id = _ref.id, message = _ref.message;\n            _context.next = 3;\n            return hasura.request(UpdatePost, {\n              id: id,\n              message: message\n            });\n\n          case 3:\n            _yield$hasura$request = _context.sent;\n            update_posts_by_pk = _yield$hasura$request.update_posts_by_pk;\n            mutate(_objectSpread(_objectSpread({}, data), {}, {\n              threads_by_pk: _objectSpread(_objectSpread({}, data.threads_by_pk), {}, {\n                posts: data.threads_by_pk.posts.reduce(function (posts, post) {\n                  if (post.id === id) return [].concat(_toConsumableArray(posts), [_objectSpread(_objectSpread({}, post), update_posts_by_pk)]);\n                  return [].concat(_toConsumableArray(posts), [post]);\n                }, [])\n              })\n            }));\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function handleUpdate(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport var __N_SSG = true;\nexport default function Candidat() {\n  _s();\n\n  var _this = this;\n\n  var router = useRouter();\n\n  var _useAuthState = useAuthState(),\n      isAuthenticated = _useAuthState.isAuthenticated,\n      user = _useAuthState.user;\n\n  var hasura = hasuraUserClient();\n\n  var _useForm = useForm(),\n      handleSubmit = _useForm.handleSubmit,\n      register = _useForm.register,\n      control = _useForm.control,\n      errors = _useForm.errors,\n      isSubmitting = _useForm.formState.isSubmitting;\n\n  useEffect(function () {\n    if (!isAuthenticated) router.push(\"/\");\n  }, [isAuthenticated]);\n  if (!isAuthenticated) return null;\n\n  var onSubmit = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_ref3) {\n      var Email, Last_Name, Name, domain, phone_number, _yield$hasura$request2, insert_Candidate_one;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              Email = _ref3.Email, Last_Name = _ref3.Last_Name, Name = _ref3.Name, domain = _ref3.domain, phone_number = _ref3.phone_number;\n              console.log(phone_number);\n              _context2.prev = 2;\n              _context2.next = 5;\n              return hasura.request(InsertTask, {\n                Email: Email,\n                Last_Name: Last_Name,\n                Name: Name,\n                domain: domain,\n                phone_number: phone_number\n              });\n\n            case 5:\n              _yield$hasura$request2 = _context2.sent;\n              insert_Candidate_one = _yield$hasura$request2.insert_Candidate_one;\n              router.push(\"/CandidatList\");\n              _context2.next = 13;\n              break;\n\n            case 10:\n              _context2.prev = 10;\n              _context2.t0 = _context2[\"catch\"](2);\n              console.log(_context2.t0);\n\n            case 13:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[2, 10]]);\n    }));\n\n    return function onSubmit(_x2) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(React.Fragment, null, __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"page-content-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"page-content\",\n    style: {\n      minHeight: 1500\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    \"class\": \"profile-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    \"class\": \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    \"class\": \"col-md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    \"class\": \"portlet light \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 19\n    }\n  }, __jsx(\"div\", {\n    \"class\": \"portlet-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    \"class\": \"tab-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 23\n    }\n  }, __jsx(\"div\", {\n    \"class\": \"tab-pane active\",\n    id: \"tab_1_1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 25\n    }\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 27\n    }\n  }, __jsx(\"div\", {\n    \"class\": \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 29\n    }\n  }, __jsx(\"label\", {\n    \"class\": \"control-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 31\n    }\n  }, \"First Name\"), __jsx(\"input\", {\n    name: \"Name\",\n    id: \"Name\",\n    type: \"text\",\n    placeholder: \"First Name\",\n    \"class\": \"form-control\",\n    ref: register({\n      required: \"You must select a category for your thread\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 31\n    }\n  }), \" \"), __jsx(\"div\", {\n    \"class\": \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 29\n    }\n  }, __jsx(\"label\", {\n    \"class\": \"control-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 31\n    }\n  }, \"Last Name\"), __jsx(\"input\", {\n    name: \"Last_Name\",\n    id: \"Last_Name\",\n    type: \"text\",\n    placeholder: \"Last Name\",\n    \"class\": \"form-control\",\n    ref: register({\n      required: \"You must select a category for your thread\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 31\n    }\n  }), \" \"), __jsx(\"div\", {\n    \"class\": \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 29\n    }\n  }, __jsx(\"label\", {\n    \"class\": \"control-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 31\n    }\n  }, \"Mobile Number\"), __jsx(\"input\", {\n    name: \"phone_number\",\n    id: \"phone_number\",\n    type: \"text\",\n    placeholder: \"+1 646 580 DEMO (6284)\",\n    \"class\": \"form-control\",\n    ref: register({\n      required: \"You must select a category for your thread\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 31\n    }\n  }), \" \"), __jsx(\"div\", {\n    \"class\": \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 29\n    }\n  }, __jsx(\"label\", {\n    \"class\": \"control-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 31\n    }\n  }, \"Email\"), __jsx(\"input\", {\n    name: \"Email\",\n    id: \"Email\",\n    type: \"email\",\n    placeholder: \"Design, Web etc.\",\n    \"class\": \"form-control\",\n    ref: register({\n      required: \"You must select a category for your thread\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 31\n    }\n  }), \" \"), __jsx(\"div\", {\n    \"class\": \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 29\n    }\n  }, __jsx(\"label\", {\n    \"class\": \"control-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 31\n    }\n  }, \"Domain\"), __jsx(\"input\", {\n    name: \"domain\",\n    id: \"domain\",\n    type: \"text\",\n    placeholder: \"Web Developer\",\n    \"class\": \"form-control\",\n    ref: register({\n      required: \"You must select a category for your thread\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 31\n    }\n  }), \" \"), __jsx(\"select\", {\n    name: \"categoryId\",\n    id: \"categoryId\",\n    ref: register({\n      required: \"You must select a category for your thread\"\n    }),\n    className: \"appearance-none bg-transparent w-full\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 29\n    }\n  }, User.map(function (_ref5) {\n    var id = _ref5.id,\n        Name = _ref5.Name;\n    return __jsx(React.Fragment, {\n      key: id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 33\n      }\n    }, __jsx(\"option\", {\n      value: id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 35\n      }\n    }, Name), \")}\");\n  })), __jsx(\"div\", {\n    \"class\": \"margiv-top-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 29\n    }\n  }, __jsx(\"button\", {\n    type: \"submit\",\n    \"class\": \"btn green\",\n    disabled: isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 31\n    }\n  }, \" \", \"Save Changes\", \" \"), __jsx(\"a\", {\n    href: \"#\",\n    \"class\": \"btn default\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 31\n    }\n  }, \" \", \"Cancel\", \" \"))))))))))), \" \")));\n}\n\n_s(Candidat, \"8llguNPCjCtdST3PLfdi7yuAebI=\", false, function () {\n  return [useRouter, useAuthState, useForm];\n});\n\n_c = Candidat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Candidat\");","map":{"version":3,"sources":["C:/Users/msdtt/OneDrive/Documents/amai_hr_next_js_hasura/amai-hr/pages/Todo.js"],"names":["useState","useEffect","useRouter","useForm","Controller","Layout","useAuthState","gql","hasuraUserClient","GetTodos","InsertTask","handleUpdate","id","message","hasura","request","UpdatePost","update_posts_by_pk","mutate","data","threads_by_pk","posts","reduce","post","Candidat","router","isAuthenticated","user","handleSubmit","register","control","errors","isSubmitting","formState","push","onSubmit","Email","Last_Name","Name","domain","phone_number","console","log","insert_Candidate_one","minHeight","required","User","map"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { useRouter } from \"next/router\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport Layout from \"./Components/Layout\";\r\n\r\nimport { useAuthState } from \"../context/auth\";\r\nimport { gql, hasuraAdminClient } from \"../lib/hasura-admin-client\";\r\nimport { hasuraUserClient } from \"../lib/hasura-user-client\";\r\n\r\nconst GetUsers = gql`\r\n  {\r\n    User {\r\n      Name\r\n      id\r\n    }\r\n  }\r\n`;\r\nconst GetTodos = gql`\r\n  {\r\n    Todo {\r\n      Description\r\n      Name\r\n      Date\r\n      User {\r\n        Name\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst InsertTask = gql`\r\n  mutation InsertTask(\r\n    $Description: String!\r\n    $Name: String!\r\n    $Date: timestamptz!\r\n    $user_id: Int!\r\n  ) {\r\n    insert_Todo_one(\r\n      object: {\r\n        Email: $Email\r\n        Last_Name: $Last_Name\r\n        Name: $Name\r\n        domain: $domain\r\n        phone_number: $phone_number\r\n      }\r\n    ) {\r\n      Email\r\n      Last_Name\r\n      Name\r\n      domain\r\n      id\r\n      phone_number\r\n    }\r\n  }\r\n`;\r\nconst handleUpdate = async ({ id, message }) => {\r\n  const { update_posts_by_pk } = await hasura.request(UpdatePost, {\r\n    id,\r\n    message,\r\n  });\r\n\r\n  mutate({\r\n    ...data,\r\n    threads_by_pk: {\r\n      ...data.threads_by_pk,\r\n      posts: data.threads_by_pk.posts.reduce((posts, post) => {\r\n        if (post.id === id)\r\n          return [\r\n            ...posts,\r\n            {\r\n              ...post,\r\n              ...update_posts_by_pk,\r\n            },\r\n          ];\r\n\r\n        return [...posts, post];\r\n      }, []),\r\n    },\r\n  });\r\n};\r\nexport const getStaticProps = async () => {\r\n  const { User } = await hasuraAdminClient.request(GetUsers);\r\n\r\n  return {\r\n    props: {\r\n      User,\r\n    },\r\n  };\r\n};\r\n\r\nexport default function Candidat() {\r\n  const router = useRouter();\r\n  const { isAuthenticated, user } = useAuthState();\r\n  const hasura = hasuraUserClient();\r\n  const {\r\n    handleSubmit,\r\n    register,\r\n    control,\r\n    errors,\r\n    formState: { isSubmitting },\r\n  } = useForm();\r\n\r\n  useEffect(() => {\r\n    if (!isAuthenticated) router.push(\"/\");\r\n  }, [isAuthenticated]);\r\n\r\n  if (!isAuthenticated) return null;\r\n\r\n  const onSubmit = async ({ Email, Last_Name, Name, domain, phone_number }) => {\r\n    console.log(phone_number);\r\n    try {\r\n      const { insert_Candidate_one } = await hasura.request(InsertTask, {\r\n        Email,\r\n        Last_Name,\r\n        Name,\r\n        domain,\r\n        phone_number,\r\n      });\r\n\r\n      router.push(`/CandidatList`);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Layout>\r\n        <div className=\"page-content-wrapper\">\r\n          <div className=\"page-content\" style={{ minHeight: 1500 }}>\r\n            <div class=\"profile-content\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n                  <div class=\"portlet light \">\r\n                    <div class=\"portlet-body\">\r\n                      <div class=\"tab-content\">\r\n                        <div class=\"tab-pane active\" id=\"tab_1_1\">\r\n                          <form onSubmit={handleSubmit(onSubmit)}>\r\n                            <div class=\"form-group\">\r\n                              <label class=\"control-label\">First Name</label>\r\n                              <input\r\n                                name=\"Name\"\r\n                                id=\"Name\"\r\n                                type=\"text\"\r\n                                placeholder=\"First Name\"\r\n                                class=\"form-control\"\r\n                                ref={register({\r\n                                  required:\r\n                                    \"You must select a category for your thread\",\r\n                                })}\r\n                              />{\" \"}\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                              <label class=\"control-label\">Last Name</label>\r\n                              <input\r\n                                name=\"Last_Name\"\r\n                                id=\"Last_Name\"\r\n                                type=\"text\"\r\n                                placeholder=\"Last Name\"\r\n                                class=\"form-control\"\r\n                                ref={register({\r\n                                  required:\r\n                                    \"You must select a category for your thread\",\r\n                                })}\r\n                              />{\" \"}\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                              <label class=\"control-label\">Mobile Number</label>\r\n                              <input\r\n                                name=\"phone_number\"\r\n                                id=\"phone_number\"\r\n                                type=\"text\"\r\n                                placeholder=\"+1 646 580 DEMO (6284)\"\r\n                                class=\"form-control\"\r\n                                ref={register({\r\n                                  required:\r\n                                    \"You must select a category for your thread\",\r\n                                })}\r\n                              />{\" \"}\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                              <label class=\"control-label\">Email</label>\r\n                              <input\r\n                                name=\"Email\"\r\n                                id=\"Email\"\r\n                                type=\"email\"\r\n                                placeholder=\"Design, Web etc.\"\r\n                                class=\"form-control\"\r\n                                ref={register({\r\n                                  required:\r\n                                    \"You must select a category for your thread\",\r\n                                })}\r\n                              />{\" \"}\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                              <label class=\"control-label\">Domain</label>\r\n                              <input\r\n                                name=\"domain\"\r\n                                id=\"domain\"\r\n                                type=\"text\"\r\n                                placeholder=\"Web Developer\"\r\n                                class=\"form-control\"\r\n                                ref={register({\r\n                                  required:\r\n                                    \"You must select a category for your thread\",\r\n                                })}\r\n                              />{\" \"}\r\n                            </div>\r\n                            <select\r\n                              name=\"categoryId\"\r\n                              id=\"categoryId\"\r\n                              ref={register({\r\n                                required:\r\n                                  \"You must select a category for your thread\",\r\n                              })}\r\n                              className=\"appearance-none bg-transparent w-full\"\r\n                            >\r\n                              {User.map(({ id, Name }) => (\r\n                                <React.Fragment key={id}>\r\n                                  <option value={id}>{Name}</option>\r\n                                  )}\r\n                                </React.Fragment>\r\n                              ))}\r\n                            </select>\r\n                            <div class=\"margiv-top-10\">\r\n                              <button\r\n                                type=\"submit\"\r\n                                class=\"btn green\"\r\n                                disabled={isSubmitting}\r\n                              >\r\n                                {\" \"}\r\n                                Save Changes{\" \"}\r\n                              </button>\r\n                              <a href=\"#\" class=\"btn default\">\r\n                                {\" \"}\r\n                                Cancel{\" \"}\r\n                              </a>\r\n                            </div>\r\n                          </form>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>{\" \"}\r\n        </div>\r\n      </Layout>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}