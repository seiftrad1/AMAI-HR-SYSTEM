{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _templateObject,\n    _jsxFileName = \"C:\\\\Users\\\\msdtt\\\\OneDrive\\\\Documents\\\\amai_hr_next_js_hasura\\\\amai-hr\\\\pages\\\\RegisterCandidatAccount\\\\[id].js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect } from \"react\";\nimport useSWR from \"swr\";\nimport { useRouter } from \"next/router\";\nimport { useForm } from \"react-hook-form\";\nimport { gql } from \"../../lib/hasura-user-client\";\nimport { useAuthState, useAuthDispatch } from \"../../context/auth\";\nvar GetCandidateById = gql(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  query GetCategoryById($id: Int!) {\\n    Candidate_by_pk(id: $id) {\\n      id\\n      Email\\n      Last_Name\\n      Name\\n      domain\\n      phone_number\\n      Status\\n    }\\n  }\\n\"])));\nexport var __N_SSG = true;\nexport default function RegisterPage() {\n  _s();\n\n  var _useRouter = useRouter(),\n      query = _useRouter.query;\n\n  var router = useRouter();\n  var id = query.id;\n\n  var _useAuthState = useAuthState(),\n      isAuthenticated = _useAuthState.isAuthenticated;\n\n  var _useAuthDispatch = useAuthDispatch(),\n      createUser = _useAuthDispatch.register;\n\n  var _useForm = useForm({\n    defaultValues: {\n      save_last_seen: true\n    }\n  }),\n      handleSubmit = _useForm.handleSubmit,\n      register = _useForm.register,\n      errors = _useForm.errors,\n      isSubmitting = _useForm.formState.isSubmitting,\n      setError = _useForm.setError; // useEffect(() => {\n  //   if (isAuthenticated) {\n  //     router.push(\"/\");\n  //   }\n  // }, [isAuthenticated]);\n\n\n  var _useSWR = useSWR([GetCandidateById, id], function (query, id) {\n    return hasura.request(query, {\n      id: id\n    });\n  }, {\n    initialData: initialData,\n    revalidateOnMount: true\n  }),\n      data = _useSWR.data,\n      mutate = _useSWR.mutate; // if (isAuthenticated) return null;\n\n\n  var onSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n      var name, email, password, save_last_seen, message;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              name = _ref.name, email = _ref.email, password = _ref.password, save_last_seen = _ref.save_last_seen;\n              _context.prev = 1;\n              _context.next = 4;\n              return createUser({\n                name: name,\n                email: email,\n                password: password,\n                save_last_seen: save_last_seen\n              });\n\n            case 4:\n              router.push(\"/\");\n              _context.next = 11;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](1);\n              message = _context.t0.message;\n              setError(\"email\", {\n                type: \"manual\",\n                message: message\n              });\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 7]]);\n    }));\n\n    return function onSubmit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(\"body\", {\n    className: \"login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }\n  }, __jsx(\"form\", {\n    \"class\": \"register-form\",\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    \"class\": \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, \" \", __jsx(\"h3\", {\n    \"class\": \"font-green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, \"Register Candidate\"), \" \", __jsx(\"div\", {\n    \"class\": \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, __jsx(\"input\", {\n    defaultValue: data.Candidate_by_pk.Name,\n    \"class\": \"form-control form-control-solid placeholder-no-fix\",\n    name: \"name\",\n    id: \"name\",\n    ref: register({\n      required: \"You must provide a name.\"\n    }),\n    placeholder: \"Your name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  })), __jsx(\"div\", {\n    \"class\": \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }, __jsx(\"input\", {\n    defaultValue: data.Candidate_by_pk.Last_Name,\n    \"class\": \"form-control form-control-solid placeholder-no-fix\",\n    name: \"name\",\n    id: \"name\",\n    ref: register({\n      required: \"You must provide a name.\"\n    }),\n    placeholder: \"Your name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  })), __jsx(\"div\", {\n    \"class\": \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }\n  }, __jsx(\"input\", {\n    defaultValue: data.Candidate_by_pk.phone_number,\n    \"class\": \"form-control form-control-solid placeholder-no-fix\",\n    name: \"name\",\n    id: \"name\",\n    ref: register({\n      required: \"You must provide a name.\"\n    }),\n    placeholder: \"Your name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  })), errors.name && __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 27\n    }\n  }, errors.name.message), __jsx(\"div\", {\n    \"class\": \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 11\n    }\n  }, \" \", __jsx(\"input\", {\n    defaultValue: data.Candidate_by_pk.Email,\n    \"class\": \"form-control form-control-solid placeholder-no-fix\",\n    type: \"email\",\n    name: \"email\",\n    id: \"email\",\n    ref: register({\n      required: \"You must provide a email.\",\n      pattern: {\n        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n        message: \"You must provide a valid email\"\n      }\n    }),\n    placeholder: \"Your email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }), errors.email && __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 30\n    }\n  }, errors.email.message)), __jsx(\"div\", {\n    \"class\": \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 11\n    }\n  }, \" \", __jsx(\"input\", {\n    \"class\": \"form-control form-control-solid placeholder-no-fix\",\n    type: \"password\",\n    name: \"password\",\n    id: \"password\",\n    ref: register({\n      required: \"You must provide a password.\",\n      minLength: {\n        message: \"Your password must be at least 6 characters\",\n        value: 6\n      }\n    }),\n    placeholder: \"Choose a password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }\n  }), errors.password && __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 33\n    }\n  }, errors.password.message)), __jsx(\"div\", {\n    \"class\": \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 11\n    }\n  }, \" \", __jsx(\"label\", {\n    htmlFor: \"save_last_seen\",\n    \"class\": \"rememberme check mt-checkbox mt-checkbox-outline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    type: \"checkbox\",\n    id: \"save_last_seen\",\n    name: \"save_last_seen\",\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 15\n    }\n  }), \"Show as online to other users\", __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 44\n    }\n  }))), __jsx(\"div\", {\n    \"class\": \"create-account\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 11\n    }\n  }, __jsx(\"button\", {\n    type: \"submit\",\n    disabled: isSubmitting,\n    \"class\": \"btn green uppercase\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }\n  }, \"Create account\")), \" \")));\n}\n\n_s(RegisterPage, \"rxG9MPkP4ewqpexvLU7DRGnhyhE=\", false, function () {\n  return [useRouter, useRouter, useAuthState, useAuthDispatch, useForm, useSWR];\n});\n\n_c = RegisterPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"sources":["C:/Users/msdtt/OneDrive/Documents/amai_hr_next_js_hasura/amai-hr/pages/RegisterCandidatAccount/[id].js"],"names":["useEffect","useSWR","useRouter","useForm","gql","useAuthState","useAuthDispatch","GetCandidateById","RegisterPage","query","router","id","isAuthenticated","createUser","register","defaultValues","save_last_seen","handleSubmit","errors","isSubmitting","formState","setError","hasura","request","initialData","revalidateOnMount","data","mutate","onSubmit","name","email","password","push","message","type","Candidate_by_pk","Name","required","Last_Name","phone_number","Email","pattern","value","minLength"],"mappings":"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","sourcesContent":["import { useEffect } from \"react\";\r\nimport useSWR from \"swr\";\r\n\r\nimport { useRouter } from \"next/router\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { gql, hasuraUserClient } from \"../../lib/hasura-user-client\";\r\nimport { useAuthState, useAuthDispatch } from \"../../context/auth\";\r\nconst GetCandidateIds = gql`\r\n  {\r\n    Candidate {\r\n      id\r\n      Email\r\n      Last_Name\r\n      Name\r\n      domain\r\n      phone_number\r\n      Status\r\n    }\r\n  }\r\n`;\r\n\r\nconst GetCandidateById = gql`\r\n  query GetCategoryById($id: Int!) {\r\n    Candidate_by_pk(id: $id) {\r\n      id\r\n      Email\r\n      Last_Name\r\n      Name\r\n      domain\r\n      phone_number\r\n      Status\r\n    }\r\n  }\r\n`;\r\nexport const getStaticPaths = async () => {\r\n  const hasura = hasuraUserClient();\r\n\r\n  const { Candidate } = await hasura.request(GetCandidateIds);\r\n\r\n  return {\r\n    paths: Candidate.map(({ id }) => ({\r\n      params: {\r\n        id: id.toString(),\r\n      },\r\n    })),\r\n    fallback: false,\r\n  };\r\n};\r\n\r\nexport const getStaticProps = async ({ params }) => {\r\n  const hasura = hasuraUserClient();\r\n  const { id } = params;\r\n  console.log(params);\r\n  console.log(id);\r\n  const initialData = await hasura.request(GetCandidateById, { id });\r\n\r\n  return {\r\n    props: {\r\n      initialData,\r\n    },\r\n    revalidate: 1,\r\n  };\r\n};\r\nexport default function RegisterPage() {\r\n  const { query } = useRouter();\r\n  const router = useRouter();\r\n\r\n  const { id } = query;\r\n  const { isAuthenticated } = useAuthState();\r\n  const { register: createUser } = useAuthDispatch();\r\n  const {\r\n    handleSubmit,\r\n    register,\r\n    errors,\r\n    formState: { isSubmitting },\r\n    setError,\r\n  } = useForm({ defaultValues: { save_last_seen: true } });\r\n  // useEffect(() => {\r\n  //   if (isAuthenticated) {\r\n  //     router.push(\"/\");\r\n  //   }\r\n  // }, [isAuthenticated]);\r\n  const { data, mutate } = useSWR(\r\n    [GetCandidateById, id],\r\n    (query, id) => hasura.request(query, { id }),\r\n    {\r\n      initialData,\r\n      revalidateOnMount: true,\r\n    }\r\n  );\r\n  // if (isAuthenticated) return null;\r\n  const onSubmit = async ({ name, email, password, save_last_seen }) => {\r\n    try {\r\n      await createUser({ name, email, password, save_last_seen });\r\n\r\n      router.push(\"/\");\r\n    } catch ({ message }) {\r\n      setError(\"email\", {\r\n        type: \"manual\",\r\n        message,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <body className=\"login\">\r\n      <form class=\"register-form\" onSubmit={handleSubmit(onSubmit)}>\r\n        <div class=\"content\">\r\n          {\" \"}\r\n          <h3 class=\"font-green\">Register Candidate</h3>{\" \"}\r\n          <div class=\"form-group\">\r\n            <input\r\n              defaultValue={data.Candidate_by_pk.Name}\r\n              class=\"form-control form-control-solid placeholder-no-fix\"\r\n              name=\"name\"\r\n              id=\"name\"\r\n              ref={register({\r\n                required: \"You must provide a name.\",\r\n              })}\r\n              placeholder=\"Your name\"\r\n            />\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <input\r\n              defaultValue={data.Candidate_by_pk.Last_Name}\r\n              class=\"form-control form-control-solid placeholder-no-fix\"\r\n              name=\"name\"\r\n              id=\"name\"\r\n              ref={register({\r\n                required: \"You must provide a name.\",\r\n              })}\r\n              placeholder=\"Your name\"\r\n            />\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <input\r\n              defaultValue={data.Candidate_by_pk.phone_number}\r\n              class=\"form-control form-control-solid placeholder-no-fix\"\r\n              name=\"name\"\r\n              id=\"name\"\r\n              ref={register({\r\n                required: \"You must provide a name.\",\r\n              })}\r\n              placeholder=\"Your name\"\r\n            />\r\n          </div>\r\n          {errors.name && <span>{errors.name.message}</span>}\r\n          <div class=\"form-group\">\r\n            {\" \"}\r\n            <input\r\n              defaultValue={data.Candidate_by_pk.Email}\r\n              class=\"form-control form-control-solid placeholder-no-fix\"\r\n              type=\"email\"\r\n              name=\"email\"\r\n              id=\"email\"\r\n              ref={register({\r\n                required: \"You must provide a email.\",\r\n                pattern: {\r\n                  value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                  message: \"You must provide a valid email\",\r\n                },\r\n              })}\r\n              placeholder=\"Your email\"\r\n            />\r\n            {errors.email && <span>{errors.email.message}</span>}\r\n          </div>\r\n          <div class=\"form-group\">\r\n            {\" \"}\r\n            <input\r\n              class=\"form-control form-control-solid placeholder-no-fix\"\r\n              type=\"password\"\r\n              name=\"password\"\r\n              id=\"password\"\r\n              ref={register({\r\n                required: \"You must provide a password.\",\r\n                minLength: {\r\n                  message: \"Your password must be at least 6 characters\",\r\n                  value: 6,\r\n                },\r\n              })}\r\n              placeholder=\"Choose a password\"\r\n            />\r\n            {errors.password && <span>{errors.password.message}</span>}\r\n          </div>\r\n          <div class=\"form-group\">\r\n            {\" \"}\r\n            <label\r\n              htmlFor=\"save_last_seen\"\r\n              class=\"rememberme check mt-checkbox mt-checkbox-outline\"\r\n            >\r\n              <input\r\n                type=\"checkbox\"\r\n                id=\"save_last_seen\"\r\n                name=\"save_last_seen\"\r\n                ref={register}\r\n              />\r\n              Show as online to other users<span></span>\r\n            </label>\r\n          </div>\r\n          <div class=\"create-account\">\r\n            <button\r\n              type=\"submit\"\r\n              disabled={isSubmitting}\r\n              class=\"btn green uppercase\"\r\n            >\r\n              Create account\r\n            </button>\r\n          </div>{\" \"}\r\n        </div>\r\n      </form>\r\n    </body>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}