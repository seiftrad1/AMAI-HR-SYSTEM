{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _templateObject,\n    _templateObject2,\n    _templateObject3,\n    _jsxFileName = \"C:\\\\Users\\\\msdtt\\\\OneDrive\\\\Documents\\\\amai_hr_next_js_hasura\\\\amai-hr\\\\pages\\\\UpdateTodo\\\\[id].js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport useSWR, { mutate } from \"swr\";\nimport gql from \"graphql-tag\";\nimport { useRouter } from \"next/router\";\nimport { hasuraUserClient } from \"../../lib/hasura-user-client\";\nvar GetCandidats = gql(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  query MyQuery($id: Int!) {\\n    todo_user(where: { user_id: { _eq: $id } }) {\\n      id\\n      todo_id\\n      completed\\n      user_id\\n      Todo {\\n        Description\\n        Name\\n        Type\\n        id\\n        Date\\n      }\\n    }\\n  }\\n\"])));\nvar UpdateCompleted = gql(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n  mutation MyMutation {\\n    update_todo_user_by_pk(pk_columns: { id: 10 }, _set: { completed: true }) {\\n      id\\n    }\\n  }\\n\"])));\nexport var __N_SSG = true;\nexport default function TodoList(_ref) {\n  _s();\n\n  var _this = this;\n\n  var initialData = _ref.initialData;\n  var hasura = hasuraUserClient();\n\n  var _useRouter = useRouter(),\n      query = _useRouter.query;\n\n  var id = query.id;\n\n  var _useSWR = useSWR([GetCandidats, id], function (query, id) {\n    return hasura.request(query);\n  }, {\n    initialData: initialData,\n    revalidateOnMount: true\n  }),\n      data = _useSWR.data;\n\n  var Complete = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {\n      var id, _yield$hasura$request, update_Todo_by_pk;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              id = _ref2.id;\n              console.log(id);\n              _context.prev = 2;\n              _context.next = 5;\n              return hasura.request(UpdateCompleted, {\n                id: id\n              });\n\n            case 5:\n              _yield$hasura$request = _context.sent;\n              update_Todo_by_pk = _yield$hasura$request.update_Todo_by_pk;\n              _context.next = 12;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](2);\n              console.log(_context.t0);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 9]]);\n    }));\n\n    return function Complete(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var deleteTodo = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_ref4) {\n      var id, query;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              id = _ref4.id;\n              query = gql(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n      mutation delete_Todo($id: Int!) {\\n        delete_Todo(where: { id: { _eq: $id } }) {\\n          affected_rows\\n        }\\n      }\\n    \"])));\n              _context2.prev = 2;\n              _context2.next = 5;\n              return hasura.request(query, {\n                id: id\n              });\n\n            case 5:\n              mutate();\n              _context2.next = 11;\n              break;\n\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](2);\n              console.error(_context2.t0);\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[2, 8]]);\n    }));\n\n    return function deleteTodo(_x2) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(\"div\", {\n    className: \"page-content-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }\n  }, \" \", __jsx(\"div\", {\n    className: \"page-content\",\n    style: {\n      minHeight: 1500\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    \"class\": \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    \"class\": \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    \"class\": \"col-md-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    \"class\": \"card card-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    \"class\": \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }\n  }, __jsx(\"ul\", {\n    \"class\": \"nav nav-pills todo-nav\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 19\n    }\n  }, __jsx(\"li\", {\n    role: \"presentation\",\n    \"class\": \"nav-item all-task active\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 21\n    }\n  }, __jsx(\"a\", {\n    href: \"#\",\n    \"class\": \"nav-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 23\n    }\n  }, \"All\")), __jsx(\"li\", {\n    role: \"presentation\",\n    \"class\": \"nav-item active-task\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 21\n    }\n  }, __jsx(\"a\", {\n    href: \"#\",\n    \"class\": \"nav-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 23\n    }\n  }, \"Active\")), __jsx(\"li\", {\n    role: \"presentation\",\n    \"class\": \"nav-item completed-task\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 21\n    }\n  }, __jsx(\"a\", {\n    href: \"#\",\n    \"class\": \"nav-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 23\n    }\n  }, \"Completed\"))), \" \", data.todo_user.map(function (_ref6) {\n    var id = _ref6.id,\n        Description = _ref6.Description,\n        Name = _ref6.Name,\n        Completed = _ref6.Completed,\n        Todo = _ref6.Todo;\n    return __jsx(\"div\", {\n      key: id,\n      \"class\": \"todo-list\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 25\n      }\n    }, !Completed ? __jsx(\"div\", {\n      \"class\": \"todo-item\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 29\n      }\n    }, __jsx(\"div\", {\n      \"class\": \"checker\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 31\n      }\n    }, __jsx(\"span\", {\n      \"class\": \"\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 33\n      }\n    }, __jsx(\"input\", {\n      name: \"Completed\",\n      type: \"checkbox\",\n      onChange: function onChange() {\n        return Complete({\n          id: id\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 35\n      }\n    }))), \" \", \"\", __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 31\n      }\n    }, Todo.Name, \": \", Todo.Description), __jsx(\"a\", {\n      href: \"javascript:void(0);\",\n      \"class\": \"float-right remove-todo-item\",\n      onClick: function onClick() {\n        return deleteTodo({\n          id: id\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 31\n      }\n    }, __jsx(\"i\", {\n      \"class\": \"icon-close\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 33\n      }\n    }))) : __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 29\n      }\n    }));\n  }), \" \")))))));\n}\n\n_s(TodoList, \"TmwgCuja5LwZZXl+jE5TYkduBx0=\", false, function () {\n  return [useRouter, useSWR];\n});\n\n_c = TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["C:/Users/msdtt/OneDrive/Documents/amai_hr_next_js_hasura/amai-hr/pages/UpdateTodo/[id].js"],"names":["useSWR","mutate","gql","useRouter","hasuraUserClient","GetCandidats","UpdateCompleted","TodoList","initialData","hasura","query","id","request","revalidateOnMount","data","Complete","console","log","update_Todo_by_pk","deleteTodo","error","minHeight","todo_user","map","Description","Name","Completed","Todo"],"mappings":"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","sourcesContent":["import useSWR, { mutate } from \"swr\";\r\n\r\nimport gql from \"graphql-tag\";\r\nimport { useRouter } from \"next/router\";\r\nimport { hasuraUserClient } from \"../../lib/hasura-user-client\";\r\nconst Todos = gql`\r\n  query MyQuery {\r\n    User {\r\n      id\r\n    }\r\n  }\r\n`;\r\nconst GetCandidats = gql`\r\n  query MyQuery($id: Int!) {\r\n    todo_user(where: { user_id: { _eq: $id } }) {\r\n      id\r\n      todo_id\r\n      completed\r\n      user_id\r\n      Todo {\r\n        Description\r\n        Name\r\n        Type\r\n        id\r\n        Date\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst UpdateCompleted = gql`\r\n  mutation MyMutation {\r\n    update_todo_user_by_pk(pk_columns: { id: 10 }, _set: { completed: true }) {\r\n      id\r\n    }\r\n  }\r\n`;\r\nexport const getStaticPaths = async () => {\r\n  const hasura = hasuraUserClient();\r\n\r\n  const { User } = await hasura.request(Todos);\r\n\r\n  return {\r\n    paths: User.map(({ id }) => ({\r\n      params: {\r\n        id: id.toString(),\r\n      },\r\n    })),\r\n    fallback: false,\r\n  };\r\n};\r\nexport const getStaticProps = async ({ params }) => {\r\n  const hasura = hasuraUserClient();\r\n  const { id } = params;\r\n\r\n  console.log(params);\r\n\r\n  const initialData = await hasura.request(GetCandidats, { id });\r\n\r\n  return {\r\n    props: {\r\n      initialData,\r\n    },\r\n    revalidate: 1,\r\n  };\r\n};\r\n\r\nexport default function TodoList({ initialData }) {\r\n  const hasura = hasuraUserClient();\r\n  const { query } = useRouter();\r\n  const { id } = query;\r\n  const { data } = useSWR(\r\n    [GetCandidats, id],\r\n\r\n    (query, id) => hasura.request(query),\r\n    {\r\n      initialData,\r\n      revalidateOnMount: true,\r\n    }\r\n  );\r\n  const Complete = async ({ id }) => {\r\n    console.log(id);\r\n    try {\r\n      const { update_Todo_by_pk } = await hasura.request(UpdateCompleted, {\r\n        id,\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  const deleteTodo = async ({ id }) => {\r\n    const query = gql`\r\n      mutation delete_Todo($id: Int!) {\r\n        delete_Todo(where: { id: { _eq: $id } }) {\r\n          affected_rows\r\n        }\r\n      }\r\n    `;\r\n\r\n    try {\r\n      await hasura.request(query, { id });\r\n      mutate();\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"page-content-wrapper\">\r\n      {\" \"}\r\n      <div className=\"page-content\" style={{ minHeight: 1500 }}>\r\n        <div class=\"container\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-8\">\r\n              <div class=\"card card-white\">\r\n                <div class=\"card-body\">\r\n                  <ul class=\"nav nav-pills todo-nav\">\r\n                    <li role=\"presentation\" class=\"nav-item all-task active\">\r\n                      <a href=\"#\" class=\"nav-link\">\r\n                        All\r\n                      </a>\r\n                    </li>\r\n                    <li role=\"presentation\" class=\"nav-item active-task\">\r\n                      <a href=\"#\" class=\"nav-link\">\r\n                        Active\r\n                      </a>\r\n                    </li>\r\n                    <li role=\"presentation\" class=\"nav-item completed-task\">\r\n                      <a href=\"#\" class=\"nav-link\">\r\n                        Completed\r\n                      </a>\r\n                    </li>\r\n                  </ul>{\" \"}\r\n                  {data.todo_user.map(\r\n                    ({ id, Description, Name, Completed, Todo }) => {\r\n                      return (\r\n                        <div key={id} class=\"todo-list\">\r\n                          {!Completed ? (\r\n                            <div class=\"todo-item\">\r\n                              <div class=\"checker\">\r\n                                <span class=\"\">\r\n                                  <input\r\n                                    name=\"Completed\"\r\n                                    type=\"checkbox\"\r\n                                    onChange={() => Complete({ id })}\r\n                                  />\r\n                                </span>\r\n                              </div>{\" \"}\r\n                              {\"\"}\r\n                              <span>\r\n                                {Todo.Name}: {Todo.Description}\r\n                              </span>\r\n                              <a\r\n                                href=\"javascript:void(0);\"\r\n                                class=\"float-right remove-todo-item\"\r\n                                onClick={() => deleteTodo({ id })}\r\n                              >\r\n                                <i class=\"icon-close\"></i>\r\n                              </a>\r\n                            </div>\r\n                          ) : (\r\n                            <div></div>\r\n                          )}\r\n                        </div>\r\n                      );\r\n                    }\r\n                  )}{\" \"}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}