{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _templateObject,\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useAuthState } from \"../../context/auth\";\nimport { gql, hasuraUserClient } from \"../../lib/hasura-user-client\";\nvar UpdateUserLastSeen = gql(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  mutation UpdateUserLastSeen($id: Int!, $now: timestamptz!) {\\n    update_User(where: { id: { _eq: $id } }, _set: { last_seen: $now }) {\\n      returning {\\n        last_seen\\n      }\\n    }\\n  }\\n\"])));\nexport default function LastSeen(_ref) {\n  _s();\n\n  var children = _ref.children;\n  var router = useRouter();\n\n  var _useAuthState = useAuthState(),\n      isAuthenticated = _useAuthState.isAuthenticated,\n      user = _useAuthState.user,\n      save_last_seen = _useAuthState.save_last_seen;\n\n  useEffect(function () {\n    if (!isAuthenticated || !save_last_seen) return; // updateLastSeen(router.pathname);\n\n    router.events.on(\"routeChangeComplete\", updateLastSeen);\n    return function () {\n      return router.events.off(\"routeChangeComplete\", updateLastSeen);\n    };\n  }, [isAuthenticated, save_last_seen]);\n\n  var updateLastSeen = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(url) {\n      var hasura;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              hasura = hasuraUserClient();\n              _context.next = 3;\n              return hasura.request(UpdateUserLastSeen, {\n                id: user.id,\n                now: new Date().toISOString()\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function updateLastSeen(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return children;\n}\n\n_s(LastSeen, \"n2BLxAr7B+NQZz5/IekrELxyNHw=\", false, function () {\n  return [useRouter, useAuthState];\n});\n\n_c = LastSeen;\n\nvar _c;\n\n$RefreshReg$(_c, \"LastSeen\");","map":{"version":3,"sources":["C:/Users/msdtt/OneDrive/Documents/amai_hr_next_js_hasura/amai-hr/pages/Components/LastSeen.js"],"names":["useEffect","useRouter","useAuthState","gql","hasuraUserClient","UpdateUserLastSeen","LastSeen","children","router","isAuthenticated","user","save_last_seen","events","on","updateLastSeen","off","url","hasura","request","id","now","Date","toISOString"],"mappings":";;;;;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,SAASC,YAAT,QAA6B,oBAA7B;AACA,SAASC,GAAT,EAAcC,gBAAd,QAAsC,8BAAtC;AAEA,IAAMC,kBAAkB,GAAGF,GAAH,6QAAxB;AAUA,eAAe,SAASG,QAAT,OAAgC;AAAA;;AAAA,MAAZC,QAAY,QAAZA,QAAY;AAC7C,MAAMC,MAAM,GAAGP,SAAS,EAAxB;;AACA,sBAAkDC,YAAY,EAA9D;AAAA,MAAQO,eAAR,iBAAQA,eAAR;AAAA,MAAyBC,IAAzB,iBAAyBA,IAAzB;AAAA,MAA+BC,cAA/B,iBAA+BA,cAA/B;;AAEAX,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI,CAACS,eAAD,IAAoB,CAACE,cAAzB,EAAyC,OAD3B,CAGd;;AAEAH,IAAAA,MAAM,CAACI,MAAP,CAAcC,EAAd,CAAiB,qBAAjB,EAAwCC,cAAxC;AAEA,WAAO;AAAA,aAAMN,MAAM,CAACI,MAAP,CAAcG,GAAd,CAAkB,qBAAlB,EAAyCD,cAAzC,CAAN;AAAA,KAAP;AACD,GARQ,EAQN,CAACL,eAAD,EAAkBE,cAAlB,CARM,CAAT;;AAUA,MAAMG,cAAc;AAAA,yEAAG,iBAAOE,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACfC,cAAAA,MADe,GACNb,gBAAgB,EADV;AAAA;AAAA,qBAGfa,MAAM,CAACC,OAAP,CAAeb,kBAAf,EAAmC;AACvCc,gBAAAA,EAAE,EAAET,IAAI,CAACS,EAD8B;AAEvCC,gBAAAA,GAAG,EAAE,IAAIC,IAAJ,GAAWC,WAAX;AAFkC,eAAnC,CAHe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAdR,cAAc;AAAA;AAAA;AAAA,KAApB;;AASA,SAAOP,QAAP;AACD;;GAxBuBD,Q;UACPL,S,EACmCC,Y;;;KAF5BI,Q","sourcesContent":["import { useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\n\nimport { useAuthState } from \"../../context/auth\";\nimport { gql, hasuraUserClient } from \"../../lib/hasura-user-client\";\n\nconst UpdateUserLastSeen = gql`\n  mutation UpdateUserLastSeen($id: Int!, $now: timestamptz!) {\n    update_User(where: { id: { _eq: $id } }, _set: { last_seen: $now }) {\n      returning {\n        last_seen\n      }\n    }\n  }\n`;\n\nexport default function LastSeen({ children }) {\n  const router = useRouter();\n  const { isAuthenticated, user, save_last_seen } = useAuthState();\n\n  useEffect(() => {\n    if (!isAuthenticated || !save_last_seen) return;\n\n    // updateLastSeen(router.pathname);\n\n    router.events.on(\"routeChangeComplete\", updateLastSeen);\n\n    return () => router.events.off(\"routeChangeComplete\", updateLastSeen);\n  }, [isAuthenticated, save_last_seen]);\n\n  const updateLastSeen = async (url) => {\n    const hasura = hasuraUserClient();\n\n    await hasura.request(UpdateUserLastSeen, {\n      id: user.id,\n      now: new Date().toISOString(),\n    });\n  };\n\n  return children;\n}\n"]},"metadata":{},"sourceType":"module"}