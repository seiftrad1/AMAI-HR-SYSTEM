{"ast":null,"code":"import React from \"react\";\nimport gql from \"graphql-tag\";\nimport Header from \"./Header/Header\";\nimport { hasuraUserClient } from \"../../lib/hasura-user-client\";\nimport { useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nconst Notification_count = gql`\n  query MyQuery {\n    notification_aggregate {\n      aggregate {\n        count(columns: id)\n      }\n    }\n  }\n`;\nexport default function Notification({\n  children\n}) {\n  useEffect(() => {\n    if (!isAuthenticated || !save_last_seen) return;\n    updateLastSeen(router.pathname);\n    router.events.on(\"routeChangeComplete\", updateLastSeen);\n    return () => router.events.off(\"routeChangeComplete\", updateLastSeen);\n  }, [isAuthenticated, save_last_seen]);\n\n  const updateLastSeen = async url => {\n    const hasura = hasuraUserClient();\n    await hasura.request(UpdateUserLastSeen, {\n      id: user.id,\n      now: new Date().toISOString(),\n      url\n    });\n  };\n\n  return children;\n}","map":{"version":3,"sources":["C:/Users/msdtt/OneDrive/Documents/amai_hr_next_js_hasura/amai-hr/pages/Components/Notification.js"],"names":["React","gql","Header","hasuraUserClient","useEffect","useRouter","Notification_count","Notification","children","isAuthenticated","save_last_seen","updateLastSeen","router","pathname","events","on","off","url","hasura","request","UpdateUserLastSeen","id","user","now","Date","toISOString"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SAASC,gBAAT,QAAiC,8BAAjC;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,MAAMC,kBAAkB,GAAGL,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;AASA,eAAe,SAASM,YAAT,CAAsB;AAAEC,EAAAA;AAAF,CAAtB,EAAoC;AACjDJ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACK,eAAD,IAAoB,CAACC,cAAzB,EAAyC;AAEzCC,IAAAA,cAAc,CAACC,MAAM,CAACC,QAAR,CAAd;AAEAD,IAAAA,MAAM,CAACE,MAAP,CAAcC,EAAd,CAAiB,qBAAjB,EAAwCJ,cAAxC;AAEA,WAAO,MAAMC,MAAM,CAACE,MAAP,CAAcE,GAAd,CAAkB,qBAAlB,EAAyCL,cAAzC,CAAb;AACD,GARQ,EAQN,CAACF,eAAD,EAAkBC,cAAlB,CARM,CAAT;;AAUA,QAAMC,cAAc,GAAG,MAAOM,GAAP,IAAe;AACpC,UAAMC,MAAM,GAAGf,gBAAgB,EAA/B;AAEA,UAAMe,MAAM,CAACC,OAAP,CAAeC,kBAAf,EAAmC;AACvCC,MAAAA,EAAE,EAAEC,IAAI,CAACD,EAD8B;AAEvCE,MAAAA,GAAG,EAAE,IAAIC,IAAJ,GAAWC,WAAX,EAFkC;AAGvCR,MAAAA;AAHuC,KAAnC,CAAN;AAKD,GARD;;AAUA,SAAOT,QAAP;AACD","sourcesContent":["import React from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport Header from \"./Header/Header\";\r\nimport { hasuraUserClient } from \"../../lib/hasura-user-client\";\r\nimport { useEffect } from \"react\";\r\nimport { useRouter } from \"next/router\";\r\n\r\nconst Notification_count = gql`\r\n  query MyQuery {\r\n    notification_aggregate {\r\n      aggregate {\r\n        count(columns: id)\r\n      }\r\n    }\r\n  }\r\n`;\r\nexport default function Notification({ children }) {\r\n  useEffect(() => {\r\n    if (!isAuthenticated || !save_last_seen) return;\r\n\r\n    updateLastSeen(router.pathname);\r\n\r\n    router.events.on(\"routeChangeComplete\", updateLastSeen);\r\n\r\n    return () => router.events.off(\"routeChangeComplete\", updateLastSeen);\r\n  }, [isAuthenticated, save_last_seen]);\r\n\r\n  const updateLastSeen = async (url) => {\r\n    const hasura = hasuraUserClient();\r\n\r\n    await hasura.request(UpdateUserLastSeen, {\r\n      id: user.id,\r\n      now: new Date().toISOString(),\r\n      url,\r\n    });\r\n  };\r\n\r\n  return children;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}