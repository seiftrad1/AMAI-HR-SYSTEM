{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _templateObject;\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport Layout from \"./Components/Layout\";\nimport { useAuthState } from \"../context/auth\";\nimport { gql } from \"../lib/hasura-admin-client\";\nimport { hasuraUserClient } from \"../lib/hasura-user-client\";\nvar InsertTask = gql(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  mutation InsertTask(\\n    $Email: String!\\n    $Last_Name: String!\\n    $Name: String!\\n    $domain: String!\\n    $phone_number: String!\\n  ) {\\n    insert_Candidate_one(\\n      object: {\\n        Email: $Email\\n        Last_Name: $Last_Name\\n        Name: $Name\\n        domain: $domain\\n        phone_number: $phone_number\\n      }\\n    ) {\\n      Email\\n      Last_Name\\n      Name\\n      domain\\n      id\\n      phone_number\\n    }\\n  }\\n\"])));\n\nvar handleUpdate = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n    var id, message, _yield$hasura$request, update_posts_by_pk;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            id = _ref.id, message = _ref.message;\n            _context.next = 3;\n            return hasura.request(UpdatePost, {\n              id: id,\n              message: message\n            });\n\n          case 3:\n            _yield$hasura$request = _context.sent;\n            update_posts_by_pk = _yield$hasura$request.update_posts_by_pk;\n            mutate(_objectSpread(_objectSpread({}, data), {}, {\n              threads_by_pk: _objectSpread(_objectSpread({}, data.threads_by_pk), {}, {\n                posts: data.threads_by_pk.posts.reduce(function (posts, post) {\n                  if (post.id === id) return [].concat(_toConsumableArray(posts), [_objectSpread(_objectSpread({}, post), update_posts_by_pk)]);\n                  return [].concat(_toConsumableArray(posts), [post]);\n                }, [])\n              })\n            }));\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function handleUpdate(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport var __N_SSG = true;\nexport default function Candidat() {\n  var router = useRouter();\n\n  var _useAuthState = useAuthState(),\n      isAuthenticated = _useAuthState.isAuthenticated,\n      user = _useAuthState.user;\n\n  var hasura = hasuraUserClient();\n\n  var _useForm = useForm(),\n      handleSubmit = _useForm.handleSubmit,\n      register = _useForm.register,\n      control = _useForm.control,\n      errors = _useForm.errors,\n      isSubmitting = _useForm.formState.isSubmitting;\n\n  useEffect(function () {\n    if (!isAuthenticated) router.push(\"/\");\n  }, [isAuthenticated]);\n  if (!isAuthenticated) return null;\n\n  var onSubmit = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_ref3) {\n      var Email, Last_Name, Name, domain, phone_number, _yield$hasura$request2, insert_Candidate_one;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              Email = _ref3.Email, Last_Name = _ref3.Last_Name, Name = _ref3.Name, domain = _ref3.domain, phone_number = _ref3.phone_number;\n              console.log(phone_number);\n              _context2.prev = 2;\n              _context2.next = 5;\n              return hasura.request(InsertTask, {\n                Email: Email,\n                Last_Name: Last_Name,\n                Name: Name,\n                domain: domain,\n                phone_number: phone_number\n              });\n\n            case 5:\n              _yield$hasura$request2 = _context2.sent;\n              insert_Candidate_one = _yield$hasura$request2.insert_Candidate_one;\n              router.push(\"/CandidatList\");\n              _context2.next = 13;\n              break;\n\n            case 10:\n              _context2.prev = 10;\n              _context2.t0 = _context2[\"catch\"](2);\n              console.log(_context2.t0);\n\n            case 13:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[2, 10]]);\n    }));\n\n    return function onSubmit(_x2) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(React.Fragment, null, __jsx(Layout, null, __jsx(\"div\", {\n    className: \"page-content-wrapper\"\n  }, __jsx(\"div\", {\n    className: \"page-content\",\n    style: {\n      minHeight: 1500\n    }\n  }, __jsx(\"div\", {\n    \"class\": \"profile-content\"\n  }, __jsx(\"div\", {\n    \"class\": \"row\"\n  }, __jsx(\"div\", {\n    \"class\": \"col-md-12\"\n  }, __jsx(\"div\", {\n    \"class\": \"portlet light \"\n  }, __jsx(\"div\", {\n    \"class\": \"portlet-body\"\n  }, __jsx(\"div\", {\n    \"class\": \"tab-content\"\n  }, __jsx(\"div\", {\n    \"class\": \"tab-pane active\",\n    id: \"tab_1_1\"\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmit)\n  }, __jsx(\"div\", {\n    \"class\": \"form-group\"\n  }, __jsx(\"label\", {\n    \"class\": \"control-label\"\n  }, \"First Name\"), __jsx(\"input\", {\n    name: \"Name\",\n    id: \"Name\",\n    type: \"text\",\n    placeholder: \"First Name\",\n    \"class\": \"form-control\",\n    ref: register({\n      required: \"You must select a category for your thread\"\n    })\n  }), \" \"), __jsx(\"div\", {\n    \"class\": \"form-group\"\n  }, __jsx(\"label\", {\n    \"class\": \"control-label\"\n  }, \"Last Name\"), __jsx(\"input\", {\n    name: \"Last_Name\",\n    id: \"Last_Name\",\n    type: \"text\",\n    placeholder: \"Last Name\",\n    \"class\": \"form-control\",\n    ref: register({\n      required: \"You must select a category for your thread\"\n    })\n  }), \" \"), __jsx(\"div\", {\n    \"class\": \"form-group\"\n  }, __jsx(\"label\", {\n    \"class\": \"control-label\"\n  }, \"Mobile Number\"), __jsx(\"input\", {\n    name: \"phone_number\",\n    id: \"phone_number\",\n    type: \"text\",\n    placeholder: \"+1 646 580 DEMO (6284)\",\n    \"class\": \"form-control\",\n    ref: register({\n      required: \"You must select a category for your thread\"\n    })\n  }), \" \"), __jsx(\"div\", {\n    \"class\": \"form-group\"\n  }, __jsx(\"label\", {\n    \"class\": \"control-label\"\n  }, \"Email\"), __jsx(\"input\", {\n    name: \"Email\",\n    id: \"Email\",\n    type: \"email\",\n    placeholder: \"Design, Web etc.\",\n    \"class\": \"form-control\",\n    ref: register({\n      required: \"You must select a category for your thread\"\n    })\n  }), \" \"), __jsx(\"div\", {\n    \"class\": \"form-group\"\n  }, __jsx(\"label\", {\n    \"class\": \"control-label\"\n  }, \"Domain\"), __jsx(\"input\", {\n    name: \"domain\",\n    id: \"domain\",\n    type: \"text\",\n    placeholder: \"Web Developer\",\n    \"class\": \"form-control\",\n    ref: register({\n      required: \"You must select a category for your thread\"\n    })\n  }), \" \"), __jsx(\"div\", {\n    \"class\": \"margiv-top-10\"\n  }, __jsx(\"button\", {\n    type: \"submit\",\n    \"class\": \"btn green\",\n    disabled: isSubmitting\n  }, \" \", \"Save Changes\", \" \"), __jsx(\"a\", {\n    href: \"#\",\n    \"class\": \"btn default\"\n  }, \" \", \"Cancel\", \" \"))))))))))), \" \")));\n}","map":null,"metadata":{},"sourceType":"module"}