{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\msdtt\\\\OneDrive\\\\Documents\\\\amai_hr_next_js_hasura\\\\amai-hr\\\\pages\\\\register.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useForm } from \"react-hook-form\";\nimport { hasuraAdminClient, gql } from \"../lib/hasura-admin-client\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport { useAuthState, useAuthDispatch } from \"../context/auth\";\nconst created_at = new Date().toISOString();\nconst GetUserByEmail = gql`\n  query GetUserByEmail($email: String!) {\n    User(where: { email: { _eq: $email } }) {\n      id\n    }\n  }\n`;\nconst GetUserByRole = gql`\n  query MyQuery {\n    User(where: { Role: { _eq: \"Manager\" } }) {\n      id\n      Name\n      Last_Name\n      email\n      Avatar\n    }\n  }\n`;\nexport const getStaticProps = async () => {\n  const Manager = await hasuraAdminClient.request(GetUserByRole);\n  return {\n    props: {\n      Manager\n    }\n  };\n};\nexport default function RegisterPage({\n  Manager\n}) {\n  const router = useRouter();\n  const {\n    isAuthenticated\n  } = useAuthState();\n  const {\n    register: createUser\n  } = useAuthDispatch();\n  const {\n    handleSubmit,\n    register,\n    errors,\n    formState: {\n      isSubmitting\n    },\n    setError\n  } = useForm({\n    defaultValues: {\n      save_last_seen: true\n    }\n  });\n  const {\n    register: register2,\n    errors: errors2,\n    handleSubmit: handleSubmit2\n  } = useForm(); // useEffect(() => {\n  //   if (isAuthenticated) {\n  //     router.push(\"/\");\n  //   }\n  // }, [isAuthenticated]);\n  // if (isAuthenticated) return null;\n\n  console.log(Manager);\n\n  const onSubmit = async ({\n    name,\n    email,\n    password,\n    last_name,\n    domain,\n    phone_number,\n    confirmpassword,\n    manager_id\n  }) => {\n    const {\n      User: [foundUser]\n    } = await hasuraAdminClient.request(GetUserByEmail, {\n      email\n    });\n\n    if (foundUser) {\n      alert(\"Email already exists , please try another\");\n    } else if (password != confirmpassword) {\n      alert(\"Passwords don't match\");\n    } else {\n      try {\n        await createUser({\n          name,\n          email,\n          password,\n          last_name,\n          domain,\n          phone_number,\n          created_at,\n          manager_id\n        });\n        toast(\"Account created\");\n        window.location.reload();\n        await fetch(\"/api/emailhey\", {\n          method: \"POST\",\n          headers: {\n            \"content-type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            name,\n            email,\n            password\n          })\n        });\n      } catch ({\n        message\n      }) {\n        setError(\"email\", {\n          type: \"manual\",\n          message\n        });\n      }\n    }\n  };\n\n  const onSubmitManager = async ({\n    name,\n    email,\n    password,\n    last_name,\n    domain,\n    phone_number,\n    confirmpassword,\n    manager_id\n  }) => {\n    const {\n      User: [foundUser]\n    } = await hasuraAdminClient.request(GetUserByEmail, {\n      email\n    });\n\n    if (foundUser) {\n      alert(\"Email already exists , please try another\");\n    } else if (password != confirmpassword) {\n      alert(\"Passwords don't match\");\n    } else {\n      try {\n        await createUser({\n          name,\n          email,\n          password,\n          last_name,\n          domain,\n          phone_number,\n          created_at,\n          manager_id\n        });\n        toast(\"Account created\");\n        window.location.reload();\n        await fetch(\"/api/emailhey\", {\n          method: \"POST\",\n          headers: {\n            \"content-type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            name,\n            email,\n            password\n          })\n        });\n      } catch ({\n        message\n      }) {\n        setError(\"email\", {\n          type: \"manual\",\n          message\n        });\n      }\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: \"page-content-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"page-content\",\n    style: {\n      minHeight: 1500\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }\n  }, \" \", __jsx(\"div\", {\n    class: \"profile-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    class: \"col-md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 11\n    }\n  }, \" \", __jsx(\"div\", {\n    class: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }\n  }, \" \", __jsx(\"div\", {\n    class: \"portlet light \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    class: \"portlet-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 17\n    }\n  }, \" \", __jsx(\"h3\", {\n    class: \"font-green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 19\n    }\n  }, \"New AMAIER ! \"), \" \", __jsx(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 61\n    }\n  }), \" \", __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 19\n    }\n  }, __jsx(\"img\", {\n    style: {\n      display: \"block\",\n      objectFit: \"cover\",\n      width: 500,\n      height: 470,\n      margin: \"auto\"\n    },\n    src: \"../aam.jpg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 21\n    }\n  }))))), __jsx(\"div\", {\n    class: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    class: \"portlet light \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 15\n    }\n  }, \" \", __jsx(\"div\", {\n    className: \"portlet-title tabbable-line\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"caption caption-md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 19\n    }\n  }, __jsx(\"i\", {\n    className: \"icon-globe theme-font hide\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 21\n    }\n  }), __jsx(\"span\", {\n    className: \"caption-subject font-blue-madison bold uppercase\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 21\n    }\n  }, \"Account settings\")), __jsx(\"ul\", {\n    className: \"nav nav-tabs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 19\n    }\n  }, __jsx(\"li\", {\n    className: \"active\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 21\n    }\n  }, __jsx(\"a\", {\n    href: \"#tab_1_1\",\n    \"data-toggle\": \"tab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 23\n    }\n  }, \"Personal Info\")), __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 21\n    }\n  }, __jsx(\"a\", {\n    href: \"#tab_1_2\",\n    \"data-toggle\": \"tab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 23\n    }\n  }, \"Change Avatar\")))), __jsx(\"div\", {\n    class: \"portlet-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 17\n    }\n  }, \" \", __jsx(\"div\", {\n    className: \"tab-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 19\n    }\n  }, __jsx(\"div\", {\n    className: \"tab-pane active\",\n    id: \"tab_1_1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 21\n    }\n  }, __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 23\n    }\n  }, \"employee\"), __jsx(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 23\n    }\n  }), __jsx(\"form\", {\n    class: \"register-form\",\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 23\n    }\n  }, __jsx(\"div\", {\n    class: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 25\n    }\n  }, \" \", __jsx(\"div\", {\n    class: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 27\n    }\n  }, \" \", __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 29\n    }\n  }, \"First Name\"), \" \", __jsx(\"input\", {\n    class: \"form-control form-control-solid placeholder-no-fix\",\n    name: \"name\",\n    id: \"name\",\n    ref: register,\n    placeholder: \"name\",\n    size: \"10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 29\n    }\n  })), __jsx(\"div\", {\n    class: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 27\n    }\n  }, \" \", __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 29\n    }\n  }, \"Last Name\"), __jsx(\"input\", {\n    class: \"form-control form-control-solid placeholder-no-fix\",\n    name: \"last_name\",\n    id: \"last_name\",\n    ref: register,\n    placeholder: \"last name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 29\n    }\n  })), errors.name && __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 43\n    }\n  }, errors.name.message), __jsx(\"div\", {\n    class: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 27\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 29\n    }\n  }, \"Email\"), __jsx(\"input\", {\n    class: \"form-control form-control-solid placeholder-no-fix\",\n    type: \"email\",\n    name: \"email\",\n    id: \"email\",\n    ref: register({\n      required: \"You must provide a email.\",\n      pattern: {\n        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n        message: \"You must provide a valid email\"\n      }\n    }),\n    placeholder: \"Your email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 29\n    }\n  }), errors.email && __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 31\n    }\n  }, errors.email.message)), \" \", __jsx(\"div\", {\n    class: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 27\n    }\n  }, \" \", __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 29\n    }\n  }, \"Domain\"), __jsx(\"input\", {\n    class: \"form-control form-control-solid placeholder-no-fix\",\n    name: \"domain\",\n    id: \"domain\",\n    ref: register,\n    placeholder: \"domain\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 29\n    }\n  })), \" \", __jsx(\"div\", {\n    class: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 27\n    }\n  }, \" \", __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 29\n    }\n  }, \"Phone number\"), __jsx(\"input\", {\n    class: \"form-control form-control-solid placeholder-no-fix\",\n    name: \"phone_number\",\n    id: \"phone_number\",\n    ref: register,\n    placeholder: \"Phone number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 29\n    }\n  })), \" \", __jsx(\"div\", {\n    class: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 27\n    }\n  }, __jsx(\"select\", {\n    name: \"manager_id\",\n    id: \"manager_id\",\n    ref: register,\n    required: true,\n    className: \"form-control select2 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 29\n    }\n  }, Manager.User.map(({\n    id,\n    Name,\n    Avatar\n  }) => __jsx(React.Fragment, {\n    key: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 33\n    }\n  }, \" \", __jsx(\"option\", {\n    selected: true,\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 35\n    }\n  }, \"Select Manager\"), __jsx(\"option\", {\n    value: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 35\n    }\n  }, Name, \" \")))), \" \"), __jsx(\"div\", {\n    class: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 27\n    }\n  }, \" \", __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 29\n    }\n  }, \"Password\"), __jsx(\"input\", {\n    class: \"form-control form-control-solid placeholder-no-fix\",\n    type: \"password\",\n    name: \"password\",\n    id: \"password\",\n    ref: register({\n      required: \"You must provide a password.\",\n      minLength: {\n        message: \"Your password must be at least 6 characters\",\n        value: 6\n      }\n    }),\n    placeholder: \"Choose a password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 29\n    }\n  }), errors.password && __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 31\n    }\n  }, errors.password.message), \" \"), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 27\n    }\n  }, __jsx(\"label\", {\n    className: \"control-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 29\n    }\n  }, \"Confirm Password\"), __jsx(\"input\", {\n    name: \"confirmpassword\",\n    type: \"password\",\n    class: \"form-control form-control-solid placeholder-no-fix\",\n    ref: register({\n      required: \"You must confirm  the password.\",\n      minLength: {\n        message: \"Your password must be at least 6 characters\",\n        value: 6\n      }\n    }),\n    placeholder: \"Confirm password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 29\n    }\n  }), \" \"), __jsx(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 27\n    }\n  }), __jsx(\"div\", {\n    class: \"create-account\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 27\n    }\n  }, __jsx(\"button\", {\n    type: \"submit\",\n    disabled: isSubmitting,\n    class: \"btn green uppercase\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 29\n    }\n  }, \"Create account\"), \" \", __jsx(ToastContainer, {\n    hideProgressBar: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 29\n    }\n  })), \" \"))), \" \", __jsx(\"div\", {\n    className: \"tab-pane\",\n    id: \"tab_1_2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 21\n    }\n  }, __jsx(\"form\", {\n    class: \"register-form\",\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 23\n    }\n  }, __jsx(\"div\", {\n    class: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 25\n    }\n  }, \" \", __jsx(\"div\", {\n    class: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 27\n    }\n  }, \" \", __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 29\n    }\n  }, \"First Name\"), \" \", __jsx(\"input\", {\n    class: \"form-control form-control-solid placeholder-no-fix\",\n    name: \"name\",\n    id: \"name\",\n    ref: register,\n    placeholder: \"name\",\n    size: \"10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 29\n    }\n  })), __jsx(\"div\", {\n    class: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 27\n    }\n  }, \" \", __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 29\n    }\n  }, \"Last Name\"), __jsx(\"input\", {\n    class: \"form-control form-control-solid placeholder-no-fix\",\n    name: \"last_name\",\n    id: \"last_name\",\n    ref: register,\n    placeholder: \"last name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 29\n    }\n  })), errors.name && __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 43\n    }\n  }, errors.name.message), __jsx(\"div\", {\n    class: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 27\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 29\n    }\n  }, \"Email\"), __jsx(\"input\", {\n    class: \"form-control form-control-solid placeholder-no-fix\",\n    type: \"email\",\n    name: \"email\",\n    id: \"email\",\n    ref: register({\n      required: \"You must provide a email.\",\n      pattern: {\n        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n        message: \"You must provide a valid email\"\n      }\n    }),\n    placeholder: \"Your email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 29\n    }\n  }), errors.email && __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 31\n    }\n  }, errors.email.message)), \" \", __jsx(\"div\", {\n    class: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 27\n    }\n  }, \" \", __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 29\n    }\n  }, \"Domain\"), __jsx(\"input\", {\n    class: \"form-control form-control-solid placeholder-no-fix\",\n    name: \"domain\",\n    id: \"domain\",\n    ref: register,\n    placeholder: \"domain\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 29\n    }\n  })), \" \", __jsx(\"div\", {\n    class: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 27\n    }\n  }, \" \", __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 29\n    }\n  }, \"Phone number\"), __jsx(\"input\", {\n    class: \"form-control form-control-solid placeholder-no-fix\",\n    name: \"phone_number\",\n    id: \"phone_number\",\n    ref: register,\n    placeholder: \"Phone number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 29\n    }\n  })), \" \", __jsx(\"div\", {\n    class: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 27\n    }\n  }, __jsx(\"select\", {\n    name: \"manager_id\",\n    id: \"manager_id\",\n    ref: register,\n    required: true,\n    className: \"form-control select2 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 29\n    }\n  }, Manager.User.map(({\n    id,\n    Name,\n    Avatar\n  }) => __jsx(React.Fragment, {\n    key: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 33\n    }\n  }, \" \", __jsx(\"option\", {\n    selected: true,\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 35\n    }\n  }, \"Select Manager\"), __jsx(\"option\", {\n    value: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 35\n    }\n  }, Name, \" \")))), \" \"), __jsx(\"div\", {\n    class: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 27\n    }\n  }, \" \", __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 29\n    }\n  }, \"Password\"), __jsx(\"input\", {\n    class: \"form-control form-control-solid placeholder-no-fix\",\n    type: \"password\",\n    name: \"password\",\n    id: \"password\",\n    ref: register({\n      required: \"You must provide a password.\",\n      minLength: {\n        message: \"Your password must be at least 6 characters\",\n        value: 6\n      }\n    }),\n    placeholder: \"Choose a password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 29\n    }\n  }), errors.password && __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 31\n    }\n  }, errors.password.message), \" \"), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 27\n    }\n  }, __jsx(\"label\", {\n    className: \"control-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 29\n    }\n  }, \"Confirm Password\"), __jsx(\"input\", {\n    name: \"confirmpassword\",\n    type: \"password\",\n    class: \"form-control form-control-solid placeholder-no-fix\",\n    ref: register({\n      required: \"You must confirm  the password.\",\n      minLength: {\n        message: \"Your password must be at least 6 characters\",\n        value: 6\n      }\n    }),\n    placeholder: \"Confirm password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 29\n    }\n  }), \" \"), __jsx(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 27\n    }\n  }), __jsx(\"div\", {\n    class: \"create-account\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 504,\n      columnNumber: 27\n    }\n  }, __jsx(\"button\", {\n    type: \"submit\",\n    disabled: isSubmitting,\n    class: \"btn green uppercase\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 505,\n      columnNumber: 29\n    }\n  }, \"Create account\"), \" \", __jsx(ToastContainer, {\n    hideProgressBar: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 29\n    }\n  })), \" \")))))))), \" \")));\n}","map":{"version":3,"sources":["C:/Users/msdtt/OneDrive/Documents/amai_hr_next_js_hasura/amai-hr/pages/register.js"],"names":["useEffect","useRouter","useForm","hasuraAdminClient","gql","ToastContainer","toast","useAuthState","useAuthDispatch","created_at","Date","toISOString","GetUserByEmail","GetUserByRole","getStaticProps","Manager","request","props","RegisterPage","router","isAuthenticated","register","createUser","handleSubmit","errors","formState","isSubmitting","setError","defaultValues","save_last_seen","register2","errors2","handleSubmit2","console","log","onSubmit","name","email","password","last_name","domain","phone_number","confirmpassword","manager_id","User","foundUser","alert","window","location","reload","fetch","method","headers","body","JSON","stringify","message","type","onSubmitManager","minHeight","display","objectFit","width","height","margin","required","pattern","value","map","id","Name","Avatar","minLength"],"mappings":"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","sourcesContent":["import { useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useForm } from \"react-hook-form\";\nimport { hasuraAdminClient, gql } from \"../lib/hasura-admin-client\";\nimport { ToastContainer, toast } from \"react-toastify\";\n\nimport { useAuthState, useAuthDispatch } from \"../context/auth\";\nconst created_at = new Date().toISOString();\nconst GetUserByEmail = gql`\n  query GetUserByEmail($email: String!) {\n    User(where: { email: { _eq: $email } }) {\n      id\n    }\n  }\n`;\nconst GetUserByRole = gql`\n  query MyQuery {\n    User(where: { Role: { _eq: \"Manager\" } }) {\n      id\n      Name\n      Last_Name\n      email\n      Avatar\n    }\n  }\n`;\nexport const getStaticProps = async () => {\n  const Manager = await hasuraAdminClient.request(GetUserByRole);\n\n  return {\n    props: {\n      Manager,\n    },\n  };\n};\nexport default function RegisterPage({ Manager }) {\n  const router = useRouter();\n  const { isAuthenticated } = useAuthState();\n  const { register: createUser } = useAuthDispatch();\n  const {\n    handleSubmit,\n    register,\n    errors,\n    formState: { isSubmitting },\n    setError,\n  } = useForm({ defaultValues: { save_last_seen: true } });\n  const {\n    register: register2,\n    errors: errors2,\n    handleSubmit: handleSubmit2,\n  } = useForm();\n\n  // useEffect(() => {\n  //   if (isAuthenticated) {\n  //     router.push(\"/\");\n  //   }\n  // }, [isAuthenticated]);\n\n  // if (isAuthenticated) return null;\n  console.log(Manager);\n  const onSubmit = async ({\n    name,\n    email,\n    password,\n    last_name,\n    domain,\n    phone_number,\n    confirmpassword,\n    manager_id,\n  }) => {\n    const {\n      User: [foundUser],\n    } = await hasuraAdminClient.request(GetUserByEmail, {\n      email,\n    });\n\n    if (foundUser) {\n      alert(\"Email already exists , please try another\");\n    } else if (password != confirmpassword) {\n      alert(\"Passwords don't match\");\n    } else {\n      try {\n        await createUser({\n          name,\n          email,\n          password,\n          last_name,\n          domain,\n          phone_number,\n          created_at,\n          manager_id,\n        });\n        toast(\"Account created\");\n        window.location.reload();\n\n        await fetch(\"/api/emailhey\", {\n          method: \"POST\",\n          headers: { \"content-type\": \"application/json\" },\n          body: JSON.stringify({\n            name,\n            email,\n            password,\n          }),\n        });\n      } catch ({ message }) {\n        setError(\"email\", {\n          type: \"manual\",\n          message,\n        });\n      }\n    }\n  };\n  const onSubmitManager = async ({\n    name,\n    email,\n    password,\n    last_name,\n    domain,\n    phone_number,\n    confirmpassword,\n    manager_id,\n  }) => {\n    const {\n      User: [foundUser],\n    } = await hasuraAdminClient.request(GetUserByEmail, {\n      email,\n    });\n\n    if (foundUser) {\n      alert(\"Email already exists , please try another\");\n    } else if (password != confirmpassword) {\n      alert(\"Passwords don't match\");\n    } else {\n      try {\n        await createUser({\n          name,\n          email,\n          password,\n          last_name,\n          domain,\n          phone_number,\n          created_at,\n          manager_id,\n        });\n        toast(\"Account created\");\n        window.location.reload();\n\n        await fetch(\"/api/emailhey\", {\n          method: \"POST\",\n          headers: { \"content-type\": \"application/json\" },\n          body: JSON.stringify({\n            name,\n            email,\n            password,\n          }),\n        });\n      } catch ({ message }) {\n        setError(\"email\", {\n          type: \"manual\",\n          message,\n        });\n      }\n    }\n  };\n  return (\n    <div className=\"page-content-wrapper\">\n      <div className=\"page-content\" style={{ minHeight: 1500 }}>\n        {\" \"}\n        <div class=\"profile-content\">\n          <div class=\"col-md-12\">\n            {\" \"}\n            <div class=\"col-md-6\">\n              {\" \"}\n              <div class=\"portlet light \">\n                <div class=\"portlet-body\">\n                  {\" \"}\n                  <h3 class=\"font-green\">New AMAIER ! </h3> <hr />{\" \"}\n                  <div>\n                    <img\n                      style={{\n                        display: \"block\",\n                        objectFit: \"cover\",\n                        width: 500,\n                        height: 470,\n                        margin: \"auto\",\n                      }}\n                      src=\"../aam.jpg\"\n                    ></img>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"col-md-6\">\n              <div class=\"portlet light \">\n                {\" \"}\n                <div className=\"portlet-title tabbable-line\">\n                  <div className=\"caption caption-md\">\n                    <i className=\"icon-globe theme-font hide\"></i>\n                    <span className=\"caption-subject font-blue-madison bold uppercase\">\n                      Account settings\n                    </span>\n                  </div>\n                  <ul className=\"nav nav-tabs\">\n                    <li className=\"active\">\n                      <a href=\"#tab_1_1\" data-toggle=\"tab\">\n                        Personal Info\n                      </a>\n                    </li>\n                    <li>\n                      <a href=\"#tab_1_2\" data-toggle=\"tab\">\n                        Change Avatar\n                      </a>\n                    </li>\n                  </ul>\n                </div>\n                <div class=\"portlet-body\">\n                  {\" \"}\n                  <div className=\"tab-content\">\n                    <div className=\"tab-pane active\" id=\"tab_1_1\">\n                      <h3>employee</h3>\n                      <hr />\n                      <form\n                        class=\"register-form\"\n                        onSubmit={handleSubmit(onSubmit)}\n                      >\n                        <div class=\"content\">\n                          {\" \"}\n                          <div class=\"form-group\">\n                            {\" \"}\n                            <label>First Name</label>{\" \"}\n                            <input\n                              class=\"form-control form-control-solid placeholder-no-fix\"\n                              name=\"name\"\n                              id=\"name\"\n                              ref={register}\n                              placeholder=\"name\"\n                              size=\"10\"\n                            />\n                          </div>\n                          <div class=\"form-group\">\n                            {\" \"}\n                            <label>Last Name</label>\n                            <input\n                              class=\"form-control form-control-solid placeholder-no-fix\"\n                              name=\"last_name\"\n                              id=\"last_name\"\n                              ref={register}\n                              placeholder=\"last name\"\n                            />\n                          </div>\n                          {errors.name && <span>{errors.name.message}</span>}\n                          <div class=\"form-group\">\n                            <label>Email</label>\n                            <input\n                              class=\"form-control form-control-solid placeholder-no-fix\"\n                              type=\"email\"\n                              name=\"email\"\n                              id=\"email\"\n                              ref={register({\n                                required: \"You must provide a email.\",\n                                pattern: {\n                                  value:\n                                    /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                                  message: \"You must provide a valid email\",\n                                },\n                              })}\n                              placeholder=\"Your email\"\n                            />\n                            {errors.email && (\n                              <span>{errors.email.message}</span>\n                            )}\n                          </div>{\" \"}\n                          <div class=\"form-group\">\n                            {\" \"}\n                            <label>Domain</label>\n                            <input\n                              class=\"form-control form-control-solid placeholder-no-fix\"\n                              name=\"domain\"\n                              id=\"domain\"\n                              ref={register}\n                              placeholder=\"domain\"\n                            />\n                          </div>{\" \"}\n                          <div class=\"form-group\">\n                            {\" \"}\n                            <label>Phone number</label>\n                            <input\n                              class=\"form-control form-control-solid placeholder-no-fix\"\n                              name=\"phone_number\"\n                              id=\"phone_number\"\n                              ref={register}\n                              placeholder=\"Phone number\"\n                            />\n                          </div>{\" \"}\n                          <div class=\"form-group\">\n                            <select\n                              name=\"manager_id\"\n                              id=\"manager_id\"\n                              ref={register}\n                              required\n                              className=\"form-control select2 \"\n                            >\n                              {Manager.User.map(({ id, Name, Avatar }) => (\n                                <React.Fragment key={id}>\n                                  {\" \"}\n                                  <option selected disabled>\n                                    Select Manager\n                                  </option>\n                                  <option value={id}>{Name} </option>\n                                </React.Fragment>\n                              ))}\n                            </select>{\" \"}\n                          </div>\n                          <div class=\"form-group\">\n                            {\" \"}\n                            <label>Password</label>\n                            <input\n                              class=\"form-control form-control-solid placeholder-no-fix\"\n                              type=\"password\"\n                              name=\"password\"\n                              id=\"password\"\n                              ref={register({\n                                required: \"You must provide a password.\",\n                                minLength: {\n                                  message:\n                                    \"Your password must be at least 6 characters\",\n                                  value: 6,\n                                },\n                              })}\n                              placeholder=\"Choose a password\"\n                            />\n                            {errors.password && (\n                              <span>{errors.password.message}</span>\n                            )}{\" \"}\n                          </div>\n                          <div className=\"form-group\">\n                            <label className=\"control-label\">\n                              Confirm Password\n                            </label>\n                            <input\n                              name=\"confirmpassword\"\n                              type=\"password\"\n                              class=\"form-control form-control-solid placeholder-no-fix\"\n                              ref={register({\n                                required: \"You must confirm  the password.\",\n                                minLength: {\n                                  message:\n                                    \"Your password must be at least 6 characters\",\n                                  value: 6,\n                                },\n                              })}\n                              placeholder=\"Confirm password\"\n                            />{\" \"}\n                          </div>\n                          <hr />\n                          <div class=\"create-account\">\n                            <button\n                              type=\"submit\"\n                              disabled={isSubmitting}\n                              class=\"btn green uppercase\"\n                            >\n                              Create account\n                            </button>{\" \"}\n                            <ToastContainer hideProgressBar={true} />\n                          </div>{\" \"}\n                        </div>\n                      </form>\n                    </div>{\" \"}\n                    <div className=\"tab-pane\" id=\"tab_1_2\">\n                      <form\n                        class=\"register-form\"\n                        onSubmit={handleSubmit(onSubmit)}\n                      >\n                        <div class=\"content\">\n                          {\" \"}\n                          <div class=\"form-group\">\n                            {\" \"}\n                            <label>First Name</label>{\" \"}\n                            <input\n                              class=\"form-control form-control-solid placeholder-no-fix\"\n                              name=\"name\"\n                              id=\"name\"\n                              ref={register}\n                              placeholder=\"name\"\n                              size=\"10\"\n                            />\n                          </div>\n                          <div class=\"form-group\">\n                            {\" \"}\n                            <label>Last Name</label>\n                            <input\n                              class=\"form-control form-control-solid placeholder-no-fix\"\n                              name=\"last_name\"\n                              id=\"last_name\"\n                              ref={register}\n                              placeholder=\"last name\"\n                            />\n                          </div>\n                          {errors.name && <span>{errors.name.message}</span>}\n                          <div class=\"form-group\">\n                            <label>Email</label>\n                            <input\n                              class=\"form-control form-control-solid placeholder-no-fix\"\n                              type=\"email\"\n                              name=\"email\"\n                              id=\"email\"\n                              ref={register({\n                                required: \"You must provide a email.\",\n                                pattern: {\n                                  value:\n                                    /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                                  message: \"You must provide a valid email\",\n                                },\n                              })}\n                              placeholder=\"Your email\"\n                            />\n                            {errors.email && (\n                              <span>{errors.email.message}</span>\n                            )}\n                          </div>{\" \"}\n                          <div class=\"form-group\">\n                            {\" \"}\n                            <label>Domain</label>\n                            <input\n                              class=\"form-control form-control-solid placeholder-no-fix\"\n                              name=\"domain\"\n                              id=\"domain\"\n                              ref={register}\n                              placeholder=\"domain\"\n                            />\n                          </div>{\" \"}\n                          <div class=\"form-group\">\n                            {\" \"}\n                            <label>Phone number</label>\n                            <input\n                              class=\"form-control form-control-solid placeholder-no-fix\"\n                              name=\"phone_number\"\n                              id=\"phone_number\"\n                              ref={register}\n                              placeholder=\"Phone number\"\n                            />\n                          </div>{\" \"}\n                          <div class=\"form-group\">\n                            <select\n                              name=\"manager_id\"\n                              id=\"manager_id\"\n                              ref={register}\n                              required\n                              className=\"form-control select2 \"\n                            >\n                              {Manager.User.map(({ id, Name, Avatar }) => (\n                                <React.Fragment key={id}>\n                                  {\" \"}\n                                  <option selected disabled>\n                                    Select Manager\n                                  </option>\n                                  <option value={id}>{Name} </option>\n                                </React.Fragment>\n                              ))}\n                            </select>{\" \"}\n                          </div>\n                          <div class=\"form-group\">\n                            {\" \"}\n                            <label>Password</label>\n                            <input\n                              class=\"form-control form-control-solid placeholder-no-fix\"\n                              type=\"password\"\n                              name=\"password\"\n                              id=\"password\"\n                              ref={register({\n                                required: \"You must provide a password.\",\n                                minLength: {\n                                  message:\n                                    \"Your password must be at least 6 characters\",\n                                  value: 6,\n                                },\n                              })}\n                              placeholder=\"Choose a password\"\n                            />\n                            {errors.password && (\n                              <span>{errors.password.message}</span>\n                            )}{\" \"}\n                          </div>\n                          <div className=\"form-group\">\n                            <label className=\"control-label\">\n                              Confirm Password\n                            </label>\n                            <input\n                              name=\"confirmpassword\"\n                              type=\"password\"\n                              class=\"form-control form-control-solid placeholder-no-fix\"\n                              ref={register({\n                                required: \"You must confirm  the password.\",\n                                minLength: {\n                                  message:\n                                    \"Your password must be at least 6 characters\",\n                                  value: 6,\n                                },\n                              })}\n                              placeholder=\"Confirm password\"\n                            />{\" \"}\n                          </div>\n                          <hr />\n                          <div class=\"create-account\">\n                            <button\n                              type=\"submit\"\n                              disabled={isSubmitting}\n                              class=\"btn green uppercase\"\n                            >\n                              Create account\n                            </button>{\" \"}\n                            <ToastContainer hideProgressBar={true} />\n                          </div>{\" \"}\n                        </div>\n                      </form>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>{\" \"}\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}