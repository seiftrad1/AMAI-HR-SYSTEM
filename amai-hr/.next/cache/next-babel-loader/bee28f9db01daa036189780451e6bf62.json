{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\msdtt\\\\OneDrive\\\\Documents\\\\amai_hr_next_js_hasura\\\\amai-hr\\\\pages\\\\CandidatOne\\\\[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from \"next/router\";\nimport useSWR from \"swr\";\nimport Layout from \"../Components/Layout\";\nimport { gql, hasuraUserClient } from \"../../lib/hasura-user-client\";\nconst GetCategoryIds = gql`\n  {\n    Candidate {\n      id\n    }\n  }\n`;\nconst GetCategoryById = gql`\n  query GetCategoryById($id: Int!) {\n    Candidate_by_pk(id: $id) {\n      id\n    }\n  }\n`;\nexport const getStaticPaths = async () => {\n  const hasura = hasuraUserClient();\n  const {\n    Candidate\n  } = await hasura.request(GetCategoryIds);\n  console.log(GetCategoryIds);\n  return {\n    paths: Candidate.map(({\n      id\n    }) => ({\n      params: {\n        id: Candidate.id.toString()\n      }\n    })),\n    fallback: false\n  };\n};\nexport const getStaticProps = async ({\n  params\n}) => {\n  const hasura = hasuraUserClient();\n  const {\n    id\n  } = params;\n  const initialData = await hasura.request(GetCategoryById, {\n    id\n  });\n  return {\n    props: {\n      initialData\n    },\n    revalidate: 1\n  };\n};\nexport default function CategoryPage({\n  initialData\n}) {\n  const hasura = hasuraUserClient();\n  const {\n    query\n  } = useRouter();\n  const {\n    id\n  } = query;\n  const {\n    data\n  } = useSWR([GetCategoryById, id], (query, id) => hasura.request(query, {\n    id\n  }), {\n    initialData,\n    revalidateOnMount: true\n  });\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, __jsx(\"h1\", {\n    className: \"text-2xl md:text-3xl font-semibold text-primary-500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, data.Candidate.id)));\n}","map":{"version":3,"sources":["C:/Users/msdtt/OneDrive/Documents/amai_hr_next_js_hasura/amai-hr/pages/CandidatOne/[id].js"],"names":["useRouter","useSWR","Layout","gql","hasuraUserClient","GetCategoryIds","GetCategoryById","getStaticPaths","hasura","Candidate","request","console","log","paths","map","id","params","toString","fallback","getStaticProps","initialData","props","revalidate","CategoryPage","query","data","revalidateOnMount"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,MAAP,MAAmB,KAAnB;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA,SAASC,GAAT,EAAcC,gBAAd,QAAsC,8BAAtC;AAEA,MAAMC,cAAc,GAAGF,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA,CANA;AAQA,MAAMG,eAAe,GAAGH,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA,CANA;AAQA,OAAO,MAAMI,cAAc,GAAG,YAAY;AACxC,QAAMC,MAAM,GAAGJ,gBAAgB,EAA/B;AAEA,QAAM;AAAEK,IAAAA;AAAF,MAAgB,MAAMD,MAAM,CAACE,OAAP,CAAeL,cAAf,CAA5B;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYP,cAAZ;AAEA,SAAO;AACLQ,IAAAA,KAAK,EAAEJ,SAAS,CAACK,GAAV,CAAc,CAAC;AAAEC,MAAAA;AAAF,KAAD,MAAa;AAChCC,MAAAA,MAAM,EAAE;AACND,QAAAA,EAAE,EAAEN,SAAS,CAACM,EAAV,CAAaE,QAAb;AADE;AADwB,KAAb,CAAd,CADF;AAMLC,IAAAA,QAAQ,EAAE;AANL,GAAP;AAQD,CAdM;AAgBP,OAAO,MAAMC,cAAc,GAAG,OAAO;AAAEH,EAAAA;AAAF,CAAP,KAAsB;AAClD,QAAMR,MAAM,GAAGJ,gBAAgB,EAA/B;AACA,QAAM;AAAEW,IAAAA;AAAF,MAASC,MAAf;AAEA,QAAMI,WAAW,GAAG,MAAMZ,MAAM,CAACE,OAAP,CAAeJ,eAAf,EAAgC;AAAES,IAAAA;AAAF,GAAhC,CAA1B;AAEA,SAAO;AACLM,IAAAA,KAAK,EAAE;AACLD,MAAAA;AADK,KADF;AAILE,IAAAA,UAAU,EAAE;AAJP,GAAP;AAMD,CAZM;AAcP,eAAe,SAASC,YAAT,CAAsB;AAAEH,EAAAA;AAAF,CAAtB,EAAuC;AACpD,QAAMZ,MAAM,GAAGJ,gBAAgB,EAA/B;AACA,QAAM;AAAEoB,IAAAA;AAAF,MAAYxB,SAAS,EAA3B;AACA,QAAM;AAAEe,IAAAA;AAAF,MAASS,KAAf;AAEA,QAAM;AAAEC,IAAAA;AAAF,MAAWxB,MAAM,CACrB,CAACK,eAAD,EAAkBS,EAAlB,CADqB,EAErB,CAACS,KAAD,EAAQT,EAAR,KAAeP,MAAM,CAACE,OAAP,CAAec,KAAf,EAAsB;AAAET,IAAAA;AAAF,GAAtB,CAFM,EAGrB;AACEK,IAAAA,WADF;AAEEM,IAAAA,iBAAiB,EAAE;AAFrB,GAHqB,CAAvB;AASA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,qDAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,IAAI,CAAChB,SAAL,CAAeM,EADlB,CADF,CADF,CADF;AASD","sourcesContent":["import { useRouter } from \"next/router\";\r\nimport useSWR from \"swr\";\r\n\r\nimport Layout from \"../Components/Layout\";\r\n\r\nimport { gql, hasuraUserClient } from \"../../lib/hasura-user-client\";\r\n\r\nconst GetCategoryIds = gql`\r\n  {\r\n    Candidate {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nconst GetCategoryById = gql`\r\n  query GetCategoryById($id: Int!) {\r\n    Candidate_by_pk(id: $id) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nexport const getStaticPaths = async () => {\r\n  const hasura = hasuraUserClient();\r\n\r\n  const { Candidate } = await hasura.request(GetCategoryIds);\r\n  console.log(GetCategoryIds);\r\n\r\n  return {\r\n    paths: Candidate.map(({ id }) => ({\r\n      params: {\r\n        id: Candidate.id.toString(),\r\n      },\r\n    })),\r\n    fallback: false,\r\n  };\r\n};\r\n\r\nexport const getStaticProps = async ({ params }) => {\r\n  const hasura = hasuraUserClient();\r\n  const { id } = params;\r\n\r\n  const initialData = await hasura.request(GetCategoryById, { id });\r\n\r\n  return {\r\n    props: {\r\n      initialData,\r\n    },\r\n    revalidate: 1,\r\n  };\r\n};\r\n\r\nexport default function CategoryPage({ initialData }) {\r\n  const hasura = hasuraUserClient();\r\n  const { query } = useRouter();\r\n  const { id } = query;\r\n\r\n  const { data } = useSWR(\r\n    [GetCategoryById, id],\r\n    (query, id) => hasura.request(query, { id }),\r\n    {\r\n      initialData,\r\n      revalidateOnMount: true,\r\n    }\r\n  );\r\n\r\n  return (\r\n    <Layout>\r\n      <div>\r\n        <h1 className=\"text-2xl md:text-3xl font-semibold text-primary-500\">\r\n          {data.Candidate.id}\r\n        </h1>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}