{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _templateObject,\n    _jsxFileName = \"C:\\\\Users\\\\msdtt\\\\OneDrive\\\\Documents\\\\amai_hr_next_js_hasura\\\\amai-hr\\\\pages\\\\Task.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport Layout from \"./Components/Layout\";\nimport TaskComponent from \"./Components/Task/Task\";\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport ReactMde from \"react-mde\";\nimport Markdown from \"react-markdown\";\nimport { useAuthState } from \"../context/auth\";\nimport { gql } from \"../lib/hasura-admin-client\";\nimport { hasuraUserClient } from \"../lib/hasura-user-client\";\nvar InsertThread = gql(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  mutation InsertThread(\\n    $categoryId: uuid!\\n    $title: String!\\n    $message: String!\\n  ) {\\n    insert_threads_one(\\n      object: {\\n        category_id: $categoryId\\n        title: $title\\n        posts: { data: { message: $message } }\\n      }\\n    ) {\\n      id\\n      title\\n      author {\\n        name\\n      }\\n      category {\\n        name\\n      }\\n      posts {\\n        message\\n      }\\n      created_at\\n    }\\n  }\\n\"])));\nexport var __N_SSG = true;\nexport default function Task(_ref) {\n  _s();\n\n  var categories = _ref.categories;\n  var router = useRouter();\n\n  var _useAuthState = useAuthState(),\n      isAuthenticated = _useAuthState.isAuthenticated,\n      user = _useAuthState.user;\n\n  var hasura = hasuraUserClient();\n\n  var _useForm = useForm(),\n      handleSubmit = _useForm.handleSubmit,\n      register = _useForm.register,\n      control = _useForm.control,\n      errors = _useForm.errors,\n      isSubmitting = _useForm.formState.isSubmitting;\n\n  var _useState = useState(\"write\"),\n      selectedTab = _useState[0],\n      setSelectedTab = _useState[1];\n\n  useEffect(function () {\n    if (!isAuthenticated) router.push(\"/\");\n  }, [isAuthenticated]);\n  if (!isAuthenticated) return null;\n\n  var onSubmit = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {\n      var categoryId, title, message, _yield$hasura$request, insert_threads_one;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              categoryId = _ref2.categoryId, title = _ref2.title, message = _ref2.message;\n              _context.prev = 1;\n              _context.next = 4;\n              return hasura.request(InsertThread, {\n                categoryId: categoryId,\n                title: title,\n                message: message\n              });\n\n            case 4:\n              _yield$hasura$request = _context.sent;\n              insert_threads_one = _yield$hasura$request.insert_threads_one;\n              router.push(\"/thread/\".concat(insert_threads_one.id));\n              _context.next = 12;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](1);\n              console.log(_context.t0);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 9]]);\n    }));\n\n    return function onSubmit(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(React.Fragment, null, __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"page-content-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"page-content\",\n    style: {\n      minHeight: 1500\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, __jsx(TaskComponent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  })))));\n}\n\n_s(Task, \"pSKCtTQtb3ZndsGWhUAP6dvH7g8=\", false, function () {\n  return [useRouter, useAuthState, useForm];\n});\n\n_c = Task;\n\nvar _c;\n\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"sources":["C:/Users/msdtt/OneDrive/Documents/amai_hr_next_js_hasura/amai-hr/pages/Task.js"],"names":["Layout","TaskComponent","React","useState","useEffect","useRouter","useForm","Controller","ReactMde","Markdown","useAuthState","gql","hasuraUserClient","InsertThread","Task","categories","router","isAuthenticated","user","hasura","handleSubmit","register","control","errors","isSubmitting","formState","selectedTab","setSelectedTab","push","onSubmit","categoryId","title","message","request","insert_threads_one","id","console","log","minHeight"],"mappings":";;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,qBAAnB;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,OAAT,EAAkBC,UAAlB,QAAoC,iBAApC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AAEA,SAASC,YAAT,QAA6B,iBAA7B;AACA,SAASC,GAAT,QAAuC,4BAAvC;AACA,SAASC,gBAAT,QAAiC,2BAAjC;AAcA,IAAMC,YAAY,GAAGF,GAAH,+fAAlB;;AAuCA,eAAe,SAASG,IAAT,OAA8B;AAAA;;AAAA,MAAdC,UAAc,QAAdA,UAAc;AAC3C,MAAMC,MAAM,GAAGX,SAAS,EAAxB;;AACA,sBAAkCK,YAAY,EAA9C;AAAA,MAAQO,eAAR,iBAAQA,eAAR;AAAA,MAAyBC,IAAzB,iBAAyBA,IAAzB;;AACA,MAAMC,MAAM,GAAGP,gBAAgB,EAA/B;;AACA,iBAMIN,OAAO,EANX;AAAA,MACEc,YADF,YACEA,YADF;AAAA,MAEEC,QAFF,YAEEA,QAFF;AAAA,MAGEC,OAHF,YAGEA,OAHF;AAAA,MAIEC,MAJF,YAIEA,MAJF;AAAA,MAKeC,YALf,YAKEC,SALF,CAKeD,YALf;;AAOA,kBAAsCrB,QAAQ,CAAC,OAAD,CAA9C;AAAA,MAAOuB,WAAP;AAAA,MAAoBC,cAApB;;AAEAvB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI,CAACa,eAAL,EAAsBD,MAAM,CAACY,IAAP,CAAY,GAAZ;AACvB,GAFQ,EAEN,CAACX,eAAD,CAFM,CAAT;AAIA,MAAI,CAACA,eAAL,EAAsB,OAAO,IAAP;;AAEtB,MAAMY,QAAQ;AAAA,yEAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAASC,cAAAA,UAAT,SAASA,UAAT,EAAqBC,KAArB,SAAqBA,KAArB,EAA4BC,OAA5B,SAA4BA,OAA5B;AAAA;AAAA;AAAA,qBAEwBb,MAAM,CAACc,OAAP,CAAepB,YAAf,EAA6B;AAChEiB,gBAAAA,UAAU,EAAVA,UADgE;AAEhEC,gBAAAA,KAAK,EAALA,KAFgE;AAGhEC,gBAAAA,OAAO,EAAPA;AAHgE,eAA7B,CAFxB;;AAAA;AAAA;AAELE,cAAAA,kBAFK,yBAELA,kBAFK;AAQblB,cAAAA,MAAM,CAACY,IAAP,mBAAuBM,kBAAkB,CAACC,EAA1C;AARa;AAAA;;AAAA;AAAA;AAAA;AAUbC,cAAAA,OAAO,CAACC,GAAR;;AAVa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAARR,QAAQ;AAAA;AAAA;AAAA,KAAd;;AAcA,SACE,4BACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAA8B,IAAA,KAAK,EAAE;AAAES,MAAAA,SAAS,EAAE;AAAb,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,CADF,CADF;AAWD;;GA5CuBxB,I;UACPT,S,EACmBK,Y,EAQ9BJ,O;;;KAVkBQ,I","sourcesContent":["import Layout from \"./Components/Layout\";\r\nimport TaskComponent from \"./Components/Task/Task\";\r\nimport React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useRouter } from \"next/router\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport ReactMde from \"react-mde\";\r\nimport Markdown from \"react-markdown\";\r\n\r\nimport { useAuthState } from \"../context/auth\";\r\nimport { gql, hasuraAdminClient } from \"../lib/hasura-admin-client\";\r\nimport { hasuraUserClient } from \"../lib/hasura-user-client\";\r\nconst GetCategories = gql`\r\n  {\r\n    categories(where: { parent_id: { _is_null: true } }) {\r\n      id\r\n      name\r\n      sub_categories {\r\n        id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst InsertThread = gql`\r\n  mutation InsertThread(\r\n    $categoryId: uuid!\r\n    $title: String!\r\n    $message: String!\r\n  ) {\r\n    insert_threads_one(\r\n      object: {\r\n        category_id: $categoryId\r\n        title: $title\r\n        posts: { data: { message: $message } }\r\n      }\r\n    ) {\r\n      id\r\n      title\r\n      author {\r\n        name\r\n      }\r\n      category {\r\n        name\r\n      }\r\n      posts {\r\n        message\r\n      }\r\n      created_at\r\n    }\r\n  }\r\n`;\r\n\r\nexport const getStaticProps = async () => {\r\n  const { categories } = await hasuraAdminClient.request(GetCategories);\r\n\r\n  return {\r\n    props: {\r\n      categories,\r\n    },\r\n  };\r\n};\r\n\r\nexport default function Task({ categories }) {\r\n  const router = useRouter();\r\n  const { isAuthenticated, user } = useAuthState();\r\n  const hasura = hasuraUserClient();\r\n  const {\r\n    handleSubmit,\r\n    register,\r\n    control,\r\n    errors,\r\n    formState: { isSubmitting },\r\n  } = useForm();\r\n  const [selectedTab, setSelectedTab] = useState(\"write\");\r\n\r\n  useEffect(() => {\r\n    if (!isAuthenticated) router.push(\"/\");\r\n  }, [isAuthenticated]);\r\n\r\n  if (!isAuthenticated) return null;\r\n\r\n  const onSubmit = async ({ categoryId, title, message }) => {\r\n    try {\r\n      const { insert_threads_one } = await hasura.request(InsertThread, {\r\n        categoryId,\r\n        title,\r\n        message,\r\n      });\r\n\r\n      router.push(`/thread/${insert_threads_one.id}`);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Layout>\r\n        <div className=\"page-content-wrapper\">\r\n          <div className=\"page-content\" style={{ minHeight: 1500 }}>\r\n            <TaskComponent />\r\n          </div>\r\n        </div>\r\n      </Layout>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}