{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _templateObject,\n    _templateObject2,\n    _jsxFileName = \"C:\\\\Users\\\\msdtt\\\\OneDrive\\\\Documents\\\\amai_hr_next_js_hasura\\\\amai-hr\\\\pages\\\\Todo.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport Layout from \"./Components/Layout\";\nimport startOfToday from \"date-fns/startOfToday\";\nimport { useAuthState } from \"../context/auth\";\nimport { gql } from \"../lib/hasura-admin-client\";\nimport { hasuraUserClient } from \"../lib/hasura-user-client\";\nvar from = new Date(startOfToday()).toISOString();\nvar GetTodos = gql(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  {\\n    Todo {\\n      Description\\n      Name\\n      Date\\n      User {\\n        Name\\n        id\\n      }\\n    }\\n  }\\n\"])));\nvar InsertTask = gql(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n  mutation InsertTask(\\n    $Description: String!\\n    $Name: String!\\n    $from: timestamptz!\\n    $user_id: Int!\\n  ) {\\n    insert_Todo_one(\\n      object: {\\n        Description: $Description\\n        Name: $Name\\n        Date: $from\\n        user_id: $user_id\\n      }\\n    ) {\\n      Description\\n      Date\\n      Name\\n      id\\n      user_id\\n    }\\n  }\\n\"])));\nexport var __N_SSG = true;\nexport default function Todos(_ref) {\n  _s();\n\n  var _this = this;\n\n  var User = _ref.User;\n  var router = useRouter();\n\n  var _useAuthState = useAuthState(),\n      isAuthenticated = _useAuthState.isAuthenticated,\n      user = _useAuthState.user;\n\n  var hasura = hasuraUserClient();\n\n  var _useForm = useForm(),\n      handleSubmit = _useForm.handleSubmit,\n      register = _useForm.register,\n      control = _useForm.control,\n      errors = _useForm.errors,\n      isSubmitting = _useForm.formState.isSubmitting;\n\n  useEffect(function () {\n    if (!isAuthenticated) router.push(\"/\");\n  }, [isAuthenticated]);\n  if (!isAuthenticated) return null;\n\n  var onSubmit = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {\n      var Description, Name, id, user_id, _yield$hasura$request, insert_Todo_one;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              Description = _ref2.Description, Name = _ref2.Name, id = _ref2.id, user_id = _ref2.user_id;\n              console.log(from);\n              _context.prev = 2;\n              _context.next = 5;\n              return hasura.request(InsertTask, {\n                Description: Description,\n                from: from,\n                Name: Name,\n                id: id,\n                user_id: user_id\n              });\n\n            case 5:\n              _yield$hasura$request = _context.sent;\n              insert_Todo_one = _yield$hasura$request.insert_Todo_one;\n              router.push(\"/CandidatList\");\n              _context.next = 13;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](2);\n              console.log(_context.t0);\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 10]]);\n    }));\n\n    return function onSubmit(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(React.Fragment, null, __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"page-content-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"page-content\",\n    style: {\n      minHeight: 1500\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    \"class\": \"profile-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    \"class\": \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    \"class\": \"col-md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    \"class\": \"portlet light \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 19\n    }\n  }, __jsx(\"div\", {\n    \"class\": \"portlet-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    \"class\": \"tab-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 23\n    }\n  }, __jsx(\"div\", {\n    \"class\": \"tab-pane active\",\n    id: \"tab_1_1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 25\n    }\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 27\n    }\n  }, __jsx(\"div\", {\n    \"class\": \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 29\n    }\n  }, __jsx(\"label\", {\n    \"class\": \"control-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 31\n    }\n  }, \"Name\"), __jsx(\"input\", {\n    name: \"Name\",\n    id: \"Name\",\n    type: \"text\",\n    placeholder: \"First Name\",\n    \"class\": \"form-control\",\n    ref: register({\n      required: \"You must select a category for your thread\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 31\n    }\n  }), \" \"), __jsx(\"div\", {\n    \"class\": \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 29\n    }\n  }, __jsx(\"label\", {\n    \"class\": \"control-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 31\n    }\n  }, \"Description\"), __jsx(\"input\", {\n    name: \"Description\",\n    id: \"Description\",\n    type: \"text\",\n    placeholder: \"Last Name\",\n    \"class\": \"form-control\",\n    ref: register({\n      required: \"You must select a category for your thread\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 31\n    }\n  }), \" \"), __jsx(\"select\", {\n    name: \"categoryId\",\n    id: \"categoryId\",\n    ref: register({\n      required: \"You must select a category for your thread\"\n    }),\n    className: \"appearance-none bg-transparent w-full\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 29\n    }\n  }, User.map(function (_ref4) {\n    var id = _ref4.id,\n        Name = _ref4.Name;\n    return __jsx(React.Fragment, {\n      key: id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 33\n      }\n    }, __jsx(\"option\", {\n      value: id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 35\n      }\n    }, Name));\n  })), __jsx(\"div\", {\n    \"class\": \"margiv-top-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 29\n    }\n  }, __jsx(\"button\", {\n    type: \"submit\",\n    \"class\": \"btn green\",\n    disabled: isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 31\n    }\n  }, \" \", \"Save Changes\", \" \"), __jsx(\"a\", {\n    href: \"#\",\n    \"class\": \"btn default\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 31\n    }\n  }, \" \", \"Cancel\", \" \"))))))))))), \" \")));\n}\n\n_s(Todos, \"8llguNPCjCtdST3PLfdi7yuAebI=\", false, function () {\n  return [useRouter, useAuthState, useForm];\n});\n\n_c = Todos;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todos\");","map":{"version":3,"sources":["C:/Users/msdtt/OneDrive/Documents/amai_hr_next_js_hasura/amai-hr/pages/Todo.js"],"names":["useState","useEffect","useRouter","useForm","Controller","Layout","startOfToday","useAuthState","gql","hasuraUserClient","from","Date","toISOString","GetTodos","InsertTask","Todos","User","router","isAuthenticated","user","hasura","handleSubmit","register","control","errors","isSubmitting","formState","push","onSubmit","Description","Name","id","user_id","console","log","request","insert_Todo_one","minHeight","required","map"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { useRouter } from \"next/router\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport Layout from \"./Components/Layout\";\r\nimport startOfToday from \"date-fns/startOfToday\";\r\n\r\nimport { useAuthState } from \"../context/auth\";\r\nimport { gql, hasuraAdminClient } from \"../lib/hasura-admin-client\";\r\nimport { hasuraUserClient } from \"../lib/hasura-user-client\";\r\n\r\nconst from = new Date(startOfToday()).toISOString();\r\n\r\nconst GetUsers = gql`\r\n  {\r\n    User {\r\n      Name\r\n      id\r\n    }\r\n  }\r\n`;\r\nconst GetTodos = gql`\r\n  {\r\n    Todo {\r\n      Description\r\n      Name\r\n      Date\r\n      User {\r\n        Name\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst InsertTask = gql`\r\n  mutation InsertTask(\r\n    $Description: String!\r\n    $Name: String!\r\n    $from: timestamptz!\r\n    $user_id: Int!\r\n  ) {\r\n    insert_Todo_one(\r\n      object: {\r\n        Description: $Description\r\n        Name: $Name\r\n        Date: $from\r\n        user_id: $user_id\r\n      }\r\n    ) {\r\n      Description\r\n      Date\r\n      Name\r\n      id\r\n      user_id\r\n    }\r\n  }\r\n`;\r\n\r\nexport const getStaticProps = async () => {\r\n  const { User } = await hasuraAdminClient.request(GetUsers);\r\n\r\n  return {\r\n    props: {\r\n      User,\r\n    },\r\n  };\r\n};\r\n\r\nexport default function Todos({ User }) {\r\n  const router = useRouter();\r\n  const { isAuthenticated, user } = useAuthState();\r\n  const hasura = hasuraUserClient();\r\n  const {\r\n    handleSubmit,\r\n    register,\r\n    control,\r\n    errors,\r\n    formState: { isSubmitting },\r\n  } = useForm();\r\n\r\n  useEffect(() => {\r\n    if (!isAuthenticated) router.push(\"/\");\r\n  }, [isAuthenticated]);\r\n\r\n  if (!isAuthenticated) return null;\r\n\r\n  const onSubmit = async ({ Description, Name, id, user_id }) => {\r\n    console.log(from);\r\n    try {\r\n      const { insert_Todo_one } = await hasura.request(InsertTask, {\r\n        Description,\r\n        from,\r\n        Name,\r\n        id,\r\n        user_id,\r\n      });\r\n\r\n      router.push(`/CandidatList`);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Layout>\r\n        <div className=\"page-content-wrapper\">\r\n          <div className=\"page-content\" style={{ minHeight: 1500 }}>\r\n            <div class=\"profile-content\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n                  <div class=\"portlet light \">\r\n                    <div class=\"portlet-body\">\r\n                      <div class=\"tab-content\">\r\n                        <div class=\"tab-pane active\" id=\"tab_1_1\">\r\n                          <form onSubmit={handleSubmit(onSubmit)}>\r\n                            <div class=\"form-group\">\r\n                              <label class=\"control-label\">Name</label>\r\n                              <input\r\n                                name=\"Name\"\r\n                                id=\"Name\"\r\n                                type=\"text\"\r\n                                placeholder=\"First Name\"\r\n                                class=\"form-control\"\r\n                                ref={register({\r\n                                  required:\r\n                                    \"You must select a category for your thread\",\r\n                                })}\r\n                              />{\" \"}\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                              <label class=\"control-label\">Description</label>\r\n                              <input\r\n                                name=\"Description\"\r\n                                id=\"Description\"\r\n                                type=\"text\"\r\n                                placeholder=\"Last Name\"\r\n                                class=\"form-control\"\r\n                                ref={register({\r\n                                  required:\r\n                                    \"You must select a category for your thread\",\r\n                                })}\r\n                              />{\" \"}\r\n                            </div>\r\n\r\n                            <select\r\n                              name=\"categoryId\"\r\n                              id=\"categoryId\"\r\n                              ref={register({\r\n                                required:\r\n                                  \"You must select a category for your thread\",\r\n                              })}\r\n                              className=\"appearance-none bg-transparent w-full\"\r\n                            >\r\n                              {User.map(({ id, Name }) => (\r\n                                <React.Fragment key={id}>\r\n                                  <option value={id}>{Name}</option>\r\n                                </React.Fragment>\r\n                              ))}\r\n                            </select>\r\n                            <div class=\"margiv-top-10\">\r\n                              <button\r\n                                type=\"submit\"\r\n                                class=\"btn green\"\r\n                                disabled={isSubmitting}\r\n                              >\r\n                                {\" \"}\r\n                                Save Changes{\" \"}\r\n                              </button>\r\n                              <a href=\"#\" class=\"btn default\">\r\n                                {\" \"}\r\n                                Cancel{\" \"}\r\n                              </a>\r\n                            </div>\r\n                          </form>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>{\" \"}\r\n        </div>\r\n      </Layout>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}