{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _templateObject,\n    _templateObject2,\n    _templateObject3,\n    _templateObject4,\n    _jsxFileName = \"C:\\\\Users\\\\msdtt\\\\OneDrive\\\\Documents\\\\amai_hr_next_js_hasura\\\\amai-hr\\\\pages\\\\Calendar\\\\index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport useSWR, { mutate } from \"swr\";\nimport { useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useForm } from \"react-hook-form\";\nimport React, { useState } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport Link from \"next/link\";\nimport gql from \"graphql-tag\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { format, intervalToDuration, parseISO } from \"date-fns\";\nimport FullCalendar from \"@fullcalendar/react\"; // must go before plugins\n\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport \"@fullcalendar/common/main.css\";\nimport \"@fullcalendar/daygrid/main.css\";\nimport \"@fullcalendar/timegrid/main.css\";\nimport \"@fullcalendar/list/main.css\";\nimport { TextField } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useAuthState, useAuthDispatch } from \"../../context/auth\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport listPlugin from \"@fullcalendar/list\";\nimport { hasuraUserClient } from \"../../lib/hasura-user-client\";\nvar today = new Date().toISOString().substring(0, 19);\nvar useStyles = makeStyles(function (theme) {\n  return {\n    container: {\n      display: \"flex\",\n      flexWrap: \"wrap\"\n    },\n    textField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      width: 200\n    }\n  };\n});\nvar GetEvents = gql(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  query MyQuery {\\n    Event {\\n      id\\n      Title\\n      description\\n      start_date\\n    }\\n  }\\n\"])));\nvar AddNotification = gql(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n  mutation MyMutation {\\n    insert_notification_one(\\n      object: {\\n        name: \\\"Event\\\"\\n        seen: false\\n        description: \\\"a new event has been added to your calendar!\\\"\\n      }\\n    ) {\\n      seen\\n      name\\n      id\\n      description\\n    }\\n  }\\n\"])));\nvar insertEvent = gql(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n  mutation MyMutation(\\n    $Title: String!\\n    $description: String!\\n    $start_date: timestamp!\\n  ) {\\n    insert_Event_one(\\n      object: {\\n        Title: $Title\\n        description: $description\\n        start_date: $start_date\\n      }\\n    ) {\\n      Title\\n      description\\n      start_date\\n    }\\n  }\\n\"])));\nexport var __N_SSG = true;\nexport default function Calendar(_ref) {\n  _s();\n\n  var _this = this;\n\n  var initialData = _ref.initialData,\n      datar = _ref.datar,\n      emails = _ref.emails;\n\n  var _useAuthState = useAuthState(),\n      isAuthenticated = _useAuthState.isAuthenticated,\n      user = _useAuthState.user;\n\n  var classes = useStyles();\n\n  var _useForm = useForm(),\n      handleSubmit = _useForm.handleSubmit,\n      register = _useForm.register,\n      control = _useForm.control,\n      errors = _useForm.errors,\n      isSubmitting = _useForm.formState.isSubmitting;\n\n  var hasura = hasuraUserClient();\n  var router = useRouter();\n\n  var _useSWR = useSWR(GetEvents, function (query) {\n    return hasura.request(query);\n  }, {\n    initialData: initialData,\n    revalidateOnMount: true\n  }),\n      data = _useSWR.data;\n\n  var onSubmit = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {\n      var Title, datetime, description, start_date, t, _yield$hasura$request, insert_Event_one, _yield$hasura$request2, insert_notification_one;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              Title = _ref2.Title, datetime = _ref2.datetime, description = _ref2.description;\n              console.log(datetime);\n              start_date = datetime;\n              t = emails.User.map(function (_ref4) {\n                var email = _ref4.email;\n                return email;\n              });\n              console.log(t);\n              _context.prev = 5;\n              _context.next = 8;\n              return hasura.request(insertEvent, {\n                Title: Title,\n                description: description,\n                start_date: start_date\n              });\n\n            case 8:\n              _yield$hasura$request = _context.sent;\n              insert_Event_one = _yield$hasura$request.insert_Event_one;\n\n              if (!isAuthenticated) {\n                _context.next = 15;\n                break;\n              }\n\n              _context.next = 13;\n              return hasura.request(AddNotification);\n\n            case 13:\n              _yield$hasura$request2 = _context.sent;\n              insert_notification_one = _yield$hasura$request2.insert_notification_one;\n\n            case 15:\n              _context.next = 17;\n              return fetch(\"/api/contact\", {\n                method: \"POST\",\n                headers: {\n                  \"content-type\": \"application/json\"\n                },\n                body: JSON.stringify(data)\n              });\n\n            case 17:\n              window.location.reload();\n              _context.next = 23;\n              break;\n\n            case 20:\n              _context.prev = 20;\n              _context.t0 = _context[\"catch\"](5);\n              console.log(_context.t0);\n\n            case 23:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[5, 20]]);\n    }));\n\n    return function onSubmit(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var deleteEvent = gql(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"\\n    mutation MyMutation($id: Int = 10) {\\n      delete_Event_by_pk(id: $id) {\\n        id\\n      }\\n    }\\n  \"])));\n\n  var handleDateClick = function handleDateClick(arg) {\n    // bind with an arrow function\n    alert(\"date \".concat(arg.dateStr, \" marked\")); // alert(\"Coordinates: \" + arg.jsEvent.pageX + \",\" + arg.jsEvent.pageY);\n    // alert(\"Current view: \" + arg.view.type);\n    // change the day's background color just for fun\n\n    arg.dayEl.style.backgroundColor = \"#FF5C5C\";\n  };\n\n  var handleevebt = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(arg) {\n      var c;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!confirm(\"are you sure you want to delete this event \".concat(arg.event.title, \"?\"))) {\n                _context2.next = 15;\n                break;\n              }\n\n              c = {\n                id: arg.event.id\n              };\n              console.log(c);\n              _context2.prev = 3;\n              _context2.next = 6;\n              return hasura.request(deleteEvent, c);\n\n            case 6:\n              mutate();\n              window.location.reload();\n              _context2.next = 13;\n              break;\n\n            case 10:\n              _context2.prev = 10;\n              _context2.t0 = _context2[\"catch\"](3);\n              console.error(_context2.t0);\n\n            case 13:\n              _context2.next = 16;\n              break;\n\n            case 15:\n              return _context2.abrupt(\"return\", null);\n\n            case 16:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[3, 10]]);\n    }));\n\n    return function handleevebt(_x2) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  var weekendsVisible = function weekendsVisible(arg) {\n    // alert(\"Coordinates: \" + arg.jsEvent.pageX + \",\" + arg.jsEvent.pageY);\n    // alert(\"Current view: \" + arg.view.type);\n    // change the day's background color just for fun\n    return arg.dayEl.style.backgroundColor = \"#FF5C5C\";\n  };\n\n  return __jsx(\"div\", {\n    className: \"page-content-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"page-content\",\n    style: {\n      minHeight: 1500\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    \"class\": \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    \"class\": \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    \"class\": \"portlet light portlet-fit bordered calendar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    \"class\": \"portlet-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    \"class\": \"caption\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 17\n    }\n  }, __jsx(\"i\", {\n    \"class\": \" icon-layers font-green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 19\n    }\n  }), __jsx(\"span\", {\n    \"class\": \"caption-subject font-green sbold uppercase\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 19\n    }\n  }, \"Notifications\"))), __jsx(\"div\", {\n    \"class\": \"portlet-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    \"class\": \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    \"class\": \"portlet-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 19\n    }\n  }, __jsx(\"div\", {\n    \"class\": \"tab-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    \"class\": \"tab-pane active\",\n    id: \"tab_1_1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 23\n    }\n  }, __jsx(\"div\", {\n    \"class\": \"scroller\",\n    style: {\n      height: 320\n    },\n    \"data-always-visible\": \"1\",\n    \"data-rail-visible1\": \"0\",\n    \"data-handle-color\": \"#D7DCE2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 25\n    }\n  }, __jsx(\"ul\", {\n    \"class\": \"feeds\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 27\n    }\n  }, \" \", datar.notification.map(function (_ref6) {\n    var id = _ref6.id,\n        name = _ref6.name,\n        seen = _ref6.seen;\n    return seen ? __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 33\n      }\n    }, __jsx(\"a\", {\n      href: \"javascript:;\",\n      \"class\": \"list-group-item list-group-item-danger\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 35\n      }\n    }, \" \", __jsx(\"i\", {\n      \"class\": \"fa fa-bell-o\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 37\n      }\n    }), \" New \", name, \" has been scheduled .check calendar !\", __jsx(\"span\", {\n      \"class\": \"badge badge-default\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 37\n      }\n    })), __jsx(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 35\n      }\n    })) : __jsx(\"a\", {\n      \"class\": \"list-group-item list-group-item-info\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 33\n      }\n    }, __jsx(\"i\", {\n      \"class\": \"fa fa-bell-o\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 35\n      }\n    }), \" New \", name, \" has been scheduled .check calendar !\");\n  })))))))))), \" \", __jsx(\"div\", {\n    \"class\": \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 11\n    }\n  }, \" \", __jsx(\"div\", {\n    \"class\": \"portlet light portlet-fit bordered calendar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    \"class\": \"portlet-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    \"class\": \"caption\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 17\n    }\n  }, \"tttttt\"))))), __jsx(\"div\", {\n    \"class\": \"portlet light portlet-fit bordered calendar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    \"class\": \"portlet-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    \"class\": \"caption\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 13\n    }\n  }, __jsx(\"i\", {\n    \"class\": \" icon-layers font-green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 15\n    }\n  }), __jsx(\"span\", {\n    \"class\": \"caption-subject font-green sbold uppercase\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 15\n    }\n  }, \"Calendar\"))), __jsx(\"div\", {\n    \"class\": \"portlet-body \",\n    style: {\n      paddingTop: 45\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    \"class\": \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    \"class\": \"col-md-3 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 15\n    }\n  }, __jsx(\"h3\", {\n    \"class\": \"event-form-title margin-bottom-20\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 17\n    }\n  }, \"Event\"), isAuthenticated ? user.Role === \"Admin\" ? __jsx(\"div\", {\n    id: \"external-events\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 21\n    }\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 23\n    }\n  }, \" \", __jsx(\"div\", {\n    \"class\": \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 25\n    }\n  }, __jsx(\"input\", {\n    type: \"text\",\n    name: \"Title\",\n    \"class\": \"form-control\",\n    placeholder: \"Event Type...\",\n    id: \"event_title\",\n    ref: register({\n      required: \"You must provide a the event\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 27\n    }\n  }), \" \", errors.Title && __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 44\n    }\n  }, errors.Title.message)), \" \", __jsx(\"div\", {\n    \"class\": \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 25\n    }\n  }, __jsx(\"input\", {\n    type: \"text\",\n    name: \"description\",\n    \"class\": \"form-control\",\n    placeholder: \"Description\",\n    id: \"event_title\",\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 27\n    }\n  }), \" \"), __jsx(\"div\", {\n    \"class\": \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 25\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 27\n    }\n  }, \"Next appointment\"), __jsx(TextField, {\n    id: \"datetime\",\n    name: \"datetime\",\n    type: \"datetime-local\",\n    defaultValue: today,\n    inputRef: register,\n    className: classes.textField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 27\n    }\n  })), __jsx(\"div\", {\n    \"class\": \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 25\n    }\n  }, __jsx(\"button\", {\n    type: \"submit\",\n    \"class\": \"btn green\",\n    disabled: isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 27\n    }\n  }, \" \", \"Add Event\", \" \"))), __jsx(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 23\n    }\n  }), __jsx(\"hr\", {\n    \"class\": \"visible-xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 23\n    }\n  }), \" \") : __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 21\n    }\n  }) : __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 19\n    }\n  })), __jsx(\"div\", {\n    \"class\": \"col-md-9 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 15\n    }\n  }, __jsx(FullCalendar, {\n    plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin, listPlugin],\n    headerToolbar: {\n      left: \"prev,next today\",\n      center: \"title\",\n      right: \"dayGridMonth,timeGridWeek,timeGridDay,listWeek\"\n    },\n    initialView: \"dayGridMonth\",\n    editable: true,\n    selectable: true,\n    selectMirror: true,\n    dayMaxEvents: true,\n    themeSystem: \"bootstrap\",\n    events: data.Event.map(function (_ref7) {\n      var id = _ref7.id,\n          Title = _ref7.Title,\n          start_date = _ref7.start_date;\n      console.log(Title);\n      return {\n        id: id,\n        title: Title,\n        date: start_date,\n        color: \"red\"\n      };\n    }),\n    dateClick: handleDateClick // initialEvents={INITIAL_EVENTS} // alternatively, use the `events` setting to fetch from a feed\n    // select={this.handleDateSelect}\n    // eventContent={renderEventContent} // custom render function\n    // eventsSet={this.handleEvents} // called after events are initialized/added/changed/removed\n\n    /* you can update a remote database when these fire:\r\n    eventAdd={function(){}}\r\n    eventChange={function(){}}\r\n    // */\n    //       validRange={{\n    //         start: \"2021-08-03\",\n    //         end: \"2021-08-07\",\n    //       }}\n    ,\n    weekends: false,\n    eventClick: handleevebt // select={color}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 17\n    }\n  })))))));\n}\n\n_s(Calendar, \"BL6U09iey45qHgXnd7GatkUq/Ag=\", false, function () {\n  return [useAuthState, useStyles, useForm, useRouter, useSWR];\n});\n\n_c = Calendar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"sources":["C:/Users/msdtt/OneDrive/Documents/amai_hr_next_js_hasura/amai-hr/pages/Calendar/index.js"],"names":["useSWR","mutate","useEffect","useRouter","useForm","React","useState","Form","Link","gql","DatePicker","format","intervalToDuration","parseISO","FullCalendar","dayGridPlugin","TextField","makeStyles","useAuthState","useAuthDispatch","interactionPlugin","timeGridPlugin","listPlugin","hasuraUserClient","today","Date","toISOString","substring","useStyles","theme","container","display","flexWrap","textField","marginLeft","spacing","marginRight","width","GetEvents","AddNotification","insertEvent","Calendar","initialData","datar","emails","isAuthenticated","user","classes","handleSubmit","register","control","errors","isSubmitting","formState","hasura","router","query","request","revalidateOnMount","data","onSubmit","Title","datetime","description","console","log","start_date","t","User","map","email","insert_Event_one","insert_notification_one","fetch","method","headers","body","JSON","stringify","window","location","reload","deleteEvent","handleDateClick","arg","alert","dateStr","dayEl","style","backgroundColor","handleevebt","confirm","event","title","c","id","error","weekendsVisible","minHeight","height","notification","name","seen","paddingTop","Role","required","message","left","center","right","Event","date","color"],"mappings":"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","sourcesContent":["import useSWR, { mutate } from \"swr\";\r\nimport { useEffect } from \"react\";\r\nimport { useRouter } from \"next/router\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport React, { useState } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport Link from \"next/link\";\r\nimport gql from \"graphql-tag\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { format, intervalToDuration, parseISO } from \"date-fns\";\r\nimport FullCalendar from \"@fullcalendar/react\"; // must go before plugins\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport \"@fullcalendar/common/main.css\";\r\nimport \"@fullcalendar/daygrid/main.css\";\r\nimport \"@fullcalendar/timegrid/main.css\";\r\nimport \"@fullcalendar/list/main.css\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useAuthState, useAuthDispatch } from \"../../context/auth\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\";\r\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\r\nimport listPlugin from \"@fullcalendar/list\";\r\nimport { hasuraUserClient } from \"../../lib/hasura-user-client\";\r\nconst today = new Date().toISOString().substring(0, 19);\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 200,\r\n  },\r\n}));\r\nconst GetEvents = gql`\r\n  query MyQuery {\r\n    Event {\r\n      id\r\n      Title\r\n      description\r\n      start_date\r\n    }\r\n  }\r\n`;\r\nconst getUserEmail = gql`\r\n  query MyQuery {\r\n    User {\r\n      email\r\n    }\r\n  }\r\n`;\r\nconst AddNotification = gql`\r\n  mutation MyMutation {\r\n    insert_notification_one(\r\n      object: {\r\n        name: \"Event\"\r\n        seen: false\r\n        description: \"a new event has been added to your calendar!\"\r\n      }\r\n    ) {\r\n      seen\r\n      name\r\n      id\r\n      description\r\n    }\r\n  }\r\n`;\r\n\r\nconst insertEvent = gql`\r\n  mutation MyMutation(\r\n    $Title: String!\r\n    $description: String!\r\n    $start_date: timestamp!\r\n  ) {\r\n    insert_Event_one(\r\n      object: {\r\n        Title: $Title\r\n        description: $description\r\n        start_date: $start_date\r\n      }\r\n    ) {\r\n      Title\r\n      description\r\n      start_date\r\n    }\r\n  }\r\n`;\r\nconst getNotifications = gql`\r\n  query MyQuery {\r\n    notification(where: { user_id: { _is_null: true } }) {\r\n      description\r\n      name\r\n      seen\r\n    }\r\n    notification_aggregate(where: { user_id: { _is_null: true } }) {\r\n      aggregate {\r\n        count\r\n      }\r\n    }\r\n  }\r\n`;\r\nexport const getStaticProps = async () => {\r\n  const hasura = hasuraUserClient();\r\n  const initialData = await hasura.request(GetEvents);\r\n  const datar = await hasura.request(getNotifications);\r\n  const emails = await hasura.request(getUserEmail);\r\n\r\n  return {\r\n    props: {\r\n      initialData,\r\n      datar,\r\n      emails,\r\n    },\r\n    revalidate: 1,\r\n  };\r\n};\r\n\r\nexport default function Calendar({ initialData, datar, emails }) {\r\n  const { isAuthenticated, user } = useAuthState();\r\n\r\n  const classes = useStyles();\r\n\r\n  const {\r\n    handleSubmit,\r\n    register,\r\n    control,\r\n    errors,\r\n    formState: { isSubmitting },\r\n  } = useForm();\r\n  const hasura = hasuraUserClient();\r\n  const router = useRouter();\r\n  const { data } = useSWR(GetEvents, (query) => hasura.request(query), {\r\n    initialData,\r\n    revalidateOnMount: true,\r\n  });\r\n  const onSubmit = async ({ Title, datetime, description }) => {\r\n    console.log(datetime);\r\n    const start_date = datetime;\r\n    const t = emails.User.map(({ email }) => {\r\n      return email;\r\n    });\r\n    console.log(t);\r\n    try {\r\n      const { insert_Event_one } = await hasura.request(insertEvent, {\r\n        Title,\r\n        description,\r\n        start_date,\r\n      });\r\n      if (isAuthenticated) {\r\n        const { insert_notification_one } = await hasura.request(\r\n          AddNotification\r\n        );\r\n      }\r\n      await fetch(\"/api/contact\", {\r\n        method: \"POST\",\r\n        headers: { \"content-type\": \"application/json\" },\r\n        body: JSON.stringify(data),\r\n      });\r\n      window.location.reload();\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  const deleteEvent = gql`\r\n    mutation MyMutation($id: Int = 10) {\r\n      delete_Event_by_pk(id: $id) {\r\n        id\r\n      }\r\n    }\r\n  `;\r\n  const handleDateClick = (arg) => {\r\n    // bind with an arrow function\r\n    alert(`date ${arg.dateStr} marked`);\r\n    // alert(\"Coordinates: \" + arg.jsEvent.pageX + \",\" + arg.jsEvent.pageY);\r\n    // alert(\"Current view: \" + arg.view.type);\r\n    // change the day's background color just for fun\r\n    arg.dayEl.style.backgroundColor = \"#FF5C5C\";\r\n  };\r\n  const handleevebt = async (arg) => {\r\n    if (\r\n      confirm(`are you sure you want to delete this event ${arg.event.title}?`)\r\n    ) {\r\n      const c = { id: arg.event.id };\r\n      console.log(c);\r\n      try {\r\n        await hasura.request(deleteEvent, c);\r\n        mutate();\r\n        window.location.reload();\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n  const weekendsVisible = (arg) => {\r\n    // alert(\"Coordinates: \" + arg.jsEvent.pageX + \",\" + arg.jsEvent.pageY);\r\n    // alert(\"Current view: \" + arg.view.type);\r\n    // change the day's background color just for fun\r\n    return (arg.dayEl.style.backgroundColor = \"#FF5C5C\");\r\n  };\r\n  return (\r\n    <div className=\"page-content-wrapper\">\r\n      <div className=\"page-content\" style={{ minHeight: 1500 }}>\r\n        {/* <h1 class=\"page-title\"> Calendar</h1> */}\r\n        <div class=\"row\">\r\n          <div class=\"col-md-6\">\r\n            <div class=\"portlet light portlet-fit bordered calendar\">\r\n              <div class=\"portlet-title\">\r\n                <div class=\"caption\">\r\n                  <i class=\" icon-layers font-green\"></i>\r\n                  <span class=\"caption-subject font-green sbold uppercase\">\r\n                    Notifications\r\n                  </span>\r\n                </div>\r\n              </div>\r\n              <div class=\"portlet-body\">\r\n                <div class=\"row\">\r\n                  <div class=\"portlet-body\">\r\n                    <div class=\"tab-content\">\r\n                      <div class=\"tab-pane active\" id=\"tab_1_1\">\r\n                        <div\r\n                          class=\"scroller\"\r\n                          style={{ height: 320 }}\r\n                          data-always-visible=\"1\"\r\n                          data-rail-visible1=\"0\"\r\n                          data-handle-color=\"#D7DCE2\"\r\n                        >\r\n                          <ul class=\"feeds\">\r\n                            {\" \"}\r\n                            {datar.notification.map(({ id, name, seen }) => {\r\n                              return seen ? (\r\n                                <div>\r\n                                  {/* <div class=\"label label-sm label-success\">\r\n                                     \r\n                                    </div> */}\r\n\r\n                                  <a\r\n                                    href=\"javascript:;\"\r\n                                    class=\"list-group-item list-group-item-danger\"\r\n                                  >\r\n                                    {\" \"}\r\n                                    <i class=\"fa fa-bell-o\"></i> New {name} has\r\n                                    been scheduled .check calendar !\r\n                                    <span class=\"badge badge-default\"></span>\r\n                                  </a>\r\n                                  <br />\r\n                                </div>\r\n                              ) : (\r\n                                <a class=\"list-group-item list-group-item-info\">\r\n                                  <i class=\"fa fa-bell-o\"></i> New {name} has\r\n                                  been scheduled .check calendar !\r\n                                </a>\r\n                              );\r\n                            })}\r\n                          </ul>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>{\" \"}\r\n          <div class=\"col-md-6\">\r\n            {\" \"}\r\n            <div class=\"portlet light portlet-fit bordered calendar\">\r\n              <div class=\"portlet-title\">\r\n                <div class=\"caption\">tttttt</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"portlet light portlet-fit bordered calendar\">\r\n          <div class=\"portlet-title\">\r\n            <div class=\"caption\">\r\n              <i class=\" icon-layers font-green\"></i>\r\n              <span class=\"caption-subject font-green sbold uppercase\">\r\n                Calendar\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div class=\"portlet-body \" style={{ paddingTop: 45 }}>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-3 \">\r\n                <h3 class=\"event-form-title margin-bottom-20\">Event</h3>\r\n                {isAuthenticated ? (\r\n                  user.Role === \"Admin\" ? (\r\n                    <div id=\"external-events\">\r\n                      <form onSubmit={handleSubmit(onSubmit)}>\r\n                        {\" \"}\r\n                        <div class=\"form-group\">\r\n                          <input\r\n                            type=\"text\"\r\n                            name=\"Title\"\r\n                            class=\"form-control\"\r\n                            placeholder=\"Event Type...\"\r\n                            id=\"event_title\"\r\n                            ref={register({\r\n                              required: \"You must provide a the event\",\r\n                            })}\r\n                          />{\" \"}\r\n                          {errors.Title && <span>{errors.Title.message}</span>}\r\n                        </div>{\" \"}\r\n                        <div class=\"form-group\">\r\n                          <input\r\n                            type=\"text\"\r\n                            name=\"description\"\r\n                            class=\"form-control\"\r\n                            placeholder=\"Description\"\r\n                            id=\"event_title\"\r\n                            ref={register}\r\n                          />{\" \"}\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                          <label>Next appointment</label>\r\n                          <TextField\r\n                            id=\"datetime\"\r\n                            name=\"datetime\"\r\n                            type=\"datetime-local\"\r\n                            defaultValue={today}\r\n                            inputRef={register}\r\n                            className={classes.textField}\r\n                          />\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                          <button\r\n                            type=\"submit\"\r\n                            class=\"btn green\"\r\n                            disabled={isSubmitting}\r\n                          >\r\n                            {\" \"}\r\n                            Add Event{\" \"}\r\n                          </button>\r\n                        </div>\r\n                      </form>\r\n                      <hr />\r\n                      <hr class=\"visible-xs\" />{\" \"}\r\n                    </div>\r\n                  ) : (\r\n                    <div></div>\r\n                  )\r\n                ) : (\r\n                  <div></div>\r\n                )}\r\n              </div>\r\n              <div class=\"col-md-9 \">\r\n                <FullCalendar\r\n                  plugins={[\r\n                    dayGridPlugin,\r\n                    timeGridPlugin,\r\n                    interactionPlugin,\r\n                    listPlugin,\r\n                  ]}\r\n                  headerToolbar={{\r\n                    left: \"prev,next today\",\r\n                    center: \"title\",\r\n                    right: \"dayGridMonth,timeGridWeek,timeGridDay,listWeek\",\r\n                  }}\r\n                  initialView=\"dayGridMonth\"\r\n                  editable={true}\r\n                  selectable={true}\r\n                  selectMirror={true}\r\n                  dayMaxEvents={true}\r\n                  themeSystem=\"bootstrap\"\r\n                  events={data.Event.map(({ id, Title, start_date }) => {\r\n                    console.log(Title);\r\n\r\n                    return {\r\n                      id: id,\r\n                      title: Title,\r\n                      date: start_date,\r\n                      color: \"red\",\r\n                    };\r\n                  })}\r\n                  dateClick={handleDateClick}\r\n                  // initialEvents={INITIAL_EVENTS} // alternatively, use the `events` setting to fetch from a feed\r\n                  // select={this.handleDateSelect}\r\n                  // eventContent={renderEventContent} // custom render function\r\n                  // eventsSet={this.handleEvents} // called after events are initialized/added/changed/removed\r\n                  /* you can update a remote database when these fire:\r\n                eventAdd={function(){}}\r\n                eventChange={function(){}}\r\n                // */\r\n                  //       validRange={{\r\n                  //         start: \"2021-08-03\",\r\n                  //         end: \"2021-08-07\",\r\n                  //       }}\r\n                  weekends={false}\r\n                  eventClick={handleevebt}\r\n                  // select={color}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}