{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\msdtt\\\\OneDrive\\\\Documents\\\\amai_hr_next_js_hasura\\\\amai-hr\\\\pages\\\\register.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useForm } from \"react-hook-form\";\nimport { useAuthState, useAuthDispatch } from \"../context/auth\";\nexport default function RegisterPage() {\n  const router = useRouter();\n  const {\n    isAuthenticated\n  } = useAuthState();\n  const {\n    register: createUser\n  } = useAuthDispatch();\n  const {\n    handleSubmit,\n    register,\n    errors,\n    formState: {\n      isSubmitting\n    },\n    setError\n  } = useForm({\n    defaultValues: {\n      save_last_seen: true\n    }\n  });\n\n  const onSubmit = async ({\n    name,\n    email,\n    password,\n    save_last_seen\n  }) => {\n    try {\n      await createUser({\n        name,\n        email,\n        password,\n        save_last_seen\n      });\n      router.push(\"/\");\n    } catch ({\n      message\n    }) {\n      setError(\"email\", {\n        type: \"manual\",\n        message\n      });\n    }\n  };\n\n  return __jsx(\"body\", {\n    className: \"login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, __jsx(\"form\", {\n    class: \"register-form\",\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    class: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, \" \", __jsx(\"h3\", {\n    class: \"font-green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, \"Add User\"), \" \", __jsx(\"div\", {\n    class: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, __jsx(\"input\", {\n    class: \"form-control form-control-solid placeholder-no-fix\",\n    name: \"name\",\n    id: \"name\",\n    ref: register({\n      required: \"You must provide a name.\"\n    }),\n    placeholder: \"Your name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  })), errors.name && __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 27\n    }\n  }, errors.name.message), __jsx(\"div\", {\n    class: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, \" \", __jsx(\"input\", {\n    class: \"form-control form-control-solid placeholder-no-fix\",\n    type: \"email\",\n    name: \"email\",\n    id: \"email\",\n    ref: register({\n      required: \"You must provide a email.\",\n      pattern: {\n        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n        message: \"You must provide a valid email\"\n      }\n    }),\n    placeholder: \"Your email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }), errors.email && __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 30\n    }\n  }, errors.email.message)), __jsx(\"div\", {\n    class: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, \" \", __jsx(\"input\", {\n    class: \"form-control form-control-solid placeholder-no-fix\",\n    type: \"password\",\n    name: \"password\",\n    id: \"password\",\n    ref: register({\n      required: \"You must provide a password.\",\n      minLength: {\n        message: \"Your password must be at least 6 characters\",\n        value: 6\n      }\n    }),\n    placeholder: \"Choose a password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }), errors.password && __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 33\n    }\n  }, errors.password.message)), __jsx(\"div\", {\n    class: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, \" \", __jsx(\"label\", {\n    htmlFor: \"save_last_seen\",\n    class: \"rememberme check mt-checkbox mt-checkbox-outline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    type: \"checkbox\",\n    id: \"save_last_seen\",\n    name: \"save_last_seen\",\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }\n  }), \"Show as online to other users\", __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 44\n    }\n  }))), __jsx(\"div\", {\n    class: \"create-account\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, __jsx(\"button\", {\n    type: \"submit\",\n    disabled: isSubmitting,\n    class: \"btn green uppercase\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, \"Create account\")), \" \")));\n}","map":{"version":3,"sources":["C:/Users/msdtt/OneDrive/Documents/amai_hr_next_js_hasura/amai-hr/pages/register.js"],"names":["useEffect","useRouter","useForm","useAuthState","useAuthDispatch","RegisterPage","router","isAuthenticated","register","createUser","handleSubmit","errors","formState","isSubmitting","setError","defaultValues","save_last_seen","onSubmit","name","email","password","push","message","type","required","pattern","value","minLength"],"mappings":"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","sourcesContent":["import { useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useForm } from \"react-hook-form\";\n\nimport { useAuthState, useAuthDispatch } from \"../context/auth\";\n\nexport default function RegisterPage() {\n  const router = useRouter();\n  const { isAuthenticated } = useAuthState();\n  const { register: createUser } = useAuthDispatch();\n  const {\n    handleSubmit,\n    register,\n    errors,\n    formState: { isSubmitting },\n    setError,\n  } = useForm({ defaultValues: { save_last_seen: true } });\n\n  const onSubmit = async ({ name, email, password, save_last_seen }) => {\n    try {\n      await createUser({ name, email, password, save_last_seen });\n\n      router.push(\"/\");\n    } catch ({ message }) {\n      setError(\"email\", {\n        type: \"manual\",\n        message,\n      });\n    }\n  };\n\n  return (\n    <body className=\"login\">\n      <form class=\"register-form\" onSubmit={handleSubmit(onSubmit)}>\n        <div class=\"content\">\n          {\" \"}\n          <h3 class=\"font-green\">Add User</h3>{\" \"}\n          <div class=\"form-group\">\n            <input\n              class=\"form-control form-control-solid placeholder-no-fix\"\n              name=\"name\"\n              id=\"name\"\n              ref={register({\n                required: \"You must provide a name.\",\n              })}\n              placeholder=\"Your name\"\n            />\n          </div>\n          {errors.name && <span>{errors.name.message}</span>}\n          <div class=\"form-group\">\n            {\" \"}\n            <input\n              class=\"form-control form-control-solid placeholder-no-fix\"\n              type=\"email\"\n              name=\"email\"\n              id=\"email\"\n              ref={register({\n                required: \"You must provide a email.\",\n                pattern: {\n                  value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                  message: \"You must provide a valid email\",\n                },\n              })}\n              placeholder=\"Your email\"\n            />\n            {errors.email && <span>{errors.email.message}</span>}\n          </div>\n          <div class=\"form-group\">\n            {\" \"}\n            <input\n              class=\"form-control form-control-solid placeholder-no-fix\"\n              type=\"password\"\n              name=\"password\"\n              id=\"password\"\n              ref={register({\n                required: \"You must provide a password.\",\n                minLength: {\n                  message: \"Your password must be at least 6 characters\",\n                  value: 6,\n                },\n              })}\n              placeholder=\"Choose a password\"\n            />\n            {errors.password && <span>{errors.password.message}</span>}\n          </div>\n          <div class=\"form-group\">\n            {\" \"}\n            <label\n              htmlFor=\"save_last_seen\"\n              class=\"rememberme check mt-checkbox mt-checkbox-outline\"\n            >\n              <input\n                type=\"checkbox\"\n                id=\"save_last_seen\"\n                name=\"save_last_seen\"\n                ref={register}\n              />\n              Show as online to other users<span></span>\n            </label>\n          </div>\n          <div class=\"create-account\">\n            <button\n              type=\"submit\"\n              disabled={isSubmitting}\n              class=\"btn green uppercase\"\n            >\n              Create account\n            </button>\n          </div>{\" \"}\n        </div>\n      </form>\n    </body>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}