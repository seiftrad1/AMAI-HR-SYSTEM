{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _templateObject,\n    _templateObject2,\n    _jsxFileName = \"C:\\\\Users\\\\msdtt\\\\OneDrive\\\\Documents\\\\amai_hr_next_js_hasura\\\\amai-hr\\\\pages\\\\register.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useForm } from \"react-hook-form\";\nimport { hasuraAdminClient, gql } from \"../lib/hasura-admin-client\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport { useAuthState, useAuthDispatch } from \"../context/auth\";\nvar created_at = new Date().toISOString();\nvar GetUserByEmail = gql(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  query GetUserByEmail($email: String!) {\\n    User(where: { email: { _eq: $email } }) {\\n      id\\n    }\\n  }\\n\"])));\nvar GetUserByRole = gql(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n  query MyQuery {\\n    User(where: { Role: { _eq: \\\"Manager\\\" } }) {\\n      id\\n      Name\\n      Last_Name\\n      email\\n      Avatar\\n    }\\n  }\\n\"])));\nexport var __N_SSG = true;\nexport default function RegisterPage(_ref) {\n  _s();\n\n  var _this = this;\n\n  var Manager = _ref.Manager;\n  var router = useRouter();\n\n  var _useAuthState = useAuthState(),\n      isAuthenticated = _useAuthState.isAuthenticated;\n\n  var _useAuthDispatch = useAuthDispatch(),\n      createUser = _useAuthDispatch.register;\n\n  var _useForm = useForm({\n    defaultValues: {\n      save_last_seen: true\n    }\n  }),\n      handleSubmit = _useForm.handleSubmit,\n      register = _useForm.register,\n      errors = _useForm.errors,\n      isSubmitting = _useForm.formState.isSubmitting,\n      setError = _useForm.setError; // useEffect(() => {\n  //   if (isAuthenticated) {\n  //     router.push(\"/\");\n  //   }\n  // }, [isAuthenticated]);\n  // if (isAuthenticated) return null;\n\n\n  console.log(Manager);\n\n  var onSubmit = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {\n      var name, email, password, last_name, domain, phone_number, confirmpassword, manager_id, _yield$hasuraAdminCli, _yield$hasuraAdminCli2, foundUser, _yield$hasuraAdminCli3, _yield$hasuraAdminCli4, Manager, message;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              name = _ref2.name, email = _ref2.email, password = _ref2.password, last_name = _ref2.last_name, domain = _ref2.domain, phone_number = _ref2.phone_number, confirmpassword = _ref2.confirmpassword, manager_id = _ref2.manager_id;\n              _context.next = 3;\n              return hasuraAdminClient.request(GetUserByEmail, {\n                email: email\n              });\n\n            case 3:\n              _yield$hasuraAdminCli = _context.sent;\n              _yield$hasuraAdminCli2 = _slicedToArray(_yield$hasuraAdminCli.User, 1);\n              foundUser = _yield$hasuraAdminCli2[0];\n              _context.next = 8;\n              return hasuraAdminClient.request(GetUserByRole);\n\n            case 8:\n              _yield$hasuraAdminCli3 = _context.sent;\n              _yield$hasuraAdminCli4 = _slicedToArray(_yield$hasuraAdminCli3.Manager, 1);\n              Manager = _yield$hasuraAdminCli4[0];\n\n              if (!foundUser) {\n                _context.next = 15;\n                break;\n              }\n\n              alert(\"Email already exists , please try another\");\n              _context.next = 32;\n              break;\n\n            case 15:\n              if (!(password != confirmpassword)) {\n                _context.next = 19;\n                break;\n              }\n\n              alert(\"Passwords don't match\");\n              _context.next = 32;\n              break;\n\n            case 19:\n              _context.prev = 19;\n              _context.next = 22;\n              return createUser({\n                name: name,\n                email: email,\n                password: password,\n                last_name: last_name,\n                domain: domain,\n                phone_number: phone_number,\n                created_at: created_at,\n                manager_id: manager_id\n              });\n\n            case 22:\n              toast(\"Account created\");\n              window.location.reload();\n              _context.next = 26;\n              return fetch(\"/api/emailhey\", {\n                method: \"POST\",\n                headers: {\n                  \"content-type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                  name: name,\n                  email: email,\n                  password: password\n                })\n              });\n\n            case 26:\n              _context.next = 32;\n              break;\n\n            case 28:\n              _context.prev = 28;\n              _context.t0 = _context[\"catch\"](19);\n              message = _context.t0.message;\n              setError(\"email\", {\n                type: \"manual\",\n                message: message\n              });\n\n            case 32:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[19, 28]]);\n    }));\n\n    return function onSubmit(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(\"div\", {\n    className: \"page-content-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"page-content\",\n    style: {\n      minHeight: 1500\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, \" \", __jsx(\"div\", {\n    \"class\": \"profile-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    \"class\": \"col-md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }, \" \", __jsx(\"div\", {\n    \"class\": \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, \" \", __jsx(\"div\", {\n    \"class\": \"portlet light \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    \"class\": \"portlet-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  }, \" \", __jsx(\"h3\", {\n    \"class\": \"font-green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 19\n    }\n  }, \"New AMAIER ! \"), \" \", __jsx(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 61\n    }\n  }), \" \", __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 19\n    }\n  }, __jsx(\"img\", {\n    style: {\n      display: \"block\",\n      objectFit: \"cover\",\n      width: 500,\n      height: 470,\n      margin: \"auto\"\n    },\n    src: \"../aam.jpg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 21\n    }\n  }))))), __jsx(\"div\", {\n    \"class\": \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    \"class\": \"portlet light \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    \"class\": \"portlet-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }\n  }, __jsx(\"form\", {\n    \"class\": \"register-form\",\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 19\n    }\n  }, __jsx(\"div\", {\n    \"class\": \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 21\n    }\n  }, \" \", __jsx(\"h3\", {\n    \"class\": \"font-green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 23\n    }\n  }, \"Register new employee\"), \" \", __jsx(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 73\n    }\n  }), __jsx(\"div\", {\n    \"class\": \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 23\n    }\n  }, \" \", __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 25\n    }\n  }, \"First Name\"), \" \", __jsx(\"input\", {\n    \"class\": \"form-control form-control-solid placeholder-no-fix\",\n    name: \"name\",\n    id: \"name\",\n    ref: register,\n    placeholder: \"name\",\n    size: \"10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 25\n    }\n  })), __jsx(\"div\", {\n    \"class\": \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 23\n    }\n  }, \" \", __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 25\n    }\n  }, \"Last Name\"), __jsx(\"input\", {\n    \"class\": \"form-control form-control-solid placeholder-no-fix\",\n    name: \"last_name\",\n    id: \"last_name\",\n    ref: register,\n    placeholder: \"last name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 25\n    }\n  })), errors.name && __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 39\n    }\n  }, errors.name.message), __jsx(\"div\", {\n    \"class\": \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 23\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 25\n    }\n  }, \"Email\"), __jsx(\"input\", {\n    \"class\": \"form-control form-control-solid placeholder-no-fix\",\n    type: \"email\",\n    name: \"email\",\n    id: \"email\",\n    ref: register({\n      required: \"You must provide a email.\",\n      pattern: {\n        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n        message: \"You must provide a valid email\"\n      }\n    }),\n    placeholder: \"Your email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 25\n    }\n  }), errors.email && __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 42\n    }\n  }, errors.email.message)), \" \", __jsx(\"div\", {\n    \"class\": \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 23\n    }\n  }, \" \", __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 25\n    }\n  }, \"Domain\"), __jsx(\"input\", {\n    \"class\": \"form-control form-control-solid placeholder-no-fix\",\n    name: \"domain\",\n    id: \"domain\",\n    ref: register,\n    placeholder: \"domain\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 25\n    }\n  })), \" \", __jsx(\"div\", {\n    \"class\": \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 23\n    }\n  }, \" \", __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 25\n    }\n  }, \"Phone number\"), __jsx(\"input\", {\n    \"class\": \"form-control form-control-solid placeholder-no-fix\",\n    name: \"phone_number\",\n    id: \"phone_number\",\n    ref: register,\n    placeholder: \"Phone number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 25\n    }\n  })), \" \", __jsx(\"div\", {\n    \"class\": \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 23\n    }\n  }, __jsx(\"select\", {\n    name: \"manager_id\",\n    id: \"manager_id\",\n    ref: register,\n    required: true,\n    className: \"form-control select2 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 25\n    }\n  }, Manager.User.map(function (_ref5) {\n    var id = _ref5.id,\n        Name = _ref5.Name,\n        Avatar = _ref5.Avatar;\n    return __jsx(React.Fragment, {\n      key: id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 29\n      }\n    }, \" \", __jsx(\"option\", {\n      selected: true,\n      disabled: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 31\n      }\n    }, \"Select country\"), __jsx(\"option\", {\n      value: id,\n      style: {\n        backgroundImage: \"../../\".concat(Avatar)\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 31\n      }\n    }, Name, \" \"));\n  })), \" \"), __jsx(\"div\", {\n    \"class\": \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 23\n    }\n  }, \" \", __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 25\n    }\n  }, \"Password\"), __jsx(\"input\", {\n    \"class\": \"form-control form-control-solid placeholder-no-fix\",\n    type: \"password\",\n    name: \"password\",\n    id: \"password\",\n    ref: register({\n      required: \"You must provide a password.\",\n      minLength: {\n        message: \"Your password must be at least 6 characters\",\n        value: 6\n      }\n    }),\n    placeholder: \"Choose a password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 25\n    }\n  }), errors.password && __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 27\n    }\n  }, errors.password.message), \" \"), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 23\n    }\n  }, __jsx(\"label\", {\n    className: \"control-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 25\n    }\n  }, \"Confirm Password\"), __jsx(\"input\", {\n    name: \"confirmpassword\",\n    type: \"password\",\n    \"class\": \"form-control form-control-solid placeholder-no-fix\",\n    ref: register({\n      required: \"You must confirm  the password.\",\n      minLength: {\n        message: \"Your password must be at least 6 characters\",\n        value: 6\n      }\n    }),\n    placeholder: \"Confirm password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 25\n    }\n  }), \" \"), __jsx(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 23\n    }\n  }), __jsx(\"div\", {\n    \"class\": \"create-account\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 23\n    }\n  }, __jsx(\"button\", {\n    type: \"submit\",\n    disabled: isSubmitting,\n    \"class\": \"btn green uppercase\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 25\n    }\n  }, \"Create account\"), \" \", __jsx(ToastContainer, {\n    hideProgressBar: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 25\n    }\n  })), \" \")))))), \" \")));\n}\n\n_s(RegisterPage, \"mulLM9muuppGXncEHR4HfhyllRg=\", false, function () {\n  return [useRouter, useAuthState, useAuthDispatch, useForm];\n});\n\n_c = RegisterPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"sources":["C:/Users/msdtt/OneDrive/Documents/amai_hr_next_js_hasura/amai-hr/pages/register.js"],"names":["useEffect","useRouter","useForm","hasuraAdminClient","gql","ToastContainer","toast","useAuthState","useAuthDispatch","created_at","Date","toISOString","GetUserByEmail","GetUserByRole","RegisterPage","Manager","router","isAuthenticated","createUser","register","defaultValues","save_last_seen","handleSubmit","errors","isSubmitting","formState","setError","console","log","onSubmit","name","email","password","last_name","domain","phone_number","confirmpassword","manager_id","request","User","foundUser","alert","window","location","reload","fetch","method","headers","body","JSON","stringify","message","type","minHeight","display","objectFit","width","height","margin","required","pattern","value","map","id","Name","Avatar","backgroundImage","minLength"],"mappings":"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","sourcesContent":["import { useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useForm } from \"react-hook-form\";\nimport { hasuraAdminClient, gql } from \"../lib/hasura-admin-client\";\nimport { ToastContainer, toast } from \"react-toastify\";\n\nimport { useAuthState, useAuthDispatch } from \"../context/auth\";\nconst created_at = new Date().toISOString();\nconst GetUserByEmail = gql`\n  query GetUserByEmail($email: String!) {\n    User(where: { email: { _eq: $email } }) {\n      id\n    }\n  }\n`;\nconst GetUserByRole = gql`\n  query MyQuery {\n    User(where: { Role: { _eq: \"Manager\" } }) {\n      id\n      Name\n      Last_Name\n      email\n      Avatar\n    }\n  }\n`;\nexport const getStaticProps = async () => {\n  const Manager = await hasuraAdminClient.request(GetUserByRole);\n\n  return {\n    props: {\n      Manager,\n    },\n  };\n};\nexport default function RegisterPage({ Manager }) {\n  const router = useRouter();\n  const { isAuthenticated } = useAuthState();\n  const { register: createUser } = useAuthDispatch();\n  const {\n    handleSubmit,\n    register,\n    errors,\n    formState: { isSubmitting },\n    setError,\n  } = useForm({ defaultValues: { save_last_seen: true } });\n  // useEffect(() => {\n  //   if (isAuthenticated) {\n  //     router.push(\"/\");\n  //   }\n  // }, [isAuthenticated]);\n\n  // if (isAuthenticated) return null;\n  console.log(Manager);\n  const onSubmit = async ({\n    name,\n    email,\n    password,\n    last_name,\n    domain,\n    phone_number,\n    confirmpassword,\n    manager_id,\n  }) => {\n    const {\n      User: [foundUser],\n    } = await hasuraAdminClient.request(GetUserByEmail, {\n      email,\n    });\n    const {\n      Manager: [Manager],\n    } = await hasuraAdminClient.request(GetUserByRole);\n    if (foundUser) {\n      alert(\"Email already exists , please try another\");\n    } else if (password != confirmpassword) {\n      alert(\"Passwords don't match\");\n    } else {\n      try {\n        await createUser({\n          name,\n          email,\n          password,\n          last_name,\n          domain,\n          phone_number,\n          created_at,\n          manager_id,\n        });\n        toast(\"Account created\");\n        window.location.reload();\n\n        await fetch(\"/api/emailhey\", {\n          method: \"POST\",\n          headers: { \"content-type\": \"application/json\" },\n          body: JSON.stringify({\n            name,\n            email,\n            password,\n          }),\n        });\n      } catch ({ message }) {\n        setError(\"email\", {\n          type: \"manual\",\n          message,\n        });\n      }\n    }\n  };\n\n  return (\n    <div className=\"page-content-wrapper\">\n      <div className=\"page-content\" style={{ minHeight: 1500 }}>\n        {\" \"}\n        <div class=\"profile-content\">\n          <div class=\"col-md-12\">\n            {\" \"}\n            <div class=\"col-md-6\">\n              {\" \"}\n              <div class=\"portlet light \">\n                <div class=\"portlet-body\">\n                  {\" \"}\n                  <h3 class=\"font-green\">New AMAIER ! </h3> <hr />{\" \"}\n                  <div>\n                    <img\n                      style={{\n                        display: \"block\",\n                        objectFit: \"cover\",\n                        width: 500,\n                        height: 470,\n                        margin: \"auto\",\n                      }}\n                      src=\"../aam.jpg\"\n                    ></img>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"col-md-6\">\n              <div class=\"portlet light \">\n                <div class=\"portlet-body\">\n                  <form class=\"register-form\" onSubmit={handleSubmit(onSubmit)}>\n                    <div class=\"content\">\n                      {\" \"}\n                      <h3 class=\"font-green\">Register new employee</h3> <hr />\n                      <div class=\"form-group\">\n                        {\" \"}\n                        <label>First Name</label>{\" \"}\n                        <input\n                          class=\"form-control form-control-solid placeholder-no-fix\"\n                          name=\"name\"\n                          id=\"name\"\n                          ref={register}\n                          placeholder=\"name\"\n                          size=\"10\"\n                        />\n                      </div>\n                      <div class=\"form-group\">\n                        {\" \"}\n                        <label>Last Name</label>\n                        <input\n                          class=\"form-control form-control-solid placeholder-no-fix\"\n                          name=\"last_name\"\n                          id=\"last_name\"\n                          ref={register}\n                          placeholder=\"last name\"\n                        />\n                      </div>\n                      {errors.name && <span>{errors.name.message}</span>}\n                      <div class=\"form-group\">\n                        <label>Email</label>\n                        <input\n                          class=\"form-control form-control-solid placeholder-no-fix\"\n                          type=\"email\"\n                          name=\"email\"\n                          id=\"email\"\n                          ref={register({\n                            required: \"You must provide a email.\",\n                            pattern: {\n                              value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                              message: \"You must provide a valid email\",\n                            },\n                          })}\n                          placeholder=\"Your email\"\n                        />\n                        {errors.email && <span>{errors.email.message}</span>}\n                      </div>{\" \"}\n                      <div class=\"form-group\">\n                        {\" \"}\n                        <label>Domain</label>\n                        <input\n                          class=\"form-control form-control-solid placeholder-no-fix\"\n                          name=\"domain\"\n                          id=\"domain\"\n                          ref={register}\n                          placeholder=\"domain\"\n                        />\n                      </div>{\" \"}\n                      <div class=\"form-group\">\n                        {\" \"}\n                        <label>Phone number</label>\n                        <input\n                          class=\"form-control form-control-solid placeholder-no-fix\"\n                          name=\"phone_number\"\n                          id=\"phone_number\"\n                          ref={register}\n                          placeholder=\"Phone number\"\n                        />\n                      </div>{\" \"}\n                      <div class=\"form-group\">\n                        <select\n                          name=\"manager_id\"\n                          id=\"manager_id\"\n                          ref={register}\n                          required\n                          className=\"form-control select2 \"\n                        >\n                          {Manager.User.map(({ id, Name, Avatar }) => (\n                            <React.Fragment key={id}>\n                              {\" \"}\n                              <option selected disabled>\n                                Select country\n                              </option>\n                              <option\n                                value={id}\n                                style={{\n                                  backgroundImage: `../../${Avatar}`,\n                                }}\n                              >\n                                {Name}{\" \"}\n                              </option>\n                            </React.Fragment>\n                          ))}\n                        </select>{\" \"}\n                      </div>\n                      <div class=\"form-group\">\n                        {\" \"}\n                        <label>Password</label>\n                        <input\n                          class=\"form-control form-control-solid placeholder-no-fix\"\n                          type=\"password\"\n                          name=\"password\"\n                          id=\"password\"\n                          ref={register({\n                            required: \"You must provide a password.\",\n                            minLength: {\n                              message:\n                                \"Your password must be at least 6 characters\",\n                              value: 6,\n                            },\n                          })}\n                          placeholder=\"Choose a password\"\n                        />\n                        {errors.password && (\n                          <span>{errors.password.message}</span>\n                        )}{\" \"}\n                      </div>\n                      <div className=\"form-group\">\n                        <label className=\"control-label\">\n                          Confirm Password\n                        </label>\n                        <input\n                          name=\"confirmpassword\"\n                          type=\"password\"\n                          class=\"form-control form-control-solid placeholder-no-fix\"\n                          ref={register({\n                            required: \"You must confirm  the password.\",\n                            minLength: {\n                              message:\n                                \"Your password must be at least 6 characters\",\n                              value: 6,\n                            },\n                          })}\n                          placeholder=\"Confirm password\"\n                        />{\" \"}\n                      </div>\n                      <hr />\n                      <div class=\"create-account\">\n                        <button\n                          type=\"submit\"\n                          disabled={isSubmitting}\n                          class=\"btn green uppercase\"\n                        >\n                          Create account\n                        </button>{\" \"}\n                        <ToastContainer hideProgressBar={true} />\n                      </div>{\" \"}\n                    </div>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>{\" \"}\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}