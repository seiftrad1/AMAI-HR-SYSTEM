{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\msdtt\\\\OneDrive\\\\Documents\\\\amai_hr_next_js_hasura\\\\amai-hr\\\\pages\\\\Todo.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useForm } from \"react-hook-form\";\nimport useSWR, { mutate } from \"swr\";\nimport { useAuthState, useAuthDispatch } from \"../context/auth\";\nimport { gql, hasuraAdminClient } from \"../lib/hasura-admin-client\";\nimport { hasuraUserClient } from \"../lib/hasura-user-client\";\nimport { format, parseISO } from \"date-fns\";\nconst from = new Date().toISOString();\nconst GetUsers = gql`\n  {\n    User(\n      where: { _not: { todo_users: {} }, Role: { _eq: \"Employee\" } }\n      order_by: { created_at: desc }\n    ) {\n      Name\n      id\n      notifications_aggregate(where: { seen: { _eq: false } }) {\n        aggregate {\n          count\n        }\n      }\n      notifications(where: { seen: { _eq: false } }) {\n        id\n        description\n      }\n    }\n  }\n`;\nconst GetUserHR = gql`\n  {\n    User(where: { Role: { _eq: \"HR manager\" } }) {\n      Name\n      id\n    }\n  }\n`;\nconst GetManagers = gql`\n  {\n    User(where: { Role: { _eq: \"Manager\" } }) {\n      Name\n      id\n    }\n  }\n`;\nconst GetUsersOn = gql`\n  {\n    User(\n      where: {\n        todo_users: {\n          Todo: { Member: { _eq: \"Employee\" }, Type: { _eq: \"Onboarding\" } }\n        }\n      }\n      order_by: { created_at: desc }\n    ) {\n      Name\n      id\n      email\n      created_at\n      Avatar\n      Last_Name\n    }\n  }\n`;\nconst GetTodos = gql`\n  {\n    Todo(where: { Member: { _eq: \"Employee\" }, Type: { _eq: \"Onboarding\" } }) {\n      id\n      Description\n      Name\n    }\n  }\n`;\nconst GetTodoshr = gql`\n  {\n    Todo(where: { Member: { _eq: \"Manager\" }, Type: { _eq: \"Onboarding\" } }) {\n      id\n      Description\n      Name\n    }\n  }\n`;\nconst GetTodohr = gql`\n  {\n    Todo(where: { Member: { _eq: \"HR\" }, Type: { _eq: \"Onboarding\" } }) {\n      id\n      Description\n      Name\n    }\n  }\n`;\nconst AddNotification = gql`\n  mutation MyMutation($user_id: Int!) {\n    insert_notification_one(\n      object: {\n        user_id: $user_id\n        name: \"Onboarding\"\n        seen: false\n        description: \"you are assigned to your onboarding tasks. \"\n      }\n    ) {\n      user_id\n      seen\n      name\n      id\n      description\n    }\n  }\n`;\nconst InsertTask = gql`\n  mutation InsertTask(\n    $Description: String!\n    $Name: String!\n    $from: timestamptz!\n    $Member: String!\n  ) {\n    insert_Todo_one(\n      object: {\n        Description: $Description\n        Name: $Name\n        Date: $from\n        Type: \"Onboarding\"\n        Member: $Member\n      }\n    ) {\n      Description\n      Date\n      Name\n    }\n  }\n`;\nconst deleteTodo = gql`\n  mutation MyMutation($id: Int!) {\n    delete_Todo_by_pk(id: $id) {\n      id\n    }\n  }\n`;\nexport const getStaticProps = async () => {\n  const hasura = hasuraUserClient();\n  const {\n    User\n  } = await hasura.request(GetUsers);\n  const HR = await hasura.request(GetUserHR);\n  const Manager = await hasura.request(GetManagers);\n  const initialData = await hasura.request(GetTodos);\n  const UserOn = await hasura.request(GetUsersOn);\n  const Todoshr = await hasuraAdminClient.request(GetTodoshr);\n  const Todohr = await hasuraAdminClient.request(GetTodohr);\n  console.log(HR);\n  console.log(User);\n  return {\n    props: {\n      User,\n      initialData,\n      UserOn,\n      Todoshr,\n      Todohr,\n      HR,\n      Manager\n    }\n  };\n};\nexport default function Todos({\n  User,\n  initialData,\n  UserOn,\n  Todoshr,\n  Todohr,\n  HR,\n  Manager\n}) {\n  const router = useRouter();\n  const {\n    isAuthenticated,\n    user\n  } = useAuthState();\n  const hasura = hasuraUserClient();\n  const {\n    handleSubmit,\n    register,\n    control,\n    errors,\n    formState: {\n      isSubmitting\n    }\n  } = useForm();\n  const {\n    updateUser\n  } = useAuthDispatch();\n  const {\n    register: register2,\n    errors: errors2,\n    handleSubmit: handleSubmit2\n  } = useForm();\n  const {\n    register: register3,\n    errors: errors3,\n    handleSubmit: handleSubmit3\n  } = useForm();\n  const {\n    register: register4,\n    errors: errors4,\n    handleSubmit: handleSubmit4\n  } = useForm();\n  useEffect(() => {\n    if (!isAuthenticated) router.push(\"/\");\n  }, [isAuthenticated]);\n  if (!isAuthenticated) return null;\n  const {\n    data\n  } = useSWR(GetTodos, query => hasura.request(query), {\n    initialData,\n    revalidateOnMount: true\n  });\n  const {\n    datal\n  } = useSWR(GetTodoshr, query => hasura.request(query), {\n    Todoshr,\n    revalidateOnMount: true\n  });\n  console.log(UserOn);\n\n  const onSubmit = async ({\n    Description,\n    Name,\n    Member\n  }) => {\n    console.log(from);\n\n    try {\n      const {\n        insert_Todo_one\n      } = await hasura.request(InsertTask, {\n        Description,\n        from,\n        Name,\n        Member\n      });\n      window.location.reload();\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const Assign = async ({\n    user_id\n  }) => {\n    const u_id = user_id;\n    const t = data.Todo.map(({\n      id\n    }) => {\n      return {\n        todo_id: id,\n        user_id: u_id,\n        completed: false\n      };\n    });\n    const query = gql`\n      mutation insert_todo_user($objects: [todo_user_insert_input!]!) {\n        insert_todo_user(objects: $objects) {\n          affected_rows\n        }\n      }\n    `;\n\n    if (confirm(`are you sure you want to assign those tasks to this employee`)) {\n      try {\n        const {\n          insert_todo_user\n        } = await hasura.request(query, {\n          objects: t\n        });\n        const {\n          insert_notification_one\n        } = await hasura.request(AddNotification, {\n          user_id: u_id\n        });\n        mutate();\n        window.location.reload();\n      } catch (error) {\n        console.error(error);\n      }\n    } else {\n      return null;\n    }\n  };\n\n  const AssignHR = async ({\n    user_id\n  }) => {\n    const u_id = user_id;\n    const t = Todohr.Todo.map(({\n      id\n    }) => {\n      return {\n        todo_id: id,\n        user_id: u_id,\n        completed: false\n      };\n    });\n    const query = gql`\n      mutation insert_todo_user($objects: [todo_user_insert_input!]!) {\n        insert_todo_user(objects: $objects) {\n          affected_rows\n        }\n      }\n    `;\n\n    if (confirm(`are you sure you want to assign those tasks to this employee`)) {\n      try {\n        const {\n          insert_todo_user\n        } = await hasura.request(query, {\n          objects: t\n        });\n        const {\n          insert_notification_one\n        } = await hasura.request(AddNotification, {\n          user_id: u_id\n        });\n        mutate();\n        window.location.reload();\n      } catch (error) {\n        console.error(error);\n      }\n    } else {\n      return null;\n    }\n  };\n\n  const AssignManager = async ({\n    user_id\n  }) => {\n    const u_id = user_id;\n    const t = Todoshr.Todo.map(({\n      id\n    }) => {\n      return {\n        todo_id: id,\n        user_id: u_id,\n        completed: false\n      };\n    });\n    const query = gql`\n      mutation insert_todo_user($objects: [todo_user_insert_input!]!) {\n        insert_todo_user(objects: $objects) {\n          affected_rows\n        }\n      }\n    `;\n\n    if (confirm(`are you sure you want to assign those tasks to this employee`)) {\n      try {\n        const {\n          insert_todo_user\n        } = await hasura.request(query, {\n          objects: t\n        });\n        const {\n          insert_notification_one\n        } = await hasura.request(AddNotification, {\n          user_id: u_id\n        });\n        mutate();\n        window.location.reload();\n      } catch (error) {\n        console.error(error);\n      }\n    } else {\n      return null;\n    }\n  };\n\n  const deleteATodo = async id => {\n    if (confirm(\"are you sure you want to delete this todo?\")) {\n      try {\n        await hasura.request(deleteTodo, {\n          id\n        });\n        mutate();\n        window.location.reload();\n      } catch (error) {\n        console.error(error);\n      }\n    } else {\n      return null;\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: \"page-content-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"page-content\",\n    style: {\n      minHeight: 1500\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    class: \"profile-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    class: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 11\n    }\n  }, \" \", __jsx(\"div\", {\n    class: \"col-md-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    class: \"portlet light \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    class: \"portlet-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 17\n    }\n  }, __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 19\n    }\n  }, \" onboarding Tasks\"), __jsx(\"ul\", {\n    className: \"nav nav-tabs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 19\n    }\n  }, __jsx(\"li\", {\n    className: \"active\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 21\n    }\n  }, __jsx(\"a\", {\n    href: \"#tab_1_1\",\n    \"data-toggle\": \"tab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 23\n    }\n  }, \"Employee\")), __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 21\n    }\n  }, __jsx(\"a\", {\n    href: \"#tab_1_2\",\n    \"data-toggle\": \"tab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 23\n    }\n  }, \"HR manager\")), \" \", __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 21\n    }\n  }, __jsx(\"a\", {\n    href: \"#tab_1_3\",\n    \"data-toggle\": \"tab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 23\n    }\n  }, \"Manager\"))), \" \", __jsx(\"div\", {\n    className: \"tab-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 19\n    }\n  }, __jsx(\"div\", {\n    className: \"tab-pane active\",\n    id: \"tab_1_1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    class: \"table-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 23\n    }\n  }, __jsx(\"table\", {\n    class: \"table table-striped table-bordered table-hover\",\n    id: \"sample_3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 25\n    }\n  }, __jsx(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 27\n    }\n  }, __jsx(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 29\n    }\n  }, \" \", __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 31\n    }\n  }, \" title \"), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 31\n    }\n  }, \" task \"), \" \", __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 47\n    }\n  }, \" Edit \"), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 31\n    }\n  }, \" Delete \"))), __jsx(\"tfoot\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 27\n    }\n  }, __jsx(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 29\n    }\n  }, __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 31\n    }\n  }, \" \"), \" \", __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 42\n    }\n  }, \" \"), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 31\n    }\n  }, \" \"), \" \", __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 42\n    }\n  }, \" \"))), __jsx(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 27\n    }\n  }, data.Todo.map(({\n    id,\n    Description,\n    Name\n  }) => {\n    return __jsx(\"tr\", {\n      key: id,\n      class: \"odd gradeX\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 33\n      }\n    }, __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 35\n      }\n    }, Name), __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 35\n      }\n    }, Description), \" \", __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 35\n      }\n    }, __jsx(\"a\", {\n      class: \"btn btn-circle blue btn-sm \",\n      href: `/todo/${id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 37\n      }\n    }, \"edit\")), \" \", __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 35\n      }\n    }, __jsx(\"button\", {\n      class: \"btn btn-circle red btn-sm \",\n      onClick: () => deleteATodo(id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 37\n      }\n    }, \" \", \"delete\")));\n  }))), \" \", __jsx(\"div\", {\n    class: \"portlet light \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 25\n    }\n  }, __jsx(\"div\", {\n    class: \"portlet-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 27\n    }\n  }, __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 29\n    }\n  }, \"Assign tasks to:\"), \" \", __jsx(\"form\", {\n    onSubmit: handleSubmit2(Assign),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 29\n    }\n  }, \" \", __jsx(\"div\", {\n    class: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 31\n    }\n  }, __jsx(\"select\", {\n    name: \"user_id\",\n    id: \"user_id\",\n    ref: register2,\n    required: true,\n    className: \"form-control select2 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 33\n    }\n  }, User.map(({\n    id,\n    Name\n  }) => __jsx(React.Fragment, {\n    key: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 37\n    }\n  }, \" \", __jsx(\"option\", {\n    value: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 39\n    }\n  }, Name))))), __jsx(\"div\", {\n    class: \"btn-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 31\n    }\n  }, __jsx(\"button\", {\n    className: \"btn green\",\n    type: \"submit\",\n    disabled: isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 33\n    }\n  }, \" \", \"Assign\")), \" \"))), \" \")), __jsx(\"div\", {\n    className: \"tab-pane \",\n    id: \"tab_1_2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    class: \"table-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 23\n    }\n  }, __jsx(\"table\", {\n    class: \"table table-striped table-bordered table-hover\",\n    id: \"sample_3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 25\n    }\n  }, __jsx(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 27\n    }\n  }, __jsx(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 29\n    }\n  }, \" \", __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 31\n    }\n  }, \" title \"), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 31\n    }\n  }, \" task \"), \" \", __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 47\n    }\n  }, \" Edit \"), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 31\n    }\n  }, \" Delete \"))), __jsx(\"tfoot\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 27\n    }\n  }, __jsx(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 29\n    }\n  }, __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 31\n    }\n  }, \" \"), \" \", __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 42\n    }\n  }, \" \"), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 31\n    }\n  }, \" \"), \" \", __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 42\n    }\n  }, \" \"))), __jsx(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 27\n    }\n  }, Todohr.Todo.map(({\n    id,\n    Description,\n    Name\n  }) => {\n    return __jsx(\"tr\", {\n      key: id,\n      class: \"odd gradeX\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 33\n      }\n    }, __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 35\n      }\n    }, Name), __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 35\n      }\n    }, Description), \" \", __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 35\n      }\n    }, __jsx(\"a\", {\n      class: \"btn btn-circle blue btn-sm \",\n      href: `/todo/${id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 37\n      }\n    }, \"edit\")), \" \", __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 35\n      }\n    }, __jsx(\"button\", {\n      class: \"btn btn-circle red btn-sm \",\n      onClick: () => deleteATodo(id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 37\n      }\n    }, \" \", \"delete\")));\n  }))), \" \"), __jsx(\"div\", {\n    class: \"portlet light \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 23\n    }\n  }, __jsx(\"div\", {\n    class: \"portlet-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 511,\n      columnNumber: 25\n    }\n  }, __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 27\n    }\n  }, \"Assign tasks to:\"), \" \", __jsx(\"form\", {\n    onSubmit: handleSubmit3(AssignHR),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 27\n    }\n  }, \" \", __jsx(\"div\", {\n    class: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 515,\n      columnNumber: 29\n    }\n  }, __jsx(\"select\", {\n    name: \"user_id\",\n    id: \"user_id\",\n    ref: register3,\n    required: true,\n    className: \"form-control select2 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 516,\n      columnNumber: 31\n    }\n  }, HR.User.map(({\n    id,\n    Name\n  }) => __jsx(React.Fragment, {\n    key: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 524,\n      columnNumber: 35\n    }\n  }, \" \", __jsx(\"option\", {\n    value: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 526,\n      columnNumber: 37\n    }\n  }, Name))))), __jsx(\"div\", {\n    class: \"btn-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 531,\n      columnNumber: 29\n    }\n  }, __jsx(\"button\", {\n    className: \"btn green\",\n    type: \"submit\",\n    disabled: isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 532,\n      columnNumber: 31\n    }\n  }, \" \", \"Assign\")), \" \"))), \" \"), __jsx(\"div\", {\n    className: \"tab-pane \",\n    id: \"tab_1_3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 545,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    class: \"table-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 546,\n      columnNumber: 23\n    }\n  }, __jsx(\"table\", {\n    class: \"table table-striped table-bordered table-hover\",\n    id: \"sample_3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 547,\n      columnNumber: 25\n    }\n  }, __jsx(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 551,\n      columnNumber: 27\n    }\n  }, __jsx(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 552,\n      columnNumber: 29\n    }\n  }, \" \", __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 554,\n      columnNumber: 31\n    }\n  }, \" title \"), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 555,\n      columnNumber: 31\n    }\n  }, \" task \"), \" \", __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 555,\n      columnNumber: 47\n    }\n  }, \" Edit \"), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 556,\n      columnNumber: 31\n    }\n  }, \" Delete \"))), __jsx(\"tfoot\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 559,\n      columnNumber: 27\n    }\n  }, __jsx(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 560,\n      columnNumber: 29\n    }\n  }, __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 561,\n      columnNumber: 31\n    }\n  }, \" \"), \" \", __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 561,\n      columnNumber: 42\n    }\n  }, \" \"), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 562,\n      columnNumber: 31\n    }\n  }, \" \"), \" \", __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 562,\n      columnNumber: 42\n    }\n  }, \" \"))), __jsx(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 565,\n      columnNumber: 27\n    }\n  }, Todoshr.Todo.map(({\n    id,\n    Description,\n    Name\n  }) => {\n    return __jsx(\"tr\", {\n      key: id,\n      class: \"odd gradeX\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 568,\n        columnNumber: 33\n      }\n    }, __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 569,\n        columnNumber: 35\n      }\n    }, Name), __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 570,\n        columnNumber: 35\n      }\n    }, Description), \" \", __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 571,\n        columnNumber: 35\n      }\n    }, __jsx(\"a\", {\n      class: \"btn btn-circle blue btn-sm \",\n      href: `/todo/${id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 572,\n        columnNumber: 37\n      }\n    }, \"edit\")), \" \", __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 579,\n        columnNumber: 35\n      }\n    }, __jsx(\"button\", {\n      class: \"btn btn-circle red btn-sm \",\n      onClick: () => deleteATodo(id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 580,\n        columnNumber: 37\n      }\n    }, \" \", \"delete\")));\n  }))), \" \", __jsx(\"div\", {\n    class: \"portlet light \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 593,\n      columnNumber: 25\n    }\n  }, __jsx(\"div\", {\n    class: \"portlet-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 594,\n      columnNumber: 27\n    }\n  }, __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 595,\n      columnNumber: 29\n    }\n  }, \"Assign tasks to:\"), \" \", __jsx(\"form\", {\n    onSubmit: handleSubmit4(AssignManager),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 596,\n      columnNumber: 29\n    }\n  }, \" \", __jsx(\"div\", {\n    class: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 598,\n      columnNumber: 31\n    }\n  }, __jsx(\"select\", {\n    name: \"user_id\",\n    id: \"user_id\",\n    ref: register4,\n    required: true,\n    className: \"form-control select2 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 599,\n      columnNumber: 33\n    }\n  }, Manager.User.map(({\n    id,\n    Name\n  }) => __jsx(React.Fragment, {\n    key: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 607,\n      columnNumber: 37\n    }\n  }, \" \", __jsx(\"option\", {\n    value: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 609,\n      columnNumber: 39\n    }\n  }, Name))))), __jsx(\"div\", {\n    class: \"btn-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 614,\n      columnNumber: 31\n    }\n  }, __jsx(\"button\", {\n    className: \"btn green\",\n    type: \"submit\",\n    disabled: isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 615,\n      columnNumber: 33\n    }\n  }, \" \", \"Assign\")), \" \"))), \" \")))))), __jsx(\"div\", {\n    class: \"col-md-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 633,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    class: \"portlet light \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 634,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    class: \"portlet-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 635,\n      columnNumber: 17\n    }\n  }, __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 636,\n      columnNumber: 19\n    }\n  }, \"Add new onboarding Task\"), __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 638,\n      columnNumber: 19\n    }\n  }, __jsx(\"div\", {\n    class: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 639,\n      columnNumber: 21\n    }\n  }, __jsx(\"label\", {\n    class: \"control-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 640,\n      columnNumber: 23\n    }\n  }, \"Name\"), __jsx(\"input\", {\n    name: \"Name\",\n    id: \"Name\",\n    type: \"text\",\n    placeholder: \"Todo Name\",\n    class: \"form-control\",\n    ref: register,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 641,\n      columnNumber: 23\n    }\n  }), \" \"), __jsx(\"div\", {\n    class: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 651,\n      columnNumber: 21\n    }\n  }, __jsx(\"label\", {\n    class: \"control-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 652,\n      columnNumber: 23\n    }\n  }, \"Description\"), __jsx(\"textarea\", {\n    name: \"Description\",\n    id: \"Description\",\n    type: \"textarea\",\n    placeholder: \"Description\",\n    class: \"form-control\",\n    ref: register,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 653,\n      columnNumber: 23\n    }\n  }), \" \"), \" \", __jsx(\"div\", {\n    class: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 663,\n      columnNumber: 21\n    }\n  }, \" \", \"which role?\", __jsx(\"select\", {\n    name: \"Member\",\n    id: \"Member\",\n    ref: register,\n    required: true,\n    className: \"form-control select2 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 666,\n      columnNumber: 23\n    }\n  }, __jsx(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 673,\n      columnNumber: 25\n    }\n  }, \"Manager\"), __jsx(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 674,\n      columnNumber: 25\n    }\n  }, \"Employee\"), __jsx(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 675,\n      columnNumber: 25\n    }\n  }, \"HR\")), \" \"), __jsx(\"div\", {\n    class: \"margiv-top-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 678,\n      columnNumber: 21\n    }\n  }, __jsx(\"button\", {\n    type: \"submit\",\n    class: \"btn green\",\n    disabled: isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 679,\n      columnNumber: 23\n    }\n  }, \" \", \"Save Changes\", \" \"))))), __jsx(\"div\", {\n    class: \"portlet light \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 691,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    class: \"portlet-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 692,\n      columnNumber: 17\n    }\n  }, __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 693,\n      columnNumber: 19\n    }\n  }, \"Users already assigned\"), __jsx(\"div\", {\n    class: \"tab-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 694,\n      columnNumber: 19\n    }\n  }, __jsx(\"div\", {\n    class: \"portlet-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 695,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    class: \"tab-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 696,\n      columnNumber: 23\n    }\n  }, __jsx(\"div\", {\n    class: \"tab-pane active\",\n    id: \"tab_actions_pending\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 697,\n      columnNumber: 25\n    }\n  }, UserOn.User.map(({\n    id,\n    created_at,\n    Name,\n    email,\n    Avatar,\n    Last_Name\n  }) => {\n    const formattedJoinedAt = format(parseISO(created_at), \"dd-MM-yyyy\");\n    return __jsx(\"div\", {\n      class: \"mt-actions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 712,\n        columnNumber: 33\n      }\n    }, __jsx(\"div\", {\n      class: \"mt-action\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 713,\n        columnNumber: 35\n      }\n    }, __jsx(\"div\", {\n      class: \"mt-action-img\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 714,\n        columnNumber: 37\n      }\n    }, __jsx(\"div\", {\n      className: \"profile-userpic\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 715,\n        columnNumber: 39\n      }\n    }, \" \", Avatar ? __jsx(\"img\", {\n      style: {\n        width: 50,\n        height: 50,\n        objectFit: \"cover\"\n      },\n      src: `../../${Avatar}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 718,\n        columnNumber: 43\n      }\n    }) : __jsx(\"img\", {\n      style: {\n        width: 50,\n        height: 50,\n        objectFit: \"cover\"\n      },\n      src: `../../profile.png`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 727,\n        columnNumber: 43\n      }\n    }))), __jsx(\"div\", {\n      class: \"mt-action-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 738,\n        columnNumber: 37\n      }\n    }, __jsx(\"div\", {\n      class: \"mt-action-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 739,\n        columnNumber: 39\n      }\n    }, __jsx(\"div\", {\n      class: \"mt-action-info \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 740,\n        columnNumber: 41\n      }\n    }, __jsx(\"div\", {\n      class: \"mt-action-details \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 741,\n        columnNumber: 43\n      }\n    }, __jsx(\"span\", {\n      class: \"mt-action-author\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 742,\n        columnNumber: 45\n      }\n    }, Name), \" \", __jsx(\"span\", {\n      class: \"mt-action-author\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 745,\n        columnNumber: 45\n      }\n    }, Last_Name), __jsx(\"p\", {\n      class: \"mt-action-desc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 748,\n        columnNumber: 45\n      }\n    }, email))), \" \", __jsx(\"div\", {\n      class: \"mt-action-datetime \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 753,\n        columnNumber: 41\n      }\n    }, __jsx(\"span\", {\n      class: \"mt-action-date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 754,\n        columnNumber: 43\n      }\n    }, \"joined : \", formattedJoinedAt), __jsx(\"span\", {\n      class: \"mt-action-dot bg-green\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 757,\n        columnNumber: 43\n      }\n    }))))));\n  }))))))), \" \"), \" \"))), \" \");\n}","map":{"version":3,"sources":["C:/Users/msdtt/OneDrive/Documents/amai_hr_next_js_hasura/amai-hr/pages/Todo.js"],"names":["useEffect","useRouter","useForm","useSWR","mutate","useAuthState","useAuthDispatch","gql","hasuraAdminClient","hasuraUserClient","format","parseISO","from","Date","toISOString","GetUsers","GetUserHR","GetManagers","GetUsersOn","GetTodos","GetTodoshr","GetTodohr","AddNotification","InsertTask","deleteTodo","getStaticProps","hasura","User","request","HR","Manager","initialData","UserOn","Todoshr","Todohr","console","log","props","Todos","router","isAuthenticated","user","handleSubmit","register","control","errors","formState","isSubmitting","updateUser","register2","errors2","handleSubmit2","register3","errors3","handleSubmit3","register4","errors4","handleSubmit4","push","data","query","revalidateOnMount","datal","onSubmit","Description","Name","Member","insert_Todo_one","window","location","reload","err","Assign","user_id","u_id","t","Todo","map","id","todo_id","completed","confirm","insert_todo_user","objects","insert_notification_one","error","AssignHR","AssignManager","deleteATodo","minHeight","created_at","email","Avatar","Last_Name","formattedJoinedAt","width","height","objectFit"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAOC,MAAP,IAAiBC,MAAjB,QAA+B,KAA/B;AAEA,SAASC,YAAT,EAAuBC,eAAvB,QAA8C,iBAA9C;AACA,SAASC,GAAT,EAAcC,iBAAd,QAAuC,4BAAvC;AACA,SAASC,gBAAT,QAAiC,2BAAjC;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,UAAjC;AAEA,MAAMC,IAAI,GAAG,IAAIC,IAAJ,GAAWC,WAAX,EAAb;AAEA,MAAMC,QAAQ,GAAGR,GAAI;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAnBA;AAoBA,MAAMS,SAAS,GAAGT,GAAI;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;AAQA,MAAMU,WAAW,GAAGV,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;AASA,MAAMW,UAAU,GAAGX,GAAI;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAlBA;AAmBA,MAAMY,QAAQ,GAAGZ,GAAI;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;AASA,MAAMa,UAAU,GAAGb,GAAI;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;AASA,MAAMc,SAAS,GAAGd,GAAI;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;AAUA,MAAMe,eAAe,GAAGf,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAjBA;AAmBA,MAAMgB,UAAU,GAAGhB,GAAI;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CArB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","sourcesContent":["import { useEffect } from \"react\";\r\nimport { useRouter } from \"next/router\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport useSWR, { mutate } from \"swr\";\r\n\r\nimport { useAuthState, useAuthDispatch } from \"../context/auth\";\r\nimport { gql, hasuraAdminClient } from \"../lib/hasura-admin-client\";\r\nimport { hasuraUserClient } from \"../lib/hasura-user-client\";\r\nimport { format, parseISO } from \"date-fns\";\r\n\r\nconst from = new Date().toISOString();\r\n\r\nconst GetUsers = gql`\r\n  {\r\n    User(\r\n      where: { _not: { todo_users: {} }, Role: { _eq: \"Employee\" } }\r\n      order_by: { created_at: desc }\r\n    ) {\r\n      Name\r\n      id\r\n      notifications_aggregate(where: { seen: { _eq: false } }) {\r\n        aggregate {\r\n          count\r\n        }\r\n      }\r\n      notifications(where: { seen: { _eq: false } }) {\r\n        id\r\n        description\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst GetUserHR = gql`\r\n  {\r\n    User(where: { Role: { _eq: \"HR manager\" } }) {\r\n      Name\r\n      id\r\n    }\r\n  }\r\n`;\r\nconst GetManagers = gql`\r\n  {\r\n    User(where: { Role: { _eq: \"Manager\" } }) {\r\n      Name\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nconst GetUsersOn = gql`\r\n  {\r\n    User(\r\n      where: {\r\n        todo_users: {\r\n          Todo: { Member: { _eq: \"Employee\" }, Type: { _eq: \"Onboarding\" } }\r\n        }\r\n      }\r\n      order_by: { created_at: desc }\r\n    ) {\r\n      Name\r\n      id\r\n      email\r\n      created_at\r\n      Avatar\r\n      Last_Name\r\n    }\r\n  }\r\n`;\r\nconst GetTodos = gql`\r\n  {\r\n    Todo(where: { Member: { _eq: \"Employee\" }, Type: { _eq: \"Onboarding\" } }) {\r\n      id\r\n      Description\r\n      Name\r\n    }\r\n  }\r\n`;\r\nconst GetTodoshr = gql`\r\n  {\r\n    Todo(where: { Member: { _eq: \"Manager\" }, Type: { _eq: \"Onboarding\" } }) {\r\n      id\r\n      Description\r\n      Name\r\n    }\r\n  }\r\n`;\r\nconst GetTodohr = gql`\r\n  {\r\n    Todo(where: { Member: { _eq: \"HR\" }, Type: { _eq: \"Onboarding\" } }) {\r\n      id\r\n      Description\r\n      Name\r\n    }\r\n  }\r\n`;\r\n\r\nconst AddNotification = gql`\r\n  mutation MyMutation($user_id: Int!) {\r\n    insert_notification_one(\r\n      object: {\r\n        user_id: $user_id\r\n        name: \"Onboarding\"\r\n        seen: false\r\n        description: \"you are assigned to your onboarding tasks. \"\r\n      }\r\n    ) {\r\n      user_id\r\n      seen\r\n      name\r\n      id\r\n      description\r\n    }\r\n  }\r\n`;\r\n\r\nconst InsertTask = gql`\r\n  mutation InsertTask(\r\n    $Description: String!\r\n    $Name: String!\r\n    $from: timestamptz!\r\n    $Member: String!\r\n  ) {\r\n    insert_Todo_one(\r\n      object: {\r\n        Description: $Description\r\n        Name: $Name\r\n        Date: $from\r\n        Type: \"Onboarding\"\r\n        Member: $Member\r\n      }\r\n    ) {\r\n      Description\r\n      Date\r\n      Name\r\n    }\r\n  }\r\n`;\r\nconst deleteTodo = gql`\r\n  mutation MyMutation($id: Int!) {\r\n    delete_Todo_by_pk(id: $id) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nexport const getStaticProps = async () => {\r\n  const hasura = hasuraUserClient();\r\n\r\n  const { User } = await hasura.request(GetUsers);\r\n  const HR = await hasura.request(GetUserHR);\r\n  const Manager = await hasura.request(GetManagers);\r\n  const initialData = await hasura.request(GetTodos);\r\n  const UserOn = await hasura.request(GetUsersOn);\r\n  const Todoshr = await hasuraAdminClient.request(GetTodoshr);\r\n  const Todohr = await hasuraAdminClient.request(GetTodohr);\r\n  console.log(HR);\r\n  console.log(User);\r\n\r\n  return {\r\n    props: {\r\n      User,\r\n      initialData,\r\n      UserOn,\r\n      Todoshr,\r\n      Todohr,\r\n      HR,\r\n      Manager,\r\n    },\r\n  };\r\n};\r\n\r\nexport default function Todos({\r\n  User,\r\n  initialData,\r\n  UserOn,\r\n  Todoshr,\r\n  Todohr,\r\n  HR,\r\n  Manager,\r\n}) {\r\n  const router = useRouter();\r\n  const { isAuthenticated, user } = useAuthState();\r\n  const hasura = hasuraUserClient();\r\n  const {\r\n    handleSubmit,\r\n    register,\r\n    control,\r\n    errors,\r\n    formState: { isSubmitting },\r\n  } = useForm();\r\n  const { updateUser } = useAuthDispatch();\r\n  const {\r\n    register: register2,\r\n    errors: errors2,\r\n    handleSubmit: handleSubmit2,\r\n  } = useForm();\r\n  const {\r\n    register: register3,\r\n    errors: errors3,\r\n    handleSubmit: handleSubmit3,\r\n  } = useForm();\r\n  const {\r\n    register: register4,\r\n    errors: errors4,\r\n    handleSubmit: handleSubmit4,\r\n  } = useForm();\r\n  useEffect(() => {\r\n    if (!isAuthenticated) router.push(\"/\");\r\n  }, [isAuthenticated]);\r\n\r\n  if (!isAuthenticated) return null;\r\n  const { data } = useSWR(GetTodos, (query) => hasura.request(query), {\r\n    initialData,\r\n    revalidateOnMount: true,\r\n  });\r\n  const { datal } = useSWR(GetTodoshr, (query) => hasura.request(query), {\r\n    Todoshr,\r\n    revalidateOnMount: true,\r\n  });\r\n  console.log(UserOn);\r\n  const onSubmit = async ({ Description, Name, Member }) => {\r\n    console.log(from);\r\n    try {\r\n      const { insert_Todo_one } = await hasura.request(InsertTask, {\r\n        Description,\r\n        from,\r\n        Name,\r\n        Member,\r\n      });\r\n\r\n      window.location.reload();\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const Assign = async ({ user_id }) => {\r\n    const u_id = user_id;\r\n    const t = data.Todo.map(({ id }) => {\r\n      return { todo_id: id, user_id: u_id, completed: false };\r\n    });\r\n    const query = gql`\r\n      mutation insert_todo_user($objects: [todo_user_insert_input!]!) {\r\n        insert_todo_user(objects: $objects) {\r\n          affected_rows\r\n        }\r\n      }\r\n    `;\r\n    if (\r\n      confirm(`are you sure you want to assign those tasks to this employee`)\r\n    ) {\r\n      try {\r\n        const { insert_todo_user } = await hasura.request(query, {\r\n          objects: t,\r\n        });\r\n        const { insert_notification_one } = await hasura.request(\r\n          AddNotification,\r\n          { user_id: u_id }\r\n        );\r\n        mutate();\r\n        window.location.reload();\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const AssignHR = async ({ user_id }) => {\r\n    const u_id = user_id;\r\n    const t = Todohr.Todo.map(({ id }) => {\r\n      return { todo_id: id, user_id: u_id, completed: false };\r\n    });\r\n    const query = gql`\r\n      mutation insert_todo_user($objects: [todo_user_insert_input!]!) {\r\n        insert_todo_user(objects: $objects) {\r\n          affected_rows\r\n        }\r\n      }\r\n    `;\r\n    if (\r\n      confirm(`are you sure you want to assign those tasks to this employee`)\r\n    ) {\r\n      try {\r\n        const { insert_todo_user } = await hasura.request(query, {\r\n          objects: t,\r\n        });\r\n        const { insert_notification_one } = await hasura.request(\r\n          AddNotification,\r\n          { user_id: u_id }\r\n        );\r\n        mutate();\r\n        window.location.reload();\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const AssignManager = async ({ user_id }) => {\r\n    const u_id = user_id;\r\n    const t = Todoshr.Todo.map(({ id }) => {\r\n      return { todo_id: id, user_id: u_id, completed: false };\r\n    });\r\n    const query = gql`\r\n      mutation insert_todo_user($objects: [todo_user_insert_input!]!) {\r\n        insert_todo_user(objects: $objects) {\r\n          affected_rows\r\n        }\r\n      }\r\n    `;\r\n    if (\r\n      confirm(`are you sure you want to assign those tasks to this employee`)\r\n    ) {\r\n      try {\r\n        const { insert_todo_user } = await hasura.request(query, {\r\n          objects: t,\r\n        });\r\n        const { insert_notification_one } = await hasura.request(\r\n          AddNotification,\r\n          { user_id: u_id }\r\n        );\r\n        mutate();\r\n        window.location.reload();\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const deleteATodo = async (id) => {\r\n    if (confirm(\"are you sure you want to delete this todo?\")) {\r\n      try {\r\n        await hasura.request(deleteTodo, { id });\r\n        mutate();\r\n        window.location.reload();\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"page-content-wrapper\">\r\n      <div className=\"page-content\" style={{ minHeight: 1500 }}>\r\n        <div class=\"profile-content\">\r\n          <div class=\"row\">\r\n            {\" \"}\r\n            <div class=\"col-md-8\">\r\n              <div class=\"portlet light \">\r\n                <div class=\"portlet-body\">\r\n                  <h3> onboarding Tasks</h3>\r\n                  <ul className=\"nav nav-tabs\">\r\n                    <li className=\"active\">\r\n                      <a href=\"#tab_1_1\" data-toggle=\"tab\">\r\n                        Employee\r\n                      </a>\r\n                    </li>\r\n                    <li>\r\n                      <a href=\"#tab_1_2\" data-toggle=\"tab\">\r\n                        HR manager\r\n                      </a>\r\n                    </li>{\" \"}\r\n                    <li>\r\n                      <a href=\"#tab_1_3\" data-toggle=\"tab\">\r\n                        Manager\r\n                      </a>\r\n                    </li>\r\n                  </ul>{\" \"}\r\n                  <div className=\"tab-content\">\r\n                    <div className=\"tab-pane active\" id=\"tab_1_1\">\r\n                      <div class=\"table-container\">\r\n                        <table\r\n                          class=\"table table-striped table-bordered table-hover\"\r\n                          id=\"sample_3\"\r\n                        >\r\n                          <thead>\r\n                            <tr>\r\n                              {\" \"}\r\n                              <th> title </th>\r\n                              <th> task </th> <th> Edit </th>\r\n                              <th> Delete </th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tfoot>\r\n                            <tr>\r\n                              <th> </th> <th> </th>\r\n                              <th> </th> <th> </th>\r\n                            </tr>\r\n                          </tfoot>\r\n                          <tbody>\r\n                            {data.Todo.map(({ id, Description, Name }) => {\r\n                              return (\r\n                                <tr key={id} class=\"odd gradeX\">\r\n                                  <td>{Name}</td>\r\n                                  <td>{Description}</td>{\" \"}\r\n                                  <td>\r\n                                    <a\r\n                                      class=\"btn btn-circle blue btn-sm \"\r\n                                      href={`/todo/${id}`}\r\n                                    >\r\n                                      edit\r\n                                    </a>\r\n                                  </td>{\" \"}\r\n                                  <td>\r\n                                    <button\r\n                                      class=\"btn btn-circle red btn-sm \"\r\n                                      onClick={() => deleteATodo(id)}\r\n                                    >\r\n                                      {\" \"}\r\n                                      delete\r\n                                    </button>\r\n                                  </td>\r\n                                </tr>\r\n                              );\r\n                            })}\r\n                          </tbody>\r\n                        </table>{\" \"}\r\n                        <div class=\"portlet light \">\r\n                          <div class=\"portlet-body\">\r\n                            <h3>Assign tasks to:</h3>{\" \"}\r\n                            <form onSubmit={handleSubmit2(Assign)}>\r\n                              {\" \"}\r\n                              <div class=\"form-group\">\r\n                                <select\r\n                                  name=\"user_id\"\r\n                                  id=\"user_id\"\r\n                                  ref={register2}\r\n                                  required\r\n                                  className=\"form-control select2 \"\r\n                                >\r\n                                  {User.map(({ id, Name }) => (\r\n                                    <React.Fragment key={id}>\r\n                                      {\" \"}\r\n                                      <option value={id}>{Name}</option>\r\n                                    </React.Fragment>\r\n                                  ))}\r\n                                </select>\r\n                              </div>\r\n                              <div class=\"btn-group\">\r\n                                <button\r\n                                  className=\"btn green\"\r\n                                  type=\"submit\"\r\n                                  disabled={isSubmitting}\r\n                                >\r\n                                  {\" \"}\r\n                                  Assign\r\n                                </button>\r\n                              </div>{\" \"}\r\n                            </form>\r\n                          </div>\r\n                        </div>{\" \"}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"tab-pane \" id=\"tab_1_2\">\r\n                      <div class=\"table-container\">\r\n                        <table\r\n                          class=\"table table-striped table-bordered table-hover\"\r\n                          id=\"sample_3\"\r\n                        >\r\n                          <thead>\r\n                            <tr>\r\n                              {\" \"}\r\n                              <th> title </th>\r\n                              <th> task </th> <th> Edit </th>\r\n                              <th> Delete </th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tfoot>\r\n                            <tr>\r\n                              <th> </th> <th> </th>\r\n                              <th> </th> <th> </th>\r\n                            </tr>\r\n                          </tfoot>\r\n                          <tbody>\r\n                            {Todohr.Todo.map(({ id, Description, Name }) => {\r\n                              return (\r\n                                <tr key={id} class=\"odd gradeX\">\r\n                                  <td>{Name}</td>\r\n                                  <td>{Description}</td>{\" \"}\r\n                                  <td>\r\n                                    <a\r\n                                      class=\"btn btn-circle blue btn-sm \"\r\n                                      href={`/todo/${id}`}\r\n                                    >\r\n                                      edit\r\n                                    </a>\r\n                                  </td>{\" \"}\r\n                                  <td>\r\n                                    <button\r\n                                      class=\"btn btn-circle red btn-sm \"\r\n                                      onClick={() => deleteATodo(id)}\r\n                                    >\r\n                                      {\" \"}\r\n                                      delete\r\n                                    </button>\r\n                                  </td>\r\n                                </tr>\r\n                              );\r\n                            })}\r\n                          </tbody>\r\n                        </table>{\" \"}\r\n                      </div>\r\n                      <div class=\"portlet light \">\r\n                        <div class=\"portlet-body\">\r\n                          <h3>Assign tasks to:</h3>{\" \"}\r\n                          <form onSubmit={handleSubmit3(AssignHR)}>\r\n                            {\" \"}\r\n                            <div class=\"form-group\">\r\n                              <select\r\n                                name=\"user_id\"\r\n                                id=\"user_id\"\r\n                                ref={register3}\r\n                                required\r\n                                className=\"form-control select2 \"\r\n                              >\r\n                                {HR.User.map(({ id, Name }) => (\r\n                                  <React.Fragment key={id}>\r\n                                    {\" \"}\r\n                                    <option value={id}>{Name}</option>\r\n                                  </React.Fragment>\r\n                                ))}\r\n                              </select>\r\n                            </div>\r\n                            <div class=\"btn-group\">\r\n                              <button\r\n                                className=\"btn green\"\r\n                                type=\"submit\"\r\n                                disabled={isSubmitting}\r\n                              >\r\n                                {\" \"}\r\n                                Assign\r\n                              </button>\r\n                            </div>{\" \"}\r\n                          </form>\r\n                        </div>\r\n                      </div>{\" \"}\r\n                    </div>\r\n                    <div className=\"tab-pane \" id=\"tab_1_3\">\r\n                      <div class=\"table-container\">\r\n                        <table\r\n                          class=\"table table-striped table-bordered table-hover\"\r\n                          id=\"sample_3\"\r\n                        >\r\n                          <thead>\r\n                            <tr>\r\n                              {\" \"}\r\n                              <th> title </th>\r\n                              <th> task </th> <th> Edit </th>\r\n                              <th> Delete </th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tfoot>\r\n                            <tr>\r\n                              <th> </th> <th> </th>\r\n                              <th> </th> <th> </th>\r\n                            </tr>\r\n                          </tfoot>\r\n                          <tbody>\r\n                            {Todoshr.Todo.map(({ id, Description, Name }) => {\r\n                              return (\r\n                                <tr key={id} class=\"odd gradeX\">\r\n                                  <td>{Name}</td>\r\n                                  <td>{Description}</td>{\" \"}\r\n                                  <td>\r\n                                    <a\r\n                                      class=\"btn btn-circle blue btn-sm \"\r\n                                      href={`/todo/${id}`}\r\n                                    >\r\n                                      edit\r\n                                    </a>\r\n                                  </td>{\" \"}\r\n                                  <td>\r\n                                    <button\r\n                                      class=\"btn btn-circle red btn-sm \"\r\n                                      onClick={() => deleteATodo(id)}\r\n                                    >\r\n                                      {\" \"}\r\n                                      delete\r\n                                    </button>\r\n                                  </td>\r\n                                </tr>\r\n                              );\r\n                            })}\r\n                          </tbody>\r\n                        </table>{\" \"}\r\n                        <div class=\"portlet light \">\r\n                          <div class=\"portlet-body\">\r\n                            <h3>Assign tasks to:</h3>{\" \"}\r\n                            <form onSubmit={handleSubmit4(AssignManager)}>\r\n                              {\" \"}\r\n                              <div class=\"form-group\">\r\n                                <select\r\n                                  name=\"user_id\"\r\n                                  id=\"user_id\"\r\n                                  ref={register4}\r\n                                  required\r\n                                  className=\"form-control select2 \"\r\n                                >\r\n                                  {Manager.User.map(({ id, Name }) => (\r\n                                    <React.Fragment key={id}>\r\n                                      {\" \"}\r\n                                      <option value={id}>{Name}</option>\r\n                                    </React.Fragment>\r\n                                  ))}\r\n                                </select>\r\n                              </div>\r\n                              <div class=\"btn-group\">\r\n                                <button\r\n                                  className=\"btn green\"\r\n                                  type=\"submit\"\r\n                                  disabled={isSubmitting}\r\n                                >\r\n                                  {\" \"}\r\n                                  Assign\r\n                                </button>\r\n                              </div>{\" \"}\r\n                            </form>\r\n                          </div>\r\n                        </div>{\" \"}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n              <div class=\"portlet light \">\r\n                <div class=\"portlet-body\">\r\n                  <h3>Add new onboarding Task</h3>\r\n\r\n                  <form onSubmit={handleSubmit(onSubmit)}>\r\n                    <div class=\"form-group\">\r\n                      <label class=\"control-label\">Name</label>\r\n                      <input\r\n                        name=\"Name\"\r\n                        id=\"Name\"\r\n                        type=\"text\"\r\n                        placeholder=\"Todo Name\"\r\n                        class=\"form-control\"\r\n                        ref={register}\r\n                        required\r\n                      />{\" \"}\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                      <label class=\"control-label\">Description</label>\r\n                      <textarea\r\n                        name=\"Description\"\r\n                        id=\"Description\"\r\n                        type=\"textarea\"\r\n                        placeholder=\"Description\"\r\n                        class=\"form-control\"\r\n                        ref={register}\r\n                        required\r\n                      />{\" \"}\r\n                    </div>{\" \"}\r\n                    <div class=\"form-group\">\r\n                      {\" \"}\r\n                      which role?\r\n                      <select\r\n                        name=\"Member\"\r\n                        id=\"Member\"\r\n                        ref={register}\r\n                        required\r\n                        className=\"form-control select2 \"\r\n                      >\r\n                        <option>Manager</option>\r\n                        <option>Employee</option>\r\n                        <option>HR</option>\r\n                      </select>{\" \"}\r\n                    </div>\r\n                    <div class=\"margiv-top-10\">\r\n                      <button\r\n                        type=\"submit\"\r\n                        class=\"btn green\"\r\n                        disabled={isSubmitting}\r\n                      >\r\n                        {\" \"}\r\n                        Save Changes{\" \"}\r\n                      </button>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n              <div class=\"portlet light \">\r\n                <div class=\"portlet-body\">\r\n                  <h3>Users already assigned</h3>\r\n                  <div class=\"tab-content\">\r\n                    <div class=\"portlet-body\">\r\n                      <div class=\"tab-content\">\r\n                        <div class=\"tab-pane active\" id=\"tab_actions_pending\">\r\n                          {UserOn.User.map(\r\n                            ({\r\n                              id,\r\n                              created_at,\r\n                              Name,\r\n                              email,\r\n                              Avatar,\r\n                              Last_Name,\r\n                            }) => {\r\n                              const formattedJoinedAt = format(\r\n                                parseISO(created_at),\r\n                                \"dd-MM-yyyy\"\r\n                              );\r\n                              return (\r\n                                <div class=\"mt-actions\">\r\n                                  <div class=\"mt-action\">\r\n                                    <div class=\"mt-action-img\">\r\n                                      <div className=\"profile-userpic\">\r\n                                        {\" \"}\r\n                                        {Avatar ? (\r\n                                          <img\r\n                                            style={{\r\n                                              width: 50,\r\n                                              height: 50,\r\n                                              objectFit: \"cover\",\r\n                                            }}\r\n                                            src={`../../${Avatar}`}\r\n                                          />\r\n                                        ) : (\r\n                                          <img\r\n                                            style={{\r\n                                              width: 50,\r\n                                              height: 50,\r\n                                              objectFit: \"cover\",\r\n                                            }}\r\n                                            src={`../../profile.png`}\r\n                                          />\r\n                                        )}\r\n                                      </div>\r\n                                    </div>\r\n                                    <div class=\"mt-action-body\">\r\n                                      <div class=\"mt-action-row\">\r\n                                        <div class=\"mt-action-info \">\r\n                                          <div class=\"mt-action-details \">\r\n                                            <span class=\"mt-action-author\">\r\n                                              {Name}\r\n                                            </span>{\" \"}\r\n                                            <span class=\"mt-action-author\">\r\n                                              {Last_Name}\r\n                                            </span>\r\n                                            <p class=\"mt-action-desc\">\r\n                                              {email}\r\n                                            </p>\r\n                                          </div>\r\n                                        </div>{\" \"}\r\n                                        <div class=\"mt-action-datetime \">\r\n                                          <span class=\"mt-action-date\">\r\n                                            joined : {formattedJoinedAt}\r\n                                          </span>\r\n                                          <span class=\"mt-action-dot bg-green\"></span>\r\n                                        </div>\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              );\r\n                            }\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>{\" \"}\r\n            </div>{\" \"}\r\n          </div>\r\n        </div>\r\n      </div>{\" \"}\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}