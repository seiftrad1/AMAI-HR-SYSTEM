{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\msdtt\\\\OneDrive\\\\Documents\\\\amai_hr_next_js_hasura\\\\amai-hr\\\\pages\\\\email.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { FormControl, FormLabel, Button } from \"react-bootstrap\";\nimport { useForm } from \"react-hook-form\";\nexport default function MembersPage({\n  initialData\n}) {\n  const {\n    handleSubmit,\n    register,\n    control,\n    errors,\n    formState: {\n      isSubmitting\n    }\n  } = useForm();\n\n  const sendMail = async data => {\n    try {\n      await fetch(\"/api/contact\", {\n        \"method\": \"POST\",\n        \"headers\": {\n          \"content-type\": \"application/json\"\n        },\n        \"body\": JSON.stringify(data)\n      }); //if sucess do whatever you like, i.e toast notification\n\n      setTimeout(() => reset(), 2000);\n    } catch (error) {// toast error message. whatever you wish \n    }\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 3\n    }\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit(sendMail),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 1\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/msdtt/OneDrive/Documents/amai_hr_next_js_hasura/amai-hr/pages/email.js"],"names":["FormControl","FormLabel","Button","useForm","MembersPage","initialData","handleSubmit","register","control","errors","formState","isSubmitting","sendMail","data","fetch","JSON","stringify","setTimeout","reset","error"],"mappings":";;;AAEA,SAASA,WAAT,EAAqBC,SAArB,EAA+BC,MAA/B,QAA6C,iBAA7C;AACA,SAASC,OAAT,QAAwB,iBAAxB;AAEA,eAAe,SAASC,WAAT,CAAqB;AAAEC,EAAAA;AAAF,CAArB,EAAsC;AACnD,QAAM;AACJC,IAAAA,YADI;AAEJC,IAAAA,QAFI;AAGJC,IAAAA,OAHI;AAIJC,IAAAA,MAJI;AAKJC,IAAAA,SAAS,EAAE;AAAEC,MAAAA;AAAF;AALP,MAMFR,OAAO,EANX;;AAOA,QAAMS,QAAQ,GAAG,MAAOC,IAAP,IAAgB;AAE/B,QAAI;AACF,YAAMC,KAAK,CAAC,cAAD,EAAiB;AAC1B,kBAAU,MADgB;AAE1B,mBAAW;AAAE,0BAAgB;AAAlB,SAFe;AAG1B,gBAAQC,IAAI,CAACC,SAAL,CAAeH,IAAf;AAHkB,OAAjB,CAAX,CADE,CAOI;;AACNI,MAAAA,UAAU,CAAC,MAAMC,KAAK,EAAZ,EAAgB,IAAhB,CAAV;AACD,KATD,CASE,OAAOC,KAAP,EAAc,CACZ;AACH;AAEF,GAfD;;AAgBA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACF;AAAM,IAAA,QAAQ,EAAEb,YAAY,CAACM,QAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADE,CADA;AAQD","sourcesContent":["\r\n\r\nimport { FormControl,FormLabel,Button } from \"react-bootstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nexport default function MembersPage({ initialData }) {\r\n  const {\r\n    handleSubmit,\r\n    register,\r\n    control,\r\n    errors,\r\n    formState: { isSubmitting },\r\n  } = useForm();\r\n  const sendMail = async (data) => {\r\n\r\n    try {\r\n      await fetch(\"/api/contact\", {\r\n        \"method\": \"POST\",\r\n        \"headers\": { \"content-type\": \"application/json\" },\r\n        \"body\": JSON.stringify(data)\r\n      })\r\n\r\n            //if sucess do whatever you like, i.e toast notification\r\n      setTimeout(() => reset(), 2000);\r\n    } catch (error) {\r\n        // toast error message. whatever you wish \r\n    }\r\n\r\n  }\r\n  return (\r\n  <div>\r\n<form onSubmit={handleSubmit(sendMail)}>\r\n\r\n\r\n   \r\n</form></div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}