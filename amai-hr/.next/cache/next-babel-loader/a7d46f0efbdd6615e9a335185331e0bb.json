{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _templateObject,\n    _templateObject2,\n    _templateObject3,\n    _templateObject4,\n    _templateObject5,\n    _templateObject6,\n    _templateObject7,\n    _jsxFileName = \"C:\\\\Users\\\\msdtt\\\\OneDrive\\\\Documents\\\\amai_hr_next_js_hasura\\\\amai-hr\\\\pages\\\\Offboarding.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useForm } from \"react-hook-form\";\nimport useSWR, { mutate } from \"swr\";\nimport { useAuthState, useAuthDispatch } from \"../context/auth\";\nimport { gql } from \"../lib/hasura-admin-client\";\nimport { hasuraUserClient } from \"../lib/hasura-user-client\";\nvar from = new Date().toISOString();\nvar GetTodos = gql(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  {\\n    Todo(where: { Member: { _eq: \\\"Employee\\\" }, Type: { _eq: \\\"Offboarding\\\" } }) {\\n      id\\n      Description\\n      Name\\n    }\\n  }\\n\"])));\nvar GetTodoshr = gql(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n  {\\n    Todo(where: { Member: { _eq: \\\"Admin\\\" }, Type: { _eq: \\\"Offboarding\\\" } }) {\\n      id\\n      Description\\n      Name\\n    }\\n  }\\n\"])));\nvar GetUserById = gql(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n  query GetUserById($user_id: Int!) {\\n    User_by_pk(id: $user_id) {\\n      id\\n      notifications_aggregate(where: { seen: { _eq: false } }) {\\n        aggregate {\\n          count\\n        }\\n      }\\n      notifications(where: { seen: { _eq: false } }) {\\n        id\\n        description\\n      }\\n    }\\n  }\\n\"])));\nvar AddNotification = gql(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"\\n  mutation MyMutation($user_id: Int!) {\\n    insert_notification_one(\\n      object: {\\n        user_id: $user_id\\n        name: \\\"ttt\\\"\\n        seen: false\\n        description: \\\"tttttt\\\"\\n      }\\n    ) {\\n      user_id\\n      seen\\n      name\\n      id\\n      description\\n    }\\n  }\\n\"])));\nvar InsertTask = gql(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral([\"\\n  mutation InsertTask(\\n    $Description: String!\\n    $Name: String!\\n    $from: timestamptz!\\n    $Member: String!\\n  ) {\\n    insert_Todo_one(\\n      object: {\\n        Description: $Description\\n        Name: $Name\\n        Date: $from\\n        Type: \\\"Offboarding\\\"\\n        Member: $Member\\n      }\\n    ) {\\n      Description\\n      Date\\n      Name\\n    }\\n  }\\n\"])));\nexport var __N_SSG = true;\nexport default function OffBoarding(_ref) {\n  _s();\n\n  var _this = this;\n\n  var User = _ref.User,\n      initialData = _ref.initialData,\n      GetTodoshr = _ref.GetTodoshr;\n  var router = useRouter();\n\n  var _useAuthState = useAuthState(),\n      isAuthenticated = _useAuthState.isAuthenticated,\n      user = _useAuthState.user;\n\n  var hasura = hasuraUserClient();\n\n  var _useForm = useForm(),\n      handleSubmit = _useForm.handleSubmit,\n      register = _useForm.register,\n      control = _useForm.control,\n      errors = _useForm.errors,\n      isSubmitting = _useForm.formState.isSubmitting;\n\n  var _useForm2 = useForm(),\n      register2 = _useForm2.register,\n      errors2 = _useForm2.errors,\n      handleSubmit2 = _useForm2.handleSubmit;\n\n  var _useAuthDispatch = useAuthDispatch(),\n      updateUser = _useAuthDispatch.updateUser;\n\n  useEffect(function () {\n    if (!isAuthenticated) router.push(\"/\");\n  }, [isAuthenticated]);\n  if (!isAuthenticated) return null;\n\n  var _useSWR = useSWR(GetTodos, function (query) {\n    return hasura.request(query);\n  }, {\n    initialData: initialData,\n    revalidateOnMount: true\n  }),\n      data = _useSWR.data;\n\n  var onSubmit = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {\n      var Description, Name, Member, _yield$hasura$request, insert_Todo_one;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              Description = _ref2.Description, Name = _ref2.Name, Member = _ref2.Member;\n              console.log(from);\n              _context.prev = 2;\n              _context.next = 5;\n              return hasura.request(InsertTask, {\n                Description: Description,\n                from: from,\n                Name: Name,\n                Member: Member\n              });\n\n            case 5:\n              _yield$hasura$request = _context.sent;\n              insert_Todo_one = _yield$hasura$request.insert_Todo_one;\n              window.location.reload();\n              _context.next = 13;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](2);\n              console.log(_context.t0);\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 10]]);\n    }));\n\n    return function onSubmit(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var Assign = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_ref4) {\n      var user_id, u_id, t, query, _yield$hasura$request2, insert_todo_user;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              user_id = _ref4.user_id;\n              u_id = user_id;\n              console.log(u_id);\n              t = data.Todo.map(function (_ref6) {\n                var id = _ref6.id;\n                return {\n                  todo_id: id,\n                  user_id: u_id,\n                  completed: false\n                };\n              });\n              query = gql(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral([\"\\n      mutation insert_todo_user($objects: [todo_user_insert_input!]!) {\\n        insert_todo_user(objects: $objects) {\\n          affected_rows\\n        }\\n      }\\n    \"])));\n\n              if (!confirm(\"are you sure you want to assign those tasks to \".concat(u_id))) {\n                _context2.next = 20;\n                break;\n              }\n\n              _context2.prev = 6;\n              _context2.next = 9;\n              return hasura.request(query, {\n                objects: t\n              });\n\n            case 9:\n              _yield$hasura$request2 = _context2.sent;\n              insert_todo_user = _yield$hasura$request2.insert_todo_user;\n              mutate();\n              window.location.reload();\n              _context2.next = 18;\n              break;\n\n            case 15:\n              _context2.prev = 15;\n              _context2.t0 = _context2[\"catch\"](6);\n              console.error(_context2.t0);\n\n            case 18:\n              _context2.next = 21;\n              break;\n\n            case 20:\n              return _context2.abrupt(\"return\", null);\n\n            case 21:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[6, 15]]);\n    }));\n\n    return function Assign(_x2) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  var deleteTodo = gql(_templateObject7 || (_templateObject7 = _taggedTemplateLiteral([\"\\n    mutation MyMutation($id: Int!) {\\n      delete_Todo_by_pk(id: $id) {\\n        id\\n      }\\n    }\\n  \"])));\n\n  var deleteATodo = /*#__PURE__*/function () {\n    var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(id) {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              if (!confirm(\"are you sure you want to delete this todo?\")) {\n                _context3.next = 13;\n                break;\n              }\n\n              _context3.prev = 1;\n              _context3.next = 4;\n              return hasura.request(deleteTodo, {\n                id: id\n              });\n\n            case 4:\n              mutate();\n              window.location.reload();\n              _context3.next = 11;\n              break;\n\n            case 8:\n              _context3.prev = 8;\n              _context3.t0 = _context3[\"catch\"](1);\n              console.error(_context3.t0);\n\n            case 11:\n              _context3.next = 14;\n              break;\n\n            case 13:\n              return _context3.abrupt(\"return\", null);\n\n            case 14:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[1, 8]]);\n    }));\n\n    return function deleteATodo(_x3) {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(\"div\", {\n    className: \"page-content-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"page-content\",\n    style: {\n      minHeight: 1500\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    \"class\": \"profile-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    \"class\": \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    \"class\": \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    \"class\": \"portlet light \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    \"class\": \"portlet-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 17\n    }\n  }, \" \", __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 19\n    }\n  }, \"Add new offboarding Task\"), __jsx(\"div\", {\n    \"class\": \"tab-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 19\n    }\n  }, __jsx(\"div\", {\n    \"class\": \"tab-pane active\",\n    id: \"tab_1_1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 21\n    }\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 23\n    }\n  }, __jsx(\"div\", {\n    \"class\": \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 25\n    }\n  }, __jsx(\"label\", {\n    \"class\": \"control-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 27\n    }\n  }, \"Name\"), __jsx(\"input\", {\n    name: \"Name\",\n    id: \"Name\",\n    type: \"text\",\n    placeholder: \"Todo Name\",\n    \"class\": \"form-control\",\n    ref: register,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 27\n    }\n  }), \" \"), __jsx(\"div\", {\n    \"class\": \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 25\n    }\n  }, __jsx(\"label\", {\n    \"class\": \"control-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 27\n    }\n  }, \"Description\"), __jsx(\"textarea\", {\n    name: \"Description\",\n    id: \"Description\",\n    type: \"textarea\",\n    placeholder: \"Description\",\n    \"class\": \"form-control\",\n    ref: register,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 27\n    }\n  }), \" \"), \" \", __jsx(\"div\", {\n    \"class\": \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 25\n    }\n  }, \" \", \"which role?\", __jsx(\"select\", {\n    name: \"Member\",\n    id: \"Member\",\n    ref: register,\n    required: true,\n    className: \"form-control select2 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 27\n    }\n  }, __jsx(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 29\n    }\n  }, \"Manager\"), __jsx(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 29\n    }\n  }, \"Employee\")), \" \"), __jsx(\"div\", {\n    \"class\": \"margiv-top-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 25\n    }\n  }, __jsx(\"button\", {\n    type: \"submit\",\n    \"class\": \"btn green\",\n    disabled: isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 27\n    }\n  }, \" \", \"Save Changes\", \" \")))))))), \" \", __jsx(\"div\", {\n    \"class\": \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    \"class\": \"portlet light \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    \"class\": \"portlet-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 17\n    }\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit2(Assign),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 19\n    }\n  }, __jsx(\"div\", {\n    \"class\": \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 21\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 23\n    }\n  }, \"Users:\"), __jsx(\"select\", {\n    name: \"user_id\",\n    id: \"user_id\",\n    ref: register2,\n    required: true,\n    className: \"form-control select2 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 23\n    }\n  }, User.map(function (_ref8) {\n    var id = _ref8.id,\n        Name = _ref8.Name;\n    return __jsx(React.Fragment, {\n      key: id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 27\n      }\n    }, __jsx(\"option\", {\n      value: id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 29\n      }\n    }, Name));\n  }))), __jsx(\"div\", {\n    \"class\": \"btn-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 21\n    }\n  }, __jsx(\"button\", {\n    className: \"btn green\",\n    type: \"submit\",\n    disabled: isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 23\n    }\n  }, \" \", \"Assign\")), \" \")))), __jsx(\"div\", {\n    \"class\": \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    \"class\": \"portlet light \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    \"class\": \"portlet-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 17\n    }\n  }, __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 19\n    }\n  }, \" offboarding Tasks\"), __jsx(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 19\n    }\n  }), __jsx(\"div\", {\n    \"class\": \"table-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 19\n    }\n  }, __jsx(\"table\", {\n    \"class\": \"table table-striped table-bordered table-hover\",\n    id: \"sample_3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 21\n    }\n  }, __jsx(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 23\n    }\n  }, __jsx(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 25\n    }\n  }, __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 27\n    }\n  }, \" Name \"), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 27\n    }\n  }, \" Description \"), \" \", __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 50\n    }\n  }, \" Edit \"), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 27\n    }\n  }, \" Delete \"))), __jsx(\"tfoot\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 23\n    }\n  }, __jsx(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 25\n    }\n  }, __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 27\n    }\n  }, \" \"), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 27\n    }\n  }, \" \"), \" \", __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 38\n    }\n  }, \" \"), \" \", __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 49\n    }\n  }, \" \"))), __jsx(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 23\n    }\n  }, data.Todo.map(function (_ref9) {\n    var id = _ref9.id,\n        Description = _ref9.Description,\n        Name = _ref9.Name;\n    return __jsx(\"tr\", {\n      key: id,\n      \"class\": \"odd gradeX\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 29\n      }\n    }, __jsx(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 31\n      }\n    }, Name), __jsx(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 31\n      }\n    }, Description), \" \", __jsx(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 31\n      }\n    }, __jsx(\"a\", {\n      \"class\": \"btn btn-circle blue btn-sm \",\n      href: \"/todo/\".concat(id),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 33\n      }\n    }, \"edit\")), \" \", __jsx(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 31\n      }\n    }, __jsx(\"button\", {\n      \"class\": \"btn btn-circle red btn-sm \",\n      onClick: function onClick() {\n        return deleteATodo(id);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 33\n      }\n    }, \" \", \"delete\")));\n  }))), \" \"))))))), \" \");\n}\n\n_s(OffBoarding, \"QIXkPrx/Au3x1o14i6OruZD4gZE=\", false, function () {\n  return [useRouter, useAuthState, useForm, useForm, useAuthDispatch, useSWR];\n});\n\n_c = OffBoarding;\n\nvar _c;\n\n$RefreshReg$(_c, \"OffBoarding\");","map":{"version":3,"sources":["C:/Users/msdtt/OneDrive/Documents/amai_hr_next_js_hasura/amai-hr/pages/Offboarding.js"],"names":["useEffect","useRouter","useForm","useSWR","mutate","useAuthState","useAuthDispatch","gql","hasuraUserClient","from","Date","toISOString","GetTodos","GetTodoshr","GetUserById","AddNotification","InsertTask","OffBoarding","User","initialData","router","isAuthenticated","user","hasura","handleSubmit","register","control","errors","isSubmitting","formState","register2","errors2","handleSubmit2","updateUser","push","query","request","revalidateOnMount","data","onSubmit","Description","Name","Member","console","log","insert_Todo_one","window","location","reload","Assign","user_id","u_id","t","Todo","map","id","todo_id","completed","confirm","objects","insert_todo_user","error","deleteTodo","deleteATodo","minHeight"],"mappings":"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","sourcesContent":["import { useEffect } from \"react\";\r\nimport { useRouter } from \"next/router\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport useSWR, { mutate } from \"swr\";\r\n\r\nimport { useAuthState, useAuthDispatch } from \"../context/auth\";\r\nimport { gql, hasuraAdminClient } from \"../lib/hasura-admin-client\";\r\nimport { hasuraUserClient } from \"../lib/hasura-user-client\";\r\n\r\nconst from = new Date().toISOString();\r\n\r\nconst GetUsers = gql`\r\n  {\r\n    User {\r\n      Name\r\n      id\r\n      notifications_aggregate(\r\n        where: { seen: { _eq: false } }\r\n        order_by: { created_at: desc }\r\n      ) {\r\n        aggregate {\r\n          count\r\n        }\r\n      }\r\n      notifications(where: { seen: { _eq: false } }) {\r\n        id\r\n        description\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst GetTodos = gql`\r\n  {\r\n    Todo(where: { Member: { _eq: \"Employee\" }, Type: { _eq: \"Offboarding\" } }) {\r\n      id\r\n      Description\r\n      Name\r\n    }\r\n  }\r\n`;\r\nconst GetTodoshr = gql`\r\n  {\r\n    Todo(where: { Member: { _eq: \"Admin\" }, Type: { _eq: \"Offboarding\" } }) {\r\n      id\r\n      Description\r\n      Name\r\n    }\r\n  }\r\n`;\r\nconst GetUserById = gql`\r\n  query GetUserById($user_id: Int!) {\r\n    User_by_pk(id: $user_id) {\r\n      id\r\n      notifications_aggregate(where: { seen: { _eq: false } }) {\r\n        aggregate {\r\n          count\r\n        }\r\n      }\r\n      notifications(where: { seen: { _eq: false } }) {\r\n        id\r\n        description\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst AddNotification = gql`\r\n  mutation MyMutation($user_id: Int!) {\r\n    insert_notification_one(\r\n      object: {\r\n        user_id: $user_id\r\n        name: \"ttt\"\r\n        seen: false\r\n        description: \"tttttt\"\r\n      }\r\n    ) {\r\n      user_id\r\n      seen\r\n      name\r\n      id\r\n      description\r\n    }\r\n  }\r\n`;\r\n\r\nconst InsertTask = gql`\r\n  mutation InsertTask(\r\n    $Description: String!\r\n    $Name: String!\r\n    $from: timestamptz!\r\n    $Member: String!\r\n  ) {\r\n    insert_Todo_one(\r\n      object: {\r\n        Description: $Description\r\n        Name: $Name\r\n        Date: $from\r\n        Type: \"Offboarding\"\r\n        Member: $Member\r\n      }\r\n    ) {\r\n      Description\r\n      Date\r\n      Name\r\n    }\r\n  }\r\n`;\r\n\r\nexport const getStaticProps = async () => {\r\n  const { User } = await hasuraAdminClient.request(GetUsers);\r\n  const initialData = await hasuraAdminClient.request(GetTodos);\r\n  const GetTodoshr = await hasuraAdminClient.request(GetTodoshr);\r\n\r\n  return {\r\n    props: {\r\n      User,\r\n      initialData,\r\n      GetTodoshr,\r\n    },\r\n  };\r\n};\r\n\r\nexport default function OffBoarding({ User, initialData, GetTodoshr }) {\r\n  const router = useRouter();\r\n  const { isAuthenticated, user } = useAuthState();\r\n  const hasura = hasuraUserClient();\r\n  const {\r\n    handleSubmit,\r\n    register,\r\n    control,\r\n    errors,\r\n    formState: { isSubmitting },\r\n  } = useForm();\r\n  const {\r\n    register: register2,\r\n    errors: errors2,\r\n    handleSubmit: handleSubmit2,\r\n  } = useForm();\r\n  const { updateUser } = useAuthDispatch();\r\n  useEffect(() => {\r\n    if (!isAuthenticated) router.push(\"/\");\r\n  }, [isAuthenticated]);\r\n\r\n  if (!isAuthenticated) return null;\r\n  const { data } = useSWR(GetTodos, (query) => hasura.request(query), {\r\n    initialData,\r\n    revalidateOnMount: true,\r\n  });\r\n  const onSubmit = async ({ Description, Name, Member }) => {\r\n    console.log(from);\r\n    try {\r\n      const { insert_Todo_one } = await hasura.request(InsertTask, {\r\n        Description,\r\n        from,\r\n        Name,\r\n        Member,\r\n      });\r\n\r\n      window.location.reload();\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const Assign = async ({ user_id }) => {\r\n    const u_id = user_id;\r\n    console.log(u_id);\r\n    const t = data.Todo.map(({ id }) => {\r\n      return { todo_id: id, user_id: u_id, completed: false };\r\n    });\r\n    const query = gql`\r\n      mutation insert_todo_user($objects: [todo_user_insert_input!]!) {\r\n        insert_todo_user(objects: $objects) {\r\n          affected_rows\r\n        }\r\n      }\r\n    `;\r\n    if (confirm(`are you sure you want to assign those tasks to ${u_id}`)) {\r\n      try {\r\n        const { insert_todo_user } = await hasura.request(query, {\r\n          objects: t,\r\n        });\r\n        mutate();\r\n        window.location.reload();\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n  const deleteTodo = gql`\r\n    mutation MyMutation($id: Int!) {\r\n      delete_Todo_by_pk(id: $id) {\r\n        id\r\n      }\r\n    }\r\n  `;\r\n\r\n  const deleteATodo = async (id) => {\r\n    if (confirm(\"are you sure you want to delete this todo?\")) {\r\n      try {\r\n        await hasura.request(deleteTodo, { id });\r\n        mutate();\r\n        window.location.reload();\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"page-content-wrapper\">\r\n      <div className=\"page-content\" style={{ minHeight: 1500 }}>\r\n        <div class=\"profile-content\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n              <div class=\"portlet light \">\r\n                <div class=\"portlet-body\">\r\n                  {\" \"}\r\n                  <h3>Add new offboarding Task</h3>\r\n                  <div class=\"tab-content\">\r\n                    <div class=\"tab-pane active\" id=\"tab_1_1\">\r\n                      <form onSubmit={handleSubmit(onSubmit)}>\r\n                        <div class=\"form-group\">\r\n                          <label class=\"control-label\">Name</label>\r\n                          <input\r\n                            name=\"Name\"\r\n                            id=\"Name\"\r\n                            type=\"text\"\r\n                            placeholder=\"Todo Name\"\r\n                            class=\"form-control\"\r\n                            ref={register}\r\n                            required\r\n                          />{\" \"}\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                          <label class=\"control-label\">Description</label>\r\n                          <textarea\r\n                            name=\"Description\"\r\n                            id=\"Description\"\r\n                            type=\"textarea\"\r\n                            placeholder=\"Description\"\r\n                            class=\"form-control\"\r\n                            ref={register}\r\n                            required\r\n                          />{\" \"}\r\n                        </div>{\" \"}\r\n                        <div class=\"form-group\">\r\n                          {\" \"}\r\n                          which role?\r\n                          <select\r\n                            name=\"Member\"\r\n                            id=\"Member\"\r\n                            ref={register}\r\n                            required\r\n                            className=\"form-control select2 \"\r\n                          >\r\n                            <option>Manager</option>\r\n                            <option>Employee</option>\r\n                          </select>{\" \"}\r\n                        </div>\r\n                        <div class=\"margiv-top-10\">\r\n                          <button\r\n                            type=\"submit\"\r\n                            class=\"btn green\"\r\n                            disabled={isSubmitting}\r\n                          >\r\n                            {\" \"}\r\n                            Save Changes{\" \"}\r\n                          </button>\r\n                        </div>\r\n                      </form>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>{\" \"}\r\n            <div class=\"col-md-6\">\r\n              <div class=\"portlet light \">\r\n                <div class=\"portlet-body\">\r\n                  <form onSubmit={handleSubmit2(Assign)}>\r\n                    <div class=\"form-group\">\r\n                      <label>Users:</label>\r\n                      <select\r\n                        name=\"user_id\"\r\n                        id=\"user_id\"\r\n                        ref={register2}\r\n                        required\r\n                        className=\"form-control select2 \"\r\n                      >\r\n                        {User.map(({ id, Name }) => (\r\n                          <React.Fragment key={id}>\r\n                            <option value={id}>{Name}</option>\r\n                          </React.Fragment>\r\n                        ))}\r\n                      </select>\r\n                    </div>\r\n                    <div class=\"btn-group\">\r\n                      <button\r\n                        className=\"btn green\"\r\n                        type=\"submit\"\r\n                        disabled={isSubmitting}\r\n                      >\r\n                        {\" \"}\r\n                        Assign\r\n                      </button>\r\n                    </div>{\" \"}\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-md-6\">\r\n              <div class=\"portlet light \">\r\n                <div class=\"portlet-body\">\r\n                  <h3> offboarding Tasks</h3>\r\n                  <hr />\r\n                  <div class=\"table-container\">\r\n                    <table\r\n                      class=\"table table-striped table-bordered table-hover\"\r\n                      id=\"sample_3\"\r\n                    >\r\n                      <thead>\r\n                        <tr>\r\n                          <th> Name </th>\r\n                          <th> Description </th> <th> Edit </th>\r\n                          <th> Delete </th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tfoot>\r\n                        <tr>\r\n                          <th> </th>\r\n                          <th> </th> <th> </th> <th> </th>\r\n                        </tr>\r\n                      </tfoot>\r\n                      <tbody>\r\n                        {data.Todo.map(({ id, Description, Name }) => {\r\n                          return (\r\n                            <tr key={id} class=\"odd gradeX\">\r\n                              <td>{Name}</td>\r\n                              <td>{Description}</td>{\" \"}\r\n                              <td>\r\n                                <a\r\n                                  class=\"btn btn-circle blue btn-sm \"\r\n                                  href={`/todo/${id}`}\r\n                                >\r\n                                  edit\r\n                                </a>\r\n                              </td>{\" \"}\r\n                              <td>\r\n                                <button\r\n                                  class=\"btn btn-circle red btn-sm \"\r\n                                  onClick={() => deleteATodo(id)}\r\n                                >\r\n                                  {\" \"}\r\n                                  delete\r\n                                </button>\r\n                              </td>\r\n                            </tr>\r\n                          );\r\n                        })}\r\n                      </tbody>\r\n                    </table>{\" \"}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>{\" \"}\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}