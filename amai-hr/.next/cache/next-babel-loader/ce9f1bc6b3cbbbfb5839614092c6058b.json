{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\msdtt\\\\OneDrive\\\\Documents\\\\amai_hr_next_js_hasura\\\\amai-hr\\\\pages\\\\CandidatOne\\\\[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from \"next/router\";\nimport useSWR from \"swr\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport Layout from \"../Components/Layout\";\nimport { gql, hasuraUserClient } from \"../../lib/hasura-user-client\";\nconst GetCategoryIds = gql`\n  {\n    Candidate {\n      id\n      Email\n    }\n  }\n`;\nconst GetCategoryById = gql`\n  query GetCategoryById($id: Int!) {\n    Candidate_by_pk(id: $id) {\n      id\n      Email\n    }\n  }\n`;\nexport const getStaticPaths = async () => {\n  const hasura = hasuraUserClient();\n  const {\n    Candidate\n  } = await hasura.request(GetCategoryIds);\n  return {\n    paths: Candidate.map(({\n      id\n    }) => ({\n      params: {\n        id: id.toString()\n      }\n    })),\n    fallback: false\n  };\n};\n\nconst onSubmit = async ({\n  Email,\n  Last_Name,\n  Name,\n  domain,\n  id,\n  phone_number,\n  Status\n}) => {\n  const {\n    update_Candidate_by_pk\n  } = await hasura.request(UpdatePost, {\n    Email,\n    Last_Name,\n    Name,\n    domain,\n    id,\n    phone_number,\n    Status\n  });\n  const UpdatePost = gql`\n    mutation update_Candidate_by_pk(\n      $id: Int!\n      $message: String!\n      $Email: String!\n      $Last_Name: String!\n      $Name: String!\n      $domain: String!\n      $phone_number: String!\n    ) {\n      update_Candidate_by_pk(\n        pk_columns: { id: $id }\n        _set: {\n          Email: $Email\n          Last_Name: $Last_Name\n          Name: $Name\n          domain: $domain\n          phone_number: $phone_number\n        }\n      ) {\n        Email\n        Last_Name\n        Name\n        domain\n        id\n        phone_number\n        Status\n      }\n    }\n  `;\n\n  try {\n    await graphQLClient.request(UpdatePost, variables);\n    Router.push(\"/\");\n  } catch (error) {\n    console.error(error);\n    setErrorMessage(error.message);\n  }\n};\n\nexport const getStaticProps = async ({\n  params\n}) => {\n  const hasura = hasuraUserClient();\n  const {\n    id\n  } = params;\n  console.log(id);\n  const initialData = await hasura.request(GetCategoryById, {\n    id\n  });\n  return {\n    props: {\n      initialData\n    },\n    revalidate: 1\n  };\n};\nexport default function CategoryPage({\n  initialData\n}) {\n  const hasura = hasuraUserClient();\n  const {\n    query\n  } = useRouter();\n  const {\n    id\n  } = query;\n  const {\n    handleSubmit,\n    register,\n    control,\n    errors,\n    formState: {\n      isSubmitting\n    }\n  } = useForm();\n  const {\n    data\n  } = useSWR([GetCategoryById, id], (query, id) => hasura.request(query, {\n    id\n  }), {\n    initialData,\n    revalidateOnMount: true\n  });\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"page-content-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"page-content\",\n    style: {\n      minHeight: 1500\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    class: \"profile-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    class: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    class: \"col-md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    class: \"portlet light \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    class: \"portlet-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 19\n    }\n  }, __jsx(\"div\", {\n    class: \"tab-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    class: \"tab-pane active\",\n    id: \"tab_1_1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 23\n    }\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 25\n    }\n  }, __jsx(\"div\", {\n    class: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 27\n    }\n  }, __jsx(\"label\", {\n    class: \"control-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 29\n    }\n  }, \"First Name\"), __jsx(\"input\", {\n    name: \"Name\",\n    id: \"Name\",\n    type: \"text\",\n    placeholder: \"First Name\",\n    class: \"form-control\",\n    ref: register({\n      required: \"You must select a category for your thread\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 29\n    }\n  }), \" \"), __jsx(\"div\", {\n    class: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 27\n    }\n  }, __jsx(\"label\", {\n    class: \"control-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 29\n    }\n  }, \"Last Name\"), __jsx(\"input\", {\n    name: \"Last_Name\",\n    id: \"Last_Name\",\n    type: \"text\",\n    placeholder: \"Last Name\",\n    class: \"form-control\",\n    ref: register({\n      required: \"You must select a category for your thread\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 29\n    }\n  }), \" \"), __jsx(\"div\", {\n    class: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 27\n    }\n  }, __jsx(\"label\", {\n    class: \"control-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 29\n    }\n  }, \"Mobile Number\"), __jsx(\"input\", {\n    name: \"phone_number\",\n    id: \"phone_number\",\n    type: \"text\",\n    placeholder: \"+1 646 580 DEMO (6284)\",\n    class: \"form-control\",\n    ref: register({\n      required: \"You must select a category for your thread\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 29\n    }\n  }), \" \"), __jsx(\"div\", {\n    class: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 27\n    }\n  }, __jsx(\"label\", {\n    class: \"control-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 29\n    }\n  }, \"Email\"), __jsx(\"input\", {\n    name: \"Email\",\n    id: \"Email\",\n    type: \"email\",\n    placeholder: data.Candidate_by_pk.Email,\n    class: \"form-control\",\n    ref: register({\n      required: \"You must select a category for your thread\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 29\n    }\n  }), \" \"), __jsx(\"div\", {\n    class: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 27\n    }\n  }, __jsx(\"label\", {\n    class: \"control-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 29\n    }\n  }, \"Domain\"), __jsx(\"input\", {\n    name: \"domain\",\n    id: \"domain\",\n    type: \"text\",\n    placeholder: \"Web Developer\",\n    class: \"form-control\",\n    ref: register({\n      required: \"You must select a category for your thread\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 29\n    }\n  }), \" \"), __jsx(\"div\", {\n    class: \"margiv-top-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 27\n    }\n  }, __jsx(\"button\", {\n    type: \"submit\",\n    class: \"btn green\",\n    disabled: isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 29\n    }\n  }, \" \", \"Save Changes\", \" \"), __jsx(\"a\", {\n    href: \"#\",\n    class: \"btn default\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 29\n    }\n  }, \" \", \"Cancel\", \" \"))))))))))), \" \"));\n}","map":{"version":3,"sources":["C:/Users/msdtt/OneDrive/Documents/amai_hr_next_js_hasura/amai-hr/pages/CandidatOne/[id].js"],"names":["useRouter","useSWR","useForm","Controller","Layout","gql","hasuraUserClient","GetCategoryIds","GetCategoryById","getStaticPaths","hasura","Candidate","request","paths","map","id","params","toString","fallback","onSubmit","Email","Last_Name","Name","domain","phone_number","Status","update_Candidate_by_pk","UpdatePost","graphQLClient","variables","Router","push","error","console","setErrorMessage","message","getStaticProps","log","initialData","props","revalidate","CategoryPage","query","handleSubmit","register","control","errors","formState","isSubmitting","data","revalidateOnMount","minHeight","required","Candidate_by_pk"],"mappings":"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","sourcesContent":["import { useRouter } from \"next/router\";\r\nimport useSWR from \"swr\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\n\r\nimport Layout from \"../Components/Layout\";\r\n\r\nimport { gql, hasuraUserClient } from \"../../lib/hasura-user-client\";\r\n\r\nconst GetCategoryIds = gql`\r\n  {\r\n    Candidate {\r\n      id\r\n      Email\r\n    }\r\n  }\r\n`;\r\n\r\nconst GetCategoryById = gql`\r\n  query GetCategoryById($id: Int!) {\r\n    Candidate_by_pk(id: $id) {\r\n      id\r\n      Email\r\n    }\r\n  }\r\n`;\r\nexport const getStaticPaths = async () => {\r\n  const hasura = hasuraUserClient();\r\n\r\n  const { Candidate } = await hasura.request(GetCategoryIds);\r\n\r\n  return {\r\n    paths: Candidate.map(({ id }) => ({\r\n      params: {\r\n        id: id.toString(),\r\n      },\r\n    })),\r\n    fallback: false,\r\n  };\r\n};\r\n\r\nconst onSubmit = async ({\r\n  Email,\r\n  Last_Name,\r\n  Name,\r\n  domain,\r\n  id,\r\n  phone_number,\r\n  Status,\r\n}) => {\r\n  const { update_Candidate_by_pk } = await hasura.request(UpdatePost, {\r\n    Email,\r\n    Last_Name,\r\n    Name,\r\n    domain,\r\n    id,\r\n    phone_number,\r\n    Status,\r\n  });\r\n  const UpdatePost = gql`\r\n    mutation update_Candidate_by_pk(\r\n      $id: Int!\r\n      $message: String!\r\n      $Email: String!\r\n      $Last_Name: String!\r\n      $Name: String!\r\n      $domain: String!\r\n      $phone_number: String!\r\n    ) {\r\n      update_Candidate_by_pk(\r\n        pk_columns: { id: $id }\r\n        _set: {\r\n          Email: $Email\r\n          Last_Name: $Last_Name\r\n          Name: $Name\r\n          domain: $domain\r\n          phone_number: $phone_number\r\n        }\r\n      ) {\r\n        Email\r\n        Last_Name\r\n        Name\r\n        domain\r\n        id\r\n        phone_number\r\n        Status\r\n      }\r\n    }\r\n  `;\r\n\r\n  try {\r\n    await graphQLClient.request(UpdatePost, variables);\r\n    Router.push(\"/\");\r\n  } catch (error) {\r\n    console.error(error);\r\n    setErrorMessage(error.message);\r\n  }\r\n};\r\nexport const getStaticProps = async ({ params }) => {\r\n  const hasura = hasuraUserClient();\r\n  const { id } = params;\r\n  console.log(id);\r\n  const initialData = await hasura.request(GetCategoryById, { id });\r\n\r\n  return {\r\n    props: {\r\n      initialData,\r\n    },\r\n    revalidate: 1,\r\n  };\r\n};\r\n\r\nexport default function CategoryPage({ initialData }) {\r\n  const hasura = hasuraUserClient();\r\n  const { query } = useRouter();\r\n  const { id } = query;\r\n  const {\r\n    handleSubmit,\r\n    register,\r\n    control,\r\n    errors,\r\n    formState: { isSubmitting },\r\n  } = useForm();\r\n  const { data } = useSWR(\r\n    [GetCategoryById, id],\r\n    (query, id) => hasura.request(query, { id }),\r\n    {\r\n      initialData,\r\n      revalidateOnMount: true,\r\n    }\r\n  );\r\n\r\n  return (\r\n    <Layout>\r\n      <div className=\"page-content-wrapper\">\r\n        <div className=\"page-content\" style={{ minHeight: 1500 }}>\r\n          <div class=\"profile-content\">\r\n            <div class=\"row\">\r\n              <div class=\"col-md-12\">\r\n                <div class=\"portlet light \">\r\n                  <div class=\"portlet-body\">\r\n                    <div class=\"tab-content\">\r\n                      <div class=\"tab-pane active\" id=\"tab_1_1\">\r\n                        <form onSubmit={handleSubmit(onSubmit)}>\r\n                          <div class=\"form-group\">\r\n                            <label class=\"control-label\">First Name</label>\r\n                            <input\r\n                              name=\"Name\"\r\n                              id=\"Name\"\r\n                              type=\"text\"\r\n                              placeholder=\"First Name\"\r\n                              class=\"form-control\"\r\n                              ref={register({\r\n                                required:\r\n                                  \"You must select a category for your thread\",\r\n                              })}\r\n                            />{\" \"}\r\n                          </div>\r\n                          <div class=\"form-group\">\r\n                            <label class=\"control-label\">Last Name</label>\r\n                            <input\r\n                              name=\"Last_Name\"\r\n                              id=\"Last_Name\"\r\n                              type=\"text\"\r\n                              placeholder=\"Last Name\"\r\n                              class=\"form-control\"\r\n                              ref={register({\r\n                                required:\r\n                                  \"You must select a category for your thread\",\r\n                              })}\r\n                            />{\" \"}\r\n                          </div>\r\n                          <div class=\"form-group\">\r\n                            <label class=\"control-label\">Mobile Number</label>\r\n                            <input\r\n                              name=\"phone_number\"\r\n                              id=\"phone_number\"\r\n                              type=\"text\"\r\n                              placeholder=\"+1 646 580 DEMO (6284)\"\r\n                              class=\"form-control\"\r\n                              ref={register({\r\n                                required:\r\n                                  \"You must select a category for your thread\",\r\n                              })}\r\n                            />{\" \"}\r\n                          </div>\r\n                          <div class=\"form-group\">\r\n                            <label class=\"control-label\">Email</label>\r\n                            <input\r\n                              name=\"Email\"\r\n                              id=\"Email\"\r\n                              type=\"email\"\r\n                              placeholder={data.Candidate_by_pk.Email}\r\n                              class=\"form-control\"\r\n                              ref={register({\r\n                                required:\r\n                                  \"You must select a category for your thread\",\r\n                              })}\r\n                            />{\" \"}\r\n                          </div>\r\n                          <div class=\"form-group\">\r\n                            <label class=\"control-label\">Domain</label>\r\n                            <input\r\n                              name=\"domain\"\r\n                              id=\"domain\"\r\n                              type=\"text\"\r\n                              placeholder=\"Web Developer\"\r\n                              class=\"form-control\"\r\n                              ref={register({\r\n                                required:\r\n                                  \"You must select a category for your thread\",\r\n                              })}\r\n                            />{\" \"}\r\n                          </div>\r\n                          <div class=\"margiv-top-10\">\r\n                            <button\r\n                              type=\"submit\"\r\n                              class=\"btn green\"\r\n                              disabled={isSubmitting}\r\n                            >\r\n                              {\" \"}\r\n                              Save Changes{\" \"}\r\n                            </button>\r\n                            <a href=\"#\" class=\"btn default\">\r\n                              {\" \"}\r\n                              Cancel{\" \"}\r\n                            </a>\r\n                          </div>\r\n                        </form>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>{\" \"}\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}