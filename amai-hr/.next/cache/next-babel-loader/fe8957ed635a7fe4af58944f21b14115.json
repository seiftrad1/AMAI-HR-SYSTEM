{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\msdtt\\\\OneDrive\\\\Documents\\\\amai_hr_next_js_hasura\\\\amai-hr\\\\pages\\\\Project\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport useSWR, { mutate } from \"swr\";\nimport { useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useForm } from \"react-hook-form\";\nimport Link from \"next/link\";\nimport gql from \"graphql-tag\";\nimport { hasuraUserClient } from \"../../lib/hasura-user-client\";\nconst today = new Date();\nconst GetCandidats = gql`\n  query MyQuery {\n    Candidate {\n      Email\n      Last_Name\n      Name\n      domain\n      id\n      phone_number\n      Status\n    }\n  }\n`;\nexport const getStaticProps = async () => {\n  const hasura = hasuraUserClient();\n  const initialData = await hasura.request(GetCandidats);\n  return {\n    props: {\n      initialData\n    },\n    revalidate: 1\n  };\n};\nexport default function MembersPage({\n  initialData\n}) {\n  const hasura = hasuraUserClient();\n  const router = useRouter();\n  const {\n    handleSubmit,\n    register,\n    control,\n    errors,\n    formState: {\n      isSubmitting\n    }\n  } = useForm();\n  const {\n    data\n  } = useSWR(GetCandidats, query => hasura.request(query), {\n    initialData,\n    revalidateOnMount: true\n  });\n\n  const onSubmit = async ({\n    Description,\n    Name,\n    user_id\n  }) => {\n    console.log(from);\n\n    try {\n      const {\n        insert_Todo_one\n      } = await hasura.request(InsertTask, {\n        Description,\n        from,\n        Name,\n        user_id\n      });\n      const {\n        insert_notification_one\n      } = await hasura.request(AddNotification, {\n        user_id\n      });\n\n      if (isAuthenticated) {\n        const {\n          User_by_pk\n        } = await hasura.request(GetUserById, {\n          user_id: user.id\n        });\n        updateUser(User_by_pk);\n      }\n\n      router.push(`/CandidatList`);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: \"page-content-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"page-content\",\n    style: {\n      minHeight: 1500\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    class: \"profile-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    class: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    class: \"col-md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    class: \"portlet light \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    class: \"portlet-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    class: \"tab-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 19\n    }\n  }, __jsx(\"div\", {\n    class: \"tab-pane active\",\n    id: \"tab_1_1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 23\n    }\n  }, __jsx(\"div\", {\n    class: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 25\n    }\n  }, __jsx(\"label\", {\n    class: \"control-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 27\n    }\n  }, \"Name\"), __jsx(\"input\", {\n    name: \"Name\",\n    id: \"Name\",\n    type: \"text\",\n    placeholder: \"Todo Name\",\n    class: \"form-control\",\n    ref: register({\n      required: \"You must select a category for your thread\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 27\n    }\n  }), \" \"), __jsx(\"div\", {\n    class: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 25\n    }\n  }, __jsx(\"label\", {\n    class: \"control-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 27\n    }\n  }, \"Description\"), __jsx(\"textarea\", {\n    name: \"Description\",\n    id: \"Description\",\n    type: \"textarea\",\n    placeholder: \"Description\",\n    class: \"form-control\",\n    ref: register({\n      required: \"You must select a category for your thread\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 27\n    }\n  }), \" \"), __jsx(\"select\", {\n    name: \"user_id\",\n    id: \"user_id\",\n    ref: register({\n      required: \"You must select a category for your thread\"\n    }),\n    className: \"appearance-none bg-transparent w-full\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 25\n    }\n  }, User.map(({\n    id,\n    Name\n  }) => __jsx(React.Fragment, {\n    key: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 29\n    }\n  }, __jsx(\"option\", {\n    value: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 31\n    }\n  }, Name)))), __jsx(\"div\", {\n    class: \"margiv-top-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 25\n    }\n  }, __jsx(\"button\", {\n    type: \"submit\",\n    class: \"btn green\",\n    disabled: isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 27\n    }\n  }, \" \", \"Save Changes\", \" \"), __jsx(\"a\", {\n    href: \"#\",\n    class: \"btn default\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 27\n    }\n  }, \" \", \"Cancel\", \" \"))))))))))), \" \");\n}","map":{"version":3,"sources":["C:/Users/msdtt/OneDrive/Documents/amai_hr_next_js_hasura/amai-hr/pages/Project/index.js"],"names":["useSWR","mutate","useEffect","useRouter","useForm","Link","gql","hasuraUserClient","today","Date","GetCandidats","getStaticProps","hasura","initialData","request","props","revalidate","MembersPage","router","handleSubmit","register","control","errors","formState","isSubmitting","data","query","revalidateOnMount","onSubmit","Description","Name","user_id","console","log","from","insert_Todo_one","InsertTask","insert_notification_one","AddNotification","isAuthenticated","User_by_pk","GetUserById","user","id","updateUser","push","err","minHeight","required","User","map"],"mappings":"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","sourcesContent":["import useSWR, { mutate } from \"swr\";\r\nimport { useEffect } from \"react\";\r\nimport { useRouter } from \"next/router\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport Link from \"next/link\";\r\nimport gql from \"graphql-tag\";\r\n\r\nimport { hasuraUserClient } from \"../../lib/hasura-user-client\";\r\n\r\nconst today = new Date();\r\n\r\nconst GetCandidats = gql`\r\n  query MyQuery {\r\n    Candidate {\r\n      Email\r\n      Last_Name\r\n      Name\r\n      domain\r\n      id\r\n      phone_number\r\n      Status\r\n    }\r\n  }\r\n`;\r\n\r\nexport const getStaticProps = async () => {\r\n  const hasura = hasuraUserClient();\r\n\r\n  const initialData = await hasura.request(GetCandidats);\r\n\r\n  return {\r\n    props: {\r\n      initialData,\r\n    },\r\n    revalidate: 1,\r\n  };\r\n};\r\n\r\nexport default function MembersPage({ initialData }) {\r\n  const hasura = hasuraUserClient();\r\n  const router = useRouter();\r\n  const {\r\n    handleSubmit,\r\n    register,\r\n    control,\r\n    errors,\r\n    formState: { isSubmitting },\r\n  } = useForm();\r\n  const { data } = useSWR(GetCandidats, (query) => hasura.request(query), {\r\n    initialData,\r\n    revalidateOnMount: true,\r\n  });\r\n  const onSubmit = async ({ Description, Name, user_id }) => {\r\n    console.log(from);\r\n    try {\r\n      const { insert_Todo_one } = await hasura.request(InsertTask, {\r\n        Description,\r\n        from,\r\n        Name,\r\n        user_id,\r\n      });\r\n      const { insert_notification_one } = await hasura.request(\r\n        AddNotification,\r\n        {\r\n          user_id,\r\n        }\r\n      );\r\n      if (isAuthenticated) {\r\n        const { User_by_pk } = await hasura.request(GetUserById, {\r\n          user_id: user.id,\r\n        });\r\n        updateUser(User_by_pk);\r\n      }\r\n      router.push(`/CandidatList`);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"page-content-wrapper\">\r\n      <div className=\"page-content\" style={{ minHeight: 1500 }}>\r\n        <div class=\"profile-content\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n              <div class=\"portlet light \">\r\n                <div class=\"portlet-body\">\r\n                  <div class=\"tab-content\">\r\n                    <div class=\"tab-pane active\" id=\"tab_1_1\">\r\n                      <form onSubmit={handleSubmit(onSubmit)}>\r\n                        <div class=\"form-group\">\r\n                          <label class=\"control-label\">Name</label>\r\n                          <input\r\n                            name=\"Name\"\r\n                            id=\"Name\"\r\n                            type=\"text\"\r\n                            placeholder=\"Todo Name\"\r\n                            class=\"form-control\"\r\n                            ref={register({\r\n                              required:\r\n                                \"You must select a category for your thread\",\r\n                            })}\r\n                          />{\" \"}\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                          <label class=\"control-label\">Description</label>\r\n                          <textarea\r\n                            name=\"Description\"\r\n                            id=\"Description\"\r\n                            type=\"textarea\"\r\n                            placeholder=\"Description\"\r\n                            class=\"form-control\"\r\n                            ref={register({\r\n                              required:\r\n                                \"You must select a category for your thread\",\r\n                            })}\r\n                          />{\" \"}\r\n                        </div>\r\n\r\n                        <select\r\n                          name=\"user_id\"\r\n                          id=\"user_id\"\r\n                          ref={register({\r\n                            required:\r\n                              \"You must select a category for your thread\",\r\n                          })}\r\n                          className=\"appearance-none bg-transparent w-full\"\r\n                        >\r\n                          {User.map(({ id, Name }) => (\r\n                            <React.Fragment key={id}>\r\n                              <option value={id}>{Name}</option>\r\n                            </React.Fragment>\r\n                          ))}\r\n                        </select>\r\n                        <div class=\"margiv-top-10\">\r\n                          <button\r\n                            type=\"submit\"\r\n                            class=\"btn green\"\r\n                            disabled={isSubmitting}\r\n                          >\r\n                            {\" \"}\r\n                            Save Changes{\" \"}\r\n                          </button>\r\n                          <a href=\"#\" class=\"btn default\">\r\n                            {\" \"}\r\n                            Cancel{\" \"}\r\n                          </a>\r\n                        </div>\r\n                      </form>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>{\" \"}\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}