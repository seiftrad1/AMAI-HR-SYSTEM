{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\msdtt\\\\OneDrive\\\\Documents\\\\amai_hr_next_js_hasura\\\\amai-hr\\\\pages\\\\todo\\\\[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useRouter } from \"next/router\";\nimport useSWR from \"swr\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { gql, hasuraUserClient } from \"../../lib/hasura-user-client\";\nimport { useEffect } from \"react\";\nconst GetTodoIds = gql`\n  {\n    Todo {\n      id\n      Name\n      Description\n    }\n  }\n`;\nconst GetTodoById = gql`\n  query GetCategoryById($id: Int!) {\n    Todo_by_pk(id: $id) {\n      id\n      Name\n      Description\n    }\n  }\n`;\nexport const getStaticPaths = async () => {\n  const hasura = hasuraUserClient();\n  const {\n    Todo\n  } = await hasura.request(GetTodoIds);\n  return {\n    paths: Todo.map(({\n      id\n    }) => ({\n      params: {\n        id: id.toString()\n      }\n    })),\n    fallback: false\n  };\n};\nexport const getStaticProps = async ({\n  params\n}) => {\n  const hasura = hasuraUserClient();\n  const {\n    id\n  } = params;\n  console.log(params);\n  console.log(id);\n  const initialData = await hasura.request(GetTodoById, {\n    id\n  });\n  return {\n    props: {\n      initialData\n    },\n    revalidate: 1\n  };\n};\nconst UpdatePost = gql`\n  mutation update_Todo_by_pk($id: Int!, $Name: String!, $Description: String!) {\n    update_Todo_by_pk(\n      pk_columns: { id: $id }\n      _set: { Description: $Description, Name: $Name }\n    ) {\n      id\n      Name\n      Description\n    }\n  }\n`;\nexport default function TodoEdit({\n  initialData\n}) {\n  const hasura = hasuraUserClient();\n  const {\n    query\n  } = useRouter();\n  const router = useRouter();\n  const {\n    id\n  } = query;\n\n  const _useForm = useForm(),\n        {\n    handleSubmit,\n    register,\n    control,\n    errors,\n    formState: {\n      isSubmitting\n    }\n  } = _useForm,\n        defaultValues = Object.assign({}, _useForm.defaultValues);\n\n  const {\n    data,\n    mutate\n  } = useSWR([GetTodoById, id], (query, id) => hasura.request(query, {\n    id\n  }), {\n    initialData,\n    revalidateOnMount: true\n  });\n  console.log(data);\n\n  const onSubmit = async ({\n    Description,\n    Name\n  }) => {\n    try {\n      const id = data.Todo_by_pk.id;\n      console.log(id);\n      const {\n        update_Todo_by_pk\n      } = await hasura.request(UpdatePost, {\n        id,\n        Name,\n        Description\n      });\n      mutate(_objectSpread(_objectSpread({}, data), update_Todo_by_pk));\n      router.push(`/Todo`);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: \"page-content-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"page-content\",\n    style: {\n      minHeight: 1500\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    class: \"profile-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    class: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    class: \"col-md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    class: \"portlet light \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    class: \"portlet-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  }, \" \", __jsx(\"div\", {\n    class: \"col-md-11\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 19\n    }\n  }, __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 21\n    }\n  }, \" onboarding Tasks\")), __jsx(\"div\", {\n    class: \"col-md-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 19\n    }\n  }, \" \", __jsx(\"div\", {\n    class: \"btn-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 21\n    }\n  }, \" \", __jsx(\"a\", {\n    id: \"sample_editable_1_2_new\",\n    class: \"btn sbold green\",\n    onClick: () => addproject(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 23\n    }\n  }, \"Back \", __jsx(\"i\", {\n    className: \"icon-logout\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 30\n    }\n  })))), \" \"), __jsx(\"div\", {\n    class: \"tab-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    class: \"tab-pane active\",\n    id: \"tab_1_1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 19\n    }\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    class: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 23\n    }\n  }, __jsx(\"label\", {\n    class: \"control-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 25\n    }\n  }, \" Name\"), __jsx(\"input\", {\n    defaultValue: data.Todo_by_pk.Name,\n    name: \"Name\",\n    id: \"Name\",\n    type: \"text\",\n    class: \"form-control\",\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 25\n    }\n  }), \" \"), __jsx(\"div\", {\n    class: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 23\n    }\n  }, __jsx(\"label\", {\n    class: \"control-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 25\n    }\n  }, \"Description\"), __jsx(\"input\", {\n    defaultValue: data.Todo_by_pk.Description,\n    name: \"Description\",\n    id: \"Description\",\n    type: \"text\",\n    placeholder: \"Last Name\",\n    class: \"form-control\",\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 25\n    }\n  }), \" \"), __jsx(\"div\", {\n    class: \"margiv-top-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 23\n    }\n  }, __jsx(\"button\", {\n    type: \"submit\",\n    class: \"btn green\",\n    disabled: isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 25\n    }\n  }, \" \", \"Save Changes\", \" \")))))))))), \" \");\n}","map":{"version":3,"sources":["C:/Users/msdtt/OneDrive/Documents/amai_hr_next_js_hasura/amai-hr/pages/todo/[id].js"],"names":["useRouter","useSWR","useForm","Controller","gql","hasuraUserClient","useEffect","GetTodoIds","GetTodoById","getStaticPaths","hasura","Todo","request","paths","map","id","params","toString","fallback","getStaticProps","console","log","initialData","props","revalidate","UpdatePost","TodoEdit","query","router","handleSubmit","register","control","errors","formState","isSubmitting","defaultValues","data","mutate","revalidateOnMount","onSubmit","Description","Name","Todo_by_pk","update_Todo_by_pk","push","err","minHeight","addproject"],"mappings":"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","sourcesContent":["import { useRouter } from \"next/router\";\r\nimport useSWR from \"swr\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\n\r\nimport { gql, hasuraUserClient } from \"../../lib/hasura-user-client\";\r\nimport { useEffect } from \"react\";\r\nconst GetTodoIds = gql`\r\n  {\r\n    Todo {\r\n      id\r\n      Name\r\n      Description\r\n    }\r\n  }\r\n`;\r\n\r\nconst GetTodoById = gql`\r\n  query GetCategoryById($id: Int!) {\r\n    Todo_by_pk(id: $id) {\r\n      id\r\n      Name\r\n      Description\r\n    }\r\n  }\r\n`;\r\nexport const getStaticPaths = async () => {\r\n  const hasura = hasuraUserClient();\r\n\r\n  const { Todo } = await hasura.request(GetTodoIds);\r\n\r\n  return {\r\n    paths: Todo.map(({ id }) => ({\r\n      params: {\r\n        id: id.toString(),\r\n      },\r\n    })),\r\n    fallback: false,\r\n  };\r\n};\r\n\r\nexport const getStaticProps = async ({ params }) => {\r\n  const hasura = hasuraUserClient();\r\n  const { id } = params;\r\n  console.log(params);\r\n  console.log(id);\r\n  const initialData = await hasura.request(GetTodoById, { id });\r\n\r\n  return {\r\n    props: {\r\n      initialData,\r\n    },\r\n    revalidate: 1,\r\n  };\r\n};\r\nconst UpdatePost = gql`\r\n  mutation update_Todo_by_pk($id: Int!, $Name: String!, $Description: String!) {\r\n    update_Todo_by_pk(\r\n      pk_columns: { id: $id }\r\n      _set: { Description: $Description, Name: $Name }\r\n    ) {\r\n      id\r\n      Name\r\n      Description\r\n    }\r\n  }\r\n`;\r\nexport default function TodoEdit({ initialData }) {\r\n  const hasura = hasuraUserClient();\r\n  const { query } = useRouter();\r\n  const router = useRouter();\r\n\r\n  const { id } = query;\r\n  const {\r\n    handleSubmit,\r\n    register,\r\n    control,\r\n    errors,\r\n    formState: { isSubmitting },\r\n    defaultValues: { ...defaultValues },\r\n  } = useForm();\r\n  const { data, mutate } = useSWR(\r\n    [GetTodoById, id],\r\n    (query, id) => hasura.request(query, { id }),\r\n    {\r\n      initialData,\r\n      revalidateOnMount: true,\r\n    }\r\n  );\r\n  console.log(data);\r\n\r\n  const onSubmit = async ({ Description, Name }) => {\r\n    try {\r\n      const id = data.Todo_by_pk.id;\r\n      console.log(id);\r\n      const { update_Todo_by_pk } = await hasura.request(UpdatePost, {\r\n        id,\r\n        Name,\r\n        Description,\r\n      });\r\n\r\n      mutate({\r\n        ...data,\r\n        ...update_Todo_by_pk,\r\n      });\r\n      router.push(`/Todo`);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"page-content-wrapper\">\r\n      <div className=\"page-content\" style={{ minHeight: 1500 }}>\r\n        <div class=\"profile-content\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n              <div class=\"portlet light \">\r\n                <div class=\"portlet-body\">\r\n                  {\" \"}\r\n                  <div class=\"col-md-11\">\r\n                    <h3> onboarding Tasks</h3>\r\n                  </div>\r\n                  <div class=\"col-md-1\">\r\n                    {\" \"}\r\n                    <div class=\"btn-group\">\r\n                      {\" \"}\r\n                      <a\r\n                        id=\"sample_editable_1_2_new\"\r\n                        class=\"btn sbold green\"\r\n                        onClick={() => addproject()}\r\n                      >\r\n                        Back <i className=\"icon-logout\"></i>\r\n                      </a>\r\n                    </div>\r\n                  </div>{\" \"}\r\n                </div>\r\n\r\n                <div class=\"tab-content\">\r\n                  <div class=\"tab-pane active\" id=\"tab_1_1\">\r\n                    <form onSubmit={handleSubmit(onSubmit)}>\r\n                      <div class=\"form-group\">\r\n                        <label class=\"control-label\"> Name</label>\r\n                        <input\r\n                          defaultValue={data.Todo_by_pk.Name}\r\n                          name=\"Name\"\r\n                          id=\"Name\"\r\n                          type=\"text\"\r\n                          class=\"form-control\"\r\n                          ref={register}\r\n                        />{\" \"}\r\n                      </div>\r\n                      <div class=\"form-group\">\r\n                        <label class=\"control-label\">Description</label>\r\n                        <input\r\n                          defaultValue={data.Todo_by_pk.Description}\r\n                          name=\"Description\"\r\n                          id=\"Description\"\r\n                          type=\"text\"\r\n                          placeholder=\"Last Name\"\r\n                          class=\"form-control\"\r\n                          ref={register}\r\n                        />{\" \"}\r\n                      </div>\r\n                      <div class=\"margiv-top-10\">\r\n                        <button\r\n                          type=\"submit\"\r\n                          class=\"btn green\"\r\n                          disabled={isSubmitting}\r\n                        >\r\n                          {\" \"}\r\n                          Save Changes{\" \"}\r\n                        </button>\r\n                      </div>\r\n                    </form>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>{\" \"}\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}