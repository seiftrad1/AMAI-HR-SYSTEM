{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useForm } from \"react-hook-form\";\nimport { useAuthState, useAuthDispatch } from \"../context/auth\";\nexport default function RegisterPage() {\n  const router = useRouter();\n  const {\n    isAuthenticated\n  } = useAuthState();\n  const {\n    register: createUser\n  } = useAuthDispatch();\n  const {\n    handleSubmit,\n    register,\n    errors,\n    formState: {\n      isSubmitting\n    },\n    setError\n  } = useForm({\n    defaultValues: {\n      save_last_seen: true\n    }\n  });\n  useEffect(() => {\n    if (isAuthenticated) {\n      router.push(\"/\");\n    }\n  }, [isAuthenticated]);\n  if (isAuthenticated) return null;\n\n  const onSubmit = async ({\n    name,\n    email,\n    password,\n    save_last_seen\n  }) => {\n    try {\n      await createUser({\n        name,\n        email,\n        password,\n        save_last_seen\n      });\n      router.push(\"/\");\n    } catch ({\n      message\n    }) {\n      setError(\"email\", {\n        type: \"manual\",\n        message\n      });\n    }\n  };\n\n  return __jsx(\"body\", {\n    className: \"login\"\n  }, __jsx(\"form\", {\n    class: \"register-form\",\n    onSubmit: handleSubmit(onSubmit)\n  }, __jsx(\"div\", {\n    class: \"content\"\n  }, \" \", __jsx(\"h3\", {\n    class: \"font-green\"\n  }, \"Add User\"), \" \", __jsx(\"div\", {\n    class: \"form-group\"\n  }, __jsx(\"input\", {\n    class: \"form-control form-control-solid placeholder-no-fix\",\n    name: \"name\",\n    id: \"name\",\n    ref: register({\n      required: \"You must provide a name.\"\n    }),\n    placeholder: \"Your name\"\n  })), errors.name && __jsx(\"span\", null, errors.name.message), __jsx(\"div\", {\n    class: \"form-group\"\n  }, \" \", __jsx(\"input\", {\n    class: \"form-control form-control-solid placeholder-no-fix\",\n    type: \"email\",\n    name: \"email\",\n    id: \"email\",\n    ref: register({\n      required: \"You must provide a email.\",\n      pattern: {\n        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n        message: \"You must provide a valid email\"\n      }\n    }),\n    placeholder: \"Your email\"\n  }), errors.email && __jsx(\"span\", null, errors.email.message)), __jsx(\"div\", {\n    class: \"form-group\"\n  }, \" \", __jsx(\"input\", {\n    class: \"form-control form-control-solid placeholder-no-fix\",\n    type: \"password\",\n    name: \"password\",\n    id: \"password\",\n    ref: register({\n      required: \"You must provide a password.\",\n      minLength: {\n        message: \"Your password must be at least 6 characters\",\n        value: 6\n      }\n    }),\n    placeholder: \"Choose a password\"\n  }), errors.password && __jsx(\"span\", null, errors.password.message)), __jsx(\"div\", {\n    class: \"form-group\"\n  }, \" \", __jsx(\"label\", {\n    htmlFor: \"save_last_seen\",\n    class: \"rememberme check mt-checkbox mt-checkbox-outline\"\n  }, __jsx(\"input\", {\n    type: \"checkbox\",\n    id: \"save_last_seen\",\n    name: \"save_last_seen\",\n    ref: register\n  }), \"Show as online to other users\", __jsx(\"span\", null))), __jsx(\"div\", {\n    class: \"create-account\"\n  }, __jsx(\"button\", {\n    type: \"submit\",\n    disabled: isSubmitting,\n    class: \"btn green uppercase\"\n  }, \"Create account\")), \" \")));\n}","map":null,"metadata":{},"sourceType":"module"}