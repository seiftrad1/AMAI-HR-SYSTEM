{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\msdtt\\\\OneDrive\\\\Documents\\\\amai_hr_next_js_hasura\\\\amai-hr\\\\pages\\\\register.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useForm } from \"react-hook-form\";\nimport { useAuthState, useAuthDispatch } from \"../context/auth\";\nexport default function RegisterPage() {\n  const router = useRouter();\n  const {\n    isAuthenticated\n  } = useAuthState();\n  const {\n    register: createUser\n  } = useAuthDispatch();\n  const {\n    handleSubmit,\n    register,\n    errors,\n    formState: {\n      isSubmitting\n    },\n    setError\n  } = useForm({\n    defaultValues: {\n      save_last_seen: true\n    }\n  });\n  useEffect(() => {\n    if (isAuthenticated) {\n      router.push(\"/\");\n    }\n  }, [isAuthenticated]);\n  if (isAuthenticated) return null;\n\n  const onSubmit = async ({\n    name,\n    email,\n    password,\n    save_last_seen\n  }) => {\n    try {\n      await createUser({\n        name,\n        email,\n        password,\n        save_last_seen\n      });\n      router.push(\"/\");\n    } catch ({\n      message\n    }) {\n      setError(\"email\", {\n        type: \"manual\",\n        message\n      });\n    }\n  };\n\n  return __jsx(\"body\", {\n    className: \"login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, __jsx(\"h3\", {\n    class: \"font-green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, \"Add User\"), __jsx(\"form\", {\n    class: \"register-form\",\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    class: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, __jsx(\"input\", {\n    name: \"name\",\n    id: \"name\",\n    ref: register({\n      required: \"You must provide a name.\"\n    }),\n    placeholder: \"Your name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }), errors.name && __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 27\n    }\n  }, errors.name.message)), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, __jsx(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    id: \"email\",\n    ref: register({\n      required: \"You must provide a email.\",\n      pattern: {\n        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n        message: \"You must provide a valid email\"\n      }\n    }),\n    placeholder: \"Your email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }), errors.email && __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 28\n    }\n  }, errors.email.message)), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, __jsx(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    id: \"password\",\n    ref: register({\n      required: \"You must provide a password.\",\n      minLength: {\n        message: \"Your password must be at least 6 characters\",\n        value: 6\n      }\n    }),\n    placeholder: \"Choose a password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }), errors.password && __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 31\n    }\n  }, errors.password.message)), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"save_last_seen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, __jsx(\"input\", {\n    type: \"checkbox\",\n    id: \"save_last_seen\",\n    name: \"save_last_seen\",\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }), \"Show as online to other users\")), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, __jsx(\"button\", {\n    type: \"submit\",\n    disabled: isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, \"Create account\"))));\n}","map":{"version":3,"sources":["C:/Users/msdtt/OneDrive/Documents/amai_hr_next_js_hasura/amai-hr/pages/register.js"],"names":["useEffect","useRouter","useForm","useAuthState","useAuthDispatch","RegisterPage","router","isAuthenticated","register","createUser","handleSubmit","errors","formState","isSubmitting","setError","defaultValues","save_last_seen","push","onSubmit","name","email","password","message","type","required","pattern","value","minLength"],"mappings":"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","sourcesContent":["import { useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useForm } from \"react-hook-form\";\n\nimport { useAuthState, useAuthDispatch } from \"../context/auth\";\n\nexport default function RegisterPage() {\n  const router = useRouter();\n  const { isAuthenticated } = useAuthState();\n  const { register: createUser } = useAuthDispatch();\n  const {\n    handleSubmit,\n    register,\n    errors,\n    formState: { isSubmitting },\n    setError,\n  } = useForm({ defaultValues: { save_last_seen: true } });\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      router.push(\"/\");\n    }\n  }, [isAuthenticated]);\n\n  if (isAuthenticated) return null;\n\n  const onSubmit = async ({ name, email, password, save_last_seen }) => {\n    try {\n      await createUser({ name, email, password, save_last_seen });\n\n      router.push(\"/\");\n    } catch ({ message }) {\n      setError(\"email\", {\n        type: \"manual\",\n        message,\n      });\n    }\n  };\n\n  return (\n    <body className=\"login\">\n      <h3 class=\"font-green\">Add User</h3>\n      <form class=\"register-form\" onSubmit={handleSubmit(onSubmit)}>\n        <div class=\"content\">\n          <input\n            name=\"name\"\n            id=\"name\"\n            ref={register({\n              required: \"You must provide a name.\",\n            })}\n            placeholder=\"Your name\"\n          />\n          {errors.name && <span>{errors.name.message}</span>}\n        </div>\n        <div>\n          <input\n            type=\"email\"\n            name=\"email\"\n            id=\"email\"\n            ref={register({\n              required: \"You must provide a email.\",\n              pattern: {\n                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                message: \"You must provide a valid email\",\n              },\n            })}\n            placeholder=\"Your email\"\n          />\n          {errors.email && <span>{errors.email.message}</span>}\n        </div>\n        <div>\n          <input\n            type=\"password\"\n            name=\"password\"\n            id=\"password\"\n            ref={register({\n              required: \"You must provide a password.\",\n              minLength: {\n                message: \"Your password must be at least 6 characters\",\n                value: 6,\n              },\n            })}\n            placeholder=\"Choose a password\"\n          />\n          {errors.password && <span>{errors.password.message}</span>}\n        </div>\n        <div>\n          <label htmlFor=\"save_last_seen\">\n            <input\n              type=\"checkbox\"\n              id=\"save_last_seen\"\n              name=\"save_last_seen\"\n              ref={register}\n            />\n            Show as online to other users\n          </label>\n        </div>\n        <div>\n          <button type=\"submit\" disabled={isSubmitting}>\n            Create account\n          </button>\n        </div>\n      </form>\n    </body>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}