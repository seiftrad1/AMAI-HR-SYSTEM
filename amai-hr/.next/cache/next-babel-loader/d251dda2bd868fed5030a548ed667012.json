{"ast":null,"code":"import useSWR, { mutate } from \"swr\";\nimport formidable from \"formidable\";\nimport fs from \"fs\";\nimport { hasuraAdminClient, gql } from \"../../lib/hasura-admin-client\";\nimport { hasuraUserClient } from \"../../lib/hasura-user-client\";\nexport const config = {\n  api: {\n    bodyParser: false\n  }\n};\n\nconst post = async (req, res) => {\n  const {\n    id\n  } = req.body;\n  const form = new formidable.IncomingForm();\n  form.parse(req, async function (err, fields, files) {\n    await saveFile(files.file, id.id);\n    return res.status(201).send(\"\");\n  });\n};\n\nconst saveFile = async (file, id) => {\n  const hasura = hasuraUserClient();\n  const data = fs.readFileSync(file.path);\n  fs.writeFileSync(`./public/${file.name}`, data);\n  await fs.unlinkSync(file.path);\n  const Avatar = file.name;\n  const UploadImage = gql`\n    mutation MyMutation($Avatar: String!, $id: Int!) {\n      update_User_by_pk(pk_columns: { id: $id }, _set: { Avatar: $Avatar }) {\n        Avatar\n        Name\n      }\n    }\n  `;\n\n  try {\n    await hasura.request(UploadImage, {\n      id,\n      Avatar\n    });\n    mutate();\n  } catch (error) {\n    console.error(error);\n  }\n\n  return;\n};\n\nexport default ((req, res) => {\n  req.method === \"POST\" ? post(req, res) : req.method === \"PUT\" ? console.log(\"PUT\") : req.method === \"DELETE\" ? console.log(\"DELETE\") : req.method === \"GET\" ? console.log(\"GET\") : res.status(404).send(\"\");\n});","map":{"version":3,"sources":["C:/Users/msdtt/OneDrive/Documents/amai_hr_next_js_hasura/amai-hr/pages/api/file.js"],"names":["useSWR","mutate","formidable","fs","hasuraAdminClient","gql","hasuraUserClient","config","api","bodyParser","post","req","res","id","body","form","IncomingForm","parse","err","fields","files","saveFile","file","status","send","hasura","data","readFileSync","path","writeFileSync","name","unlinkSync","Avatar","UploadImage","request","error","console","method","log"],"mappings":"AAAA,OAAOA,MAAP,IAAiBC,MAAjB,QAA+B,KAA/B;AAEA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,EAAP,MAAe,IAAf;AACA,SAASC,iBAAT,EAA4BC,GAA5B,QAAuC,+BAAvC;AACA,SAASC,gBAAT,QAAiC,8BAAjC;AAEA,OAAO,MAAMC,MAAM,GAAG;AACpBC,EAAAA,GAAG,EAAE;AACHC,IAAAA,UAAU,EAAE;AADT;AADe,CAAf;;AAMP,MAAMC,IAAI,GAAG,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AAC/B,QAAM;AAAEC,IAAAA;AAAF,MAASF,GAAG,CAACG,IAAnB;AACA,QAAMC,IAAI,GAAG,IAAIb,UAAU,CAACc,YAAf,EAAb;AACAD,EAAAA,IAAI,CAACE,KAAL,CAAWN,GAAX,EAAgB,gBAAgBO,GAAhB,EAAqBC,MAArB,EAA6BC,KAA7B,EAAoC;AAClD,UAAMC,QAAQ,CAACD,KAAK,CAACE,IAAP,EAAaT,EAAE,CAACA,EAAhB,CAAd;AACA,WAAOD,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAArB,CAAP;AACD,GAHD;AAID,CAPD;;AASA,MAAMH,QAAQ,GAAG,OAAOC,IAAP,EAAaT,EAAb,KAAoB;AACnC,QAAMY,MAAM,GAAGnB,gBAAgB,EAA/B;AACA,QAAMoB,IAAI,GAAGvB,EAAE,CAACwB,YAAH,CAAgBL,IAAI,CAACM,IAArB,CAAb;AACAzB,EAAAA,EAAE,CAAC0B,aAAH,CAAkB,YAAWP,IAAI,CAACQ,IAAK,EAAvC,EAA0CJ,IAA1C;AACA,QAAMvB,EAAE,CAAC4B,UAAH,CAAcT,IAAI,CAACM,IAAnB,CAAN;AACA,QAAMI,MAAM,GAAGV,IAAI,CAACQ,IAApB;AACA,QAAMG,WAAW,GAAG5B,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,GAPE;;AAQA,MAAI;AACF,UAAMoB,MAAM,CAACS,OAAP,CAAeD,WAAf,EAA4B;AAAEpB,MAAAA,EAAF;AAAMmB,MAAAA;AAAN,KAA5B,CAAN;AACA/B,IAAAA,MAAM;AACP,GAHD,CAGE,OAAOkC,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD;;AACD;AACD,CArBD;;AAuBA,gBAAe,CAACxB,GAAD,EAAMC,GAAN,KAAc;AAC3BD,EAAAA,GAAG,CAAC0B,MAAJ,KAAe,MAAf,GACI3B,IAAI,CAACC,GAAD,EAAMC,GAAN,CADR,GAEID,GAAG,CAAC0B,MAAJ,KAAe,KAAf,GACAD,OAAO,CAACE,GAAR,CAAY,KAAZ,CADA,GAEA3B,GAAG,CAAC0B,MAAJ,KAAe,QAAf,GACAD,OAAO,CAACE,GAAR,CAAY,QAAZ,CADA,GAEA3B,GAAG,CAAC0B,MAAJ,KAAe,KAAf,GACAD,OAAO,CAACE,GAAR,CAAY,KAAZ,CADA,GAEA1B,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAArB,CARJ;AASD,CAVD","sourcesContent":["import useSWR, { mutate } from \"swr\";\r\n\r\nimport formidable from \"formidable\";\r\nimport fs from \"fs\";\r\nimport { hasuraAdminClient, gql } from \"../../lib/hasura-admin-client\";\r\nimport { hasuraUserClient } from \"../../lib/hasura-user-client\";\r\n\r\nexport const config = {\r\n  api: {\r\n    bodyParser: false,\r\n  },\r\n};\r\n\r\nconst post = async (req, res) => {\r\n  const { id } = req.body;\r\n  const form = new formidable.IncomingForm();\r\n  form.parse(req, async function (err, fields, files) {\r\n    await saveFile(files.file, id.id);\r\n    return res.status(201).send(\"\");\r\n  });\r\n};\r\n\r\nconst saveFile = async (file, id) => {\r\n  const hasura = hasuraUserClient();\r\n  const data = fs.readFileSync(file.path);\r\n  fs.writeFileSync(`./public/${file.name}`, data);\r\n  await fs.unlinkSync(file.path);\r\n  const Avatar = file.name;\r\n  const UploadImage = gql`\r\n    mutation MyMutation($Avatar: String!, $id: Int!) {\r\n      update_User_by_pk(pk_columns: { id: $id }, _set: { Avatar: $Avatar }) {\r\n        Avatar\r\n        Name\r\n      }\r\n    }\r\n  `;\r\n  try {\r\n    await hasura.request(UploadImage, { id, Avatar });\r\n    mutate();\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n  return;\r\n};\r\n\r\nexport default (req, res) => {\r\n  req.method === \"POST\"\r\n    ? post(req, res)\r\n    : req.method === \"PUT\"\r\n    ? console.log(\"PUT\")\r\n    : req.method === \"DELETE\"\r\n    ? console.log(\"DELETE\")\r\n    : req.method === \"GET\"\r\n    ? console.log(\"GET\")\r\n    : res.status(404).send(\"\");\r\n};\r\n"]},"metadata":{},"sourceType":"module"}