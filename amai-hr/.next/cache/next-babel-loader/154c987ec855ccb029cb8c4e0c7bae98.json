{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _templateObject,\n    _templateObject2,\n    _templateObject3,\n    _templateObject4,\n    _jsxFileName = \"C:\\\\Users\\\\msdtt\\\\OneDrive\\\\Documents\\\\amai_hr_next_js_hasura\\\\amai-hr\\\\pages\\\\taskas\\\\[id].js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useRouter } from \"next/router\";\nimport useSWR from \"swr\";\nimport { useForm } from \"react-hook-form\";\nimport Link from \"next/link\";\nimport { gql, hasuraUserClient } from \"../../lib/hasura-user-client\";\nimport { useAuthState, useAuthDispatch } from \"../../context/auth\";\nimport { useEffect } from \"react\";\nimport { TextField } from \"@material-ui/core\";\nimport { Form } from \"react-bootstrap\";\nimport { useState } from \"react\";\nvar today = new Date().toISOString().substring(0, 19);\nvar GetProjectByID = gql(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  query GetProjectByID($id: Int!) {\\n    Project_by_pk(id: $id) {\\n      id\\n      Description\\n      created_at\\n      Title\\n      delivery_date\\n      assigned\\n      contact_date\\n      company_name\\n      type\\n      file\\n      income\\n    }\\n  }\\n\"])));\nvar GetProjectByUser = gql(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n  query User($id: Int!) {\\n    User(where: { project_id: { _is_null: true } }) {\\n      id\\n      Name\\n    }\\n  }\\n\"])));\nvar UpdateProject = gql(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n  mutation update_Candidate_by_pk(\\n    $id: Int!\\n    $Title: String!\\n    $Description: String!\\n    $company_name: String!\\n    $type: String!\\n    $income: String!\\n  ) {\\n    update_Project_by_pk(\\n      pk_columns: { id: $id }\\n      _set: {\\n        Title: $Title\\n        Description: $Description\\n        company_name: $company_name\\n        type: $type\\n        income: $income\\n      }\\n    ) {\\n      id\\n      Title\\n      Description\\n      created_at\\n      delivery_date\\n      assigned\\n      contact_date\\n      company_name\\n      type\\n      income\\n    }\\n  }\\n\"])));\nexport var __N_SSG = true;\nexport default function TaskEdit(_ref) {\n  _s();\n\n  var initialData = _ref.initialData;\n  var hasura = hasuraUserClient();\n\n  var _useRouter = useRouter(),\n      query = _useRouter.query;\n\n  var router = useRouter();\n\n  var _useAuthState = useAuthState(),\n      isAuthenticated = _useAuthState.isAuthenticated,\n      user = _useAuthState.user;\n\n  var _useState = useState(null),\n      File = _useState[0],\n      setFile = _useState[1];\n\n  var _useState2 = useState(false),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var _useState3 = useState(null),\n      createObjectURL = _useState3[0],\n      setCreateObjectURL = _useState3[1];\n\n  useEffect(function () {\n    if (!isAuthenticated) router.push(\"/\");\n  }, [isAuthenticated]);\n  var id = query.id;\n\n  var _useForm = useForm(),\n      handleSubmit = _useForm.handleSubmit,\n      register = _useForm.register,\n      control = _useForm.control,\n      errors = _useForm.errors,\n      isSubmitting = _useForm.formState.isSubmitting,\n      defaultValues = _extends({}, _useForm.defaultValues);\n\n  var _useSWR = useSWR([GetProjectByID, id], function (query, id) {\n    return hasura.request(query, {\n      id: id\n    });\n  }, {\n    initialData: initialData,\n    revalidateOnMount: true\n  }),\n      data = _useSWR.data,\n      mutate = _useSWR.mutate;\n\n  var uploadFileToClient = function uploadFileToClient(event) {\n    if (event.target.files && event.target.files[0]) {\n      var i = event.target.files[0];\n      setFile(i);\n      setState(true);\n      setCreateObjectURL(URL.createObjectURL(i));\n    }\n  };\n\n  var uploadFileToServer = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var body, response, UploadFile, _yield$hasura$request, update_Project_by_pk;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              body = new FormData();\n              body.append(\"file\", File);\n              _context.next = 4;\n              return fetch(\"/api/file/\", {\n                method: \"POST\",\n                body: body\n              });\n\n            case 4:\n              response = _context.sent;\n              UploadFile = gql(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"\\n      mutation MyMutation($file: String!, $id: Int!) {\\n        update_Project_by_pk(pk_columns: { id: $id }, _set: { file: $file }) {\\n          file\\n        }\\n      }\\n    \"])));\n              _context.prev = 6;\n              _context.next = 9;\n              return hasura.request(UploadFile, {\n                id: id,\n                file: File.name\n              });\n\n            case 9:\n              _yield$hasura$request = _context.sent;\n              update_Project_by_pk = _yield$hasura$request.update_Project_by_pk;\n              window.location.reload();\n              _context.next = 17;\n              break;\n\n            case 14:\n              _context.prev = 14;\n              _context.t0 = _context[\"catch\"](6);\n              console.error(_context.t0);\n\n            case 17:\n              return _context.abrupt(\"return\");\n\n            case 18:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[6, 14]]);\n    }));\n\n    return function uploadFileToServer() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var onSubmit = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_ref3) {\n      var Title, Description, company_name, income, type, _id, _yield$hasura$request2, update_Project_by_pk;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              Title = _ref3.Title, Description = _ref3.Description, company_name = _ref3.company_name, income = _ref3.income, type = _ref3.type;\n              _context2.prev = 1;\n              _id = data.Project_by_pk.id;\n              console.log(_id);\n              _context2.next = 6;\n              return hasura.request(UpdateProject, {\n                id: _id,\n                Title: Title,\n                Description: Description,\n                company_name: company_name,\n                income: income,\n                type: type\n              });\n\n            case 6:\n              _yield$hasura$request2 = _context2.sent;\n              update_Project_by_pk = _yield$hasura$request2.update_Project_by_pk;\n              mutate(_objectSpread(_objectSpread({}, data), update_Project_by_pk));\n              router.push(\"/Project/List\");\n              _context2.next = 15;\n              break;\n\n            case 12:\n              _context2.prev = 12;\n              _context2.t0 = _context2[\"catch\"](1);\n              console.log(_context2.t0);\n\n            case 15:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[1, 12]]);\n    }));\n\n    return function onSubmit(_x) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var addproject = function addproject() {\n    var pathname = \"/Project/List\";\n    location.replace(pathname);\n  };\n\n  return __jsx(\"div\", {\n    className: \"page-content-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"page-content\",\n    style: {\n      minHeight: 1500\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    \"class\": \"profile-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 9\n    }\n  }, \"test\")));\n}\n\n_s(TaskEdit, \"6Y8ETyvv4evJZw9LU05TnmRV4dM=\", false, function () {\n  return [useRouter, useRouter, useAuthState, useForm, useSWR];\n});\n\n_c = TaskEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskEdit\");","map":{"version":3,"sources":["C:/Users/msdtt/OneDrive/Documents/amai_hr_next_js_hasura/amai-hr/pages/taskas/[id].js"],"names":["useRouter","useSWR","useForm","Link","gql","hasuraUserClient","useAuthState","useAuthDispatch","useEffect","TextField","Form","useState","today","Date","toISOString","substring","GetProjectByID","GetProjectByUser","UpdateProject","TaskEdit","initialData","hasura","query","router","isAuthenticated","user","File","setFile","state","setState","createObjectURL","setCreateObjectURL","push","id","handleSubmit","register","control","errors","isSubmitting","formState","defaultValues","request","revalidateOnMount","data","mutate","uploadFileToClient","event","target","files","i","URL","uploadFileToServer","body","FormData","append","fetch","method","response","UploadFile","file","name","update_Project_by_pk","window","location","reload","console","error","onSubmit","Title","Description","company_name","income","type","Project_by_pk","log","addproject","pathname","replace","minHeight"],"mappings":"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","sourcesContent":["import { useRouter } from \"next/router\";\r\nimport useSWR from \"swr\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport Link from \"next/link\";\r\nimport { gql, hasuraUserClient } from \"../../lib/hasura-user-client\";\r\nimport { useAuthState, useAuthDispatch } from \"../../context/auth\";\r\nimport { useEffect } from \"react\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { useState } from \"react\";\r\n\r\nconst today = new Date().toISOString().substring(0, 19);\r\n\r\nconst getProjectsIds = gql`\r\n  {\r\n    Project {\r\n      id\r\n      Description\r\n      created_at\r\n      Title\r\n      delivery_date\r\n      assigned\r\n      contact_date\r\n      company_name\r\n      type\r\n      file\r\n      income\r\n    }\r\n  }\r\n`;\r\n\r\nconst GetProjectByID = gql`\r\n  query GetProjectByID($id: Int!) {\r\n    Project_by_pk(id: $id) {\r\n      id\r\n      Description\r\n      created_at\r\n      Title\r\n      delivery_date\r\n      assigned\r\n      contact_date\r\n      company_name\r\n      type\r\n      file\r\n      income\r\n    }\r\n  }\r\n`;\r\nconst GetProjectByUser = gql`\r\n  query User($id: Int!) {\r\n    User(where: { project_id: { _is_null: true } }) {\r\n      id\r\n      Name\r\n    }\r\n  }\r\n`;\r\nexport const getStaticPaths = async () => {\r\n  const hasura = hasuraUserClient();\r\n\r\n  const { Project } = await hasura.request(getProjectsIds);\r\n\r\n  return {\r\n    paths: Project.map(({ id }) => ({\r\n      params: {\r\n        id: id.toString(),\r\n      },\r\n    })),\r\n    fallback: false,\r\n  };\r\n};\r\n\r\nexport const getStaticProps = async ({ params }) => {\r\n  const hasura = hasuraUserClient();\r\n  const { id } = params;\r\n\r\n  const initialData = await hasura.request(GetProjectByID, { id });\r\n\r\n  return {\r\n    props: {\r\n      initialData,\r\n    },\r\n    revalidate: 1,\r\n  };\r\n};\r\nconst UpdateProject = gql`\r\n  mutation update_Candidate_by_pk(\r\n    $id: Int!\r\n    $Title: String!\r\n    $Description: String!\r\n    $company_name: String!\r\n    $type: String!\r\n    $income: String!\r\n  ) {\r\n    update_Project_by_pk(\r\n      pk_columns: { id: $id }\r\n      _set: {\r\n        Title: $Title\r\n        Description: $Description\r\n        company_name: $company_name\r\n        type: $type\r\n        income: $income\r\n      }\r\n    ) {\r\n      id\r\n      Title\r\n      Description\r\n      created_at\r\n      delivery_date\r\n      assigned\r\n      contact_date\r\n      company_name\r\n      type\r\n      income\r\n    }\r\n  }\r\n`;\r\nexport default function TaskEdit({ initialData }) {\r\n  const hasura = hasuraUserClient();\r\n  const { query } = useRouter();\r\n  const router = useRouter();\r\n  const { isAuthenticated, user } = useAuthState();\r\n  const [File, setFile] = useState(null);\r\n  const [state, setState] = useState(false);\r\n\r\n  const [createObjectURL, setCreateObjectURL] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (!isAuthenticated) router.push(\"/\");\r\n  }, [isAuthenticated]);\r\n\r\n  const { id } = query;\r\n  const {\r\n    handleSubmit,\r\n    register,\r\n    control,\r\n    errors,\r\n    formState: { isSubmitting },\r\n    defaultValues: { ...defaultValues },\r\n  } = useForm();\r\n  const { data, mutate } = useSWR(\r\n    [GetProjectByID, id],\r\n    (query, id) => hasura.request(query, { id }),\r\n    {\r\n      initialData,\r\n      revalidateOnMount: true,\r\n    }\r\n  );\r\n  const uploadFileToClient = (event) => {\r\n    if (event.target.files && event.target.files[0]) {\r\n      const i = event.target.files[0];\r\n      setFile(i);\r\n      setState(true);\r\n      setCreateObjectURL(URL.createObjectURL(i));\r\n    }\r\n  };\r\n  const uploadFileToServer = async () => {\r\n    const body = new FormData();\r\n    body.append(\"file\", File);\r\n    const response = await fetch(\"/api/file/\", {\r\n      method: \"POST\",\r\n      body,\r\n    });\r\n\r\n    const UploadFile = gql`\r\n      mutation MyMutation($file: String!, $id: Int!) {\r\n        update_Project_by_pk(pk_columns: { id: $id }, _set: { file: $file }) {\r\n          file\r\n        }\r\n      }\r\n    `;\r\n    try {\r\n      const { update_Project_by_pk } = await hasura.request(UploadFile, {\r\n        id,\r\n        file: File.name,\r\n      });\r\n      window.location.reload();\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n    return;\r\n  };\r\n  const onSubmit = async ({\r\n    Title,\r\n    Description,\r\n    company_name,\r\n    income,\r\n    type,\r\n  }) => {\r\n    try {\r\n      const id = data.Project_by_pk.id;\r\n      console.log(id);\r\n      const { update_Project_by_pk } = await hasura.request(UpdateProject, {\r\n        id,\r\n        Title,\r\n        Description,\r\n        company_name,\r\n        income,\r\n        type,\r\n      });\r\n\r\n      mutate({\r\n        ...data,\r\n        ...update_Project_by_pk,\r\n      });\r\n      router.push(`/Project/List`);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  const addproject = () => {\r\n    const pathname = `/Project/List`;\r\n    location.replace(pathname);\r\n  };\r\n  return (\r\n    <div className=\"page-content-wrapper\">\r\n      <div className=\"page-content\" style={{ minHeight: 1500 }}>\r\n        <div class=\"profile-content\">test</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}