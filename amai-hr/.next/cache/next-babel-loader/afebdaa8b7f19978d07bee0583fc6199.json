{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\msdtt\\\\OneDrive\\\\Documents\\\\amai_hr_next_js_hasura\\\\amai-hr\\\\pages\\\\_app.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport Layout from \"../pages/Components/Layout\";\nimport { AuthProvider } from \"../context/auth\";\nimport LastSeen from \"./Components/LastSeen\";\nimport \"../public/assets/pages/css/todo.css\";\nimport \"../styles/global-styles.css\";\nimport Router from \"next/router\";\nimport Spinner from \"react-spinner-material\";\nimport styled from \"styled-components\";\nimport React from \"react\";\nconst Dot = styled.span`\n  margin: 0;\n  position: absolute;\n  top: 10%;\n  left: 60%;\n  margin-right: -50%;\n`;\nconst getNotifications = gql`\n  query MyQuery {\n    notification(where: { user_id: { _is_null: true } }) {\n      description\n      name\n      seen\n    }\n    notification_aggregate(where: { user_id: { _is_null: true } }) {\n      aggregate {\n        count\n      }\n    }\n  }\n`;\nexport const getStaticProps = async () => {\n  const hasura = hasuraUserClient();\n  const datar = await hasura.request(getNotifications);\n  return {\n    props: {\n      datar\n    },\n    revalidate: 1\n  };\n};\nexport default function MyApp({\n  Component,\n  pageProps,\n  datar\n}) {\n  const [loading, setLoading] = React.useState(false);\n  React.useEffect(() => {\n    const start = () => {\n      setLoading(true);\n    };\n\n    const end = () => {\n      setLoading(false);\n    };\n\n    Router.events.on(\"routeChangeStart\", start);\n    Router.events.on(\"routeChangeComplete\", end);\n    Router.events.on(\"routeChangeError\", end);\n    return () => {\n      Router.events.off(\"routeChangeStart\", start);\n      Router.events.off(\"routeChangeComplete\", end);\n      Router.events.off(\"routeChangeError\", end);\n    };\n  }, []);\n  return __jsx(React.Fragment, null, \" \", \")\", loading ? __jsx(AuthProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, __jsx(LastSeen, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, __jsx(Dot, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }\n  }, __jsx(Spinner, {\n    size: 350,\n    spinnerColor: \"red\",\n    spinnerWidth: 2,\n    visible: true,\n    color: \"#3498DB\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }), \" \")))) : __jsx(AuthProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, __jsx(LastSeen, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, __jsx(Component, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  })), \" \"))));\n}","map":{"version":3,"sources":["C:/Users/msdtt/OneDrive/Documents/amai_hr_next_js_hasura/amai-hr/pages/_app.js"],"names":["Layout","AuthProvider","LastSeen","Router","Spinner","styled","React","Dot","span","getNotifications","gql","getStaticProps","hasura","hasuraUserClient","datar","request","props","revalidate","MyApp","Component","pageProps","loading","setLoading","useState","useEffect","start","end","events","on","off"],"mappings":"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","sourcesContent":["import Layout from \"../pages/Components/Layout\";\nimport { AuthProvider } from \"../context/auth\";\nimport LastSeen from \"./Components/LastSeen\";\nimport \"../public/assets/pages/css/todo.css\";\nimport \"../styles/global-styles.css\";\nimport Router from \"next/router\";\nimport Spinner from \"react-spinner-material\";\nimport styled from \"styled-components\";\nimport React from \"react\";\nconst Dot = styled.span`\n  margin: 0;\n  position: absolute;\n  top: 10%;\n  left: 60%;\n  margin-right: -50%;\n`;\nconst getNotifications = gql`\n  query MyQuery {\n    notification(where: { user_id: { _is_null: true } }) {\n      description\n      name\n      seen\n    }\n    notification_aggregate(where: { user_id: { _is_null: true } }) {\n      aggregate {\n        count\n      }\n    }\n  }\n`;\nexport const getStaticProps = async () => {\n  const hasura = hasuraUserClient();\n  const datar = await hasura.request(getNotifications);\n\n  return {\n    props: {\n      datar,\n    },\n    revalidate: 1,\n  };\n};\nexport default function MyApp({ Component, pageProps, datar }) {\n  const [loading, setLoading] = React.useState(false);\n  React.useEffect(() => {\n    const start = () => {\n      setLoading(true);\n    };\n    const end = () => {\n      setLoading(false);\n    };\n    Router.events.on(\"routeChangeStart\", start);\n    Router.events.on(\"routeChangeComplete\", end);\n    Router.events.on(\"routeChangeError\", end);\n    return () => {\n      Router.events.off(\"routeChangeStart\", start);\n      Router.events.off(\"routeChangeComplete\", end);\n      Router.events.off(\"routeChangeError\", end);\n    };\n  }, []);\n\n  return (\n    <>\n      {\" \"}\n      )\n      {loading ? (\n        <AuthProvider>\n          <LastSeen>\n            <Layout>\n              <Dot>\n                <Spinner\n                  size={350}\n                  spinnerColor={\"red\"}\n                  spinnerWidth={2}\n                  visible={true}\n                  color={\"#3498DB\"}\n                />{\" \"}\n              </Dot>\n            </Layout>\n          </LastSeen>\n        </AuthProvider>\n      ) : (\n        <AuthProvider>\n          <LastSeen>\n            <Layout>\n              <Component {...pageProps} />{\" \"}\n            </Layout>\n          </LastSeen>\n        </AuthProvider>\n      )}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}