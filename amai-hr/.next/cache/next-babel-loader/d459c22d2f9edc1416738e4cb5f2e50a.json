{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _templateObject,\n    _templateObject2,\n    _templateObject3,\n    _jsxFileName = \"C:\\\\Users\\\\msdtt\\\\OneDrive\\\\Documents\\\\amai_hr_next_js_hasura\\\\amai-hr\\\\pages\\\\Task\\\\[id].js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport useSWR, { mutate } from \"swr\";\nimport { useForm } from \"react-hook-form\";\nimport gql from \"graphql-tag\";\nimport { useRouter } from \"next/router\";\nimport { hasuraUserClient } from \"../../lib/hasura-user-client\";\nimport { useAuthState } from \"../../context/auth\";\nvar from = new Date().toISOString();\nvar GetCandidats = gql(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  query MyQuery($id: Int!) {\\n    Todo(where: { user_id: { _eq: $id } }) {\\n      id\\n      Name\\n      user_id\\n      Description\\n      Completed\\n    }\\n  }\\n\"])));\nvar UpdateCompleted = gql(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n  mutation MyMutation($id: Int!) {\\n    update_Todo_by_pk(pk_columns: { id: $id }, _set: { Completed: true }) {\\n      Completed\\n    }\\n  }\\n\"])));\nexport var __N_SSG = true;\nexport default function Task(_ref) {\n  _s();\n\n  var initialData = _ref.initialData;\n  var hasura = hasuraUserClient();\n\n  var _useRouter = useRouter(),\n      query = _useRouter.query;\n\n  var id = query.id;\n\n  var _useSWR = useSWR([GetCandidats, id], function (query, id) {\n    return hasura.request(query);\n  }, {\n    initialData: initialData,\n    revalidateOnMount: true\n  }),\n      data = _useSWR.data;\n\n  var router = useRouter();\n\n  var _useForm = useForm(),\n      handleSubmit = _useForm.handleSubmit,\n      register = _useForm.register,\n      control = _useForm.control,\n      errors = _useForm.errors,\n      isSubmitting = _useForm.formState.isSubmitting;\n\n  var Complete = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {\n      var id, _yield$hasura$request, update_Todo_by_pk;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              id = _ref2.id;\n              console.log(id);\n              _context.prev = 2;\n              _context.next = 5;\n              return hasura.request(UpdateCompleted, {\n                id: id\n              });\n\n            case 5:\n              _yield$hasura$request = _context.sent;\n              update_Todo_by_pk = _yield$hasura$request.update_Todo_by_pk;\n              _context.next = 12;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](2);\n              console.log(_context.t0);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 9]]);\n    }));\n\n    return function Complete(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var deleteTodo = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_ref4) {\n      var id, query;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              id = _ref4.id;\n              query = gql(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n      mutation delete_Todo($id: Int!) {\\n        delete_Todo(where: { id: { _eq: $id } }) {\\n          affected_rows\\n        }\\n      }\\n    \"])));\n              _context2.prev = 2;\n              _context2.next = 5;\n              return hasura.request(query, {\n                id: id\n              });\n\n            case 5:\n              mutate();\n              _context2.next = 11;\n              break;\n\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](2);\n              console.error(_context2.t0);\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[2, 8]]);\n    }));\n\n    return function deleteTodo(_x2) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  var onSubmit = /*#__PURE__*/function () {\n    var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(_ref6) {\n      var Description, Name, user_id, _yield$hasura$request2, insert_Todo_one;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              Description = _ref6.Description, Name = _ref6.Name, user_id = _ref6.user_id;\n              console.log(from);\n              _context3.prev = 2;\n              _context3.next = 5;\n              return hasura.request(InsertTask, {\n                Description: Description,\n                from: from,\n                Name: Name,\n                user_id: user_id\n              });\n\n            case 5:\n              _yield$hasura$request2 = _context3.sent;\n              insert_Todo_one = _yield$hasura$request2.insert_Todo_one;\n              window.location.reload();\n              _context3.next = 13;\n              break;\n\n            case 10:\n              _context3.prev = 10;\n              _context3.t0 = _context3[\"catch\"](2);\n              console.log(_context3.t0);\n\n            case 13:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[2, 10]]);\n    }));\n\n    return function onSubmit(_x3) {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(\"div\", {\n    className: \"page-content-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 5\n    }\n  }, \" \", __jsx(\"div\", {\n    className: \"page-content\",\n    style: {\n      minHeight: 1500\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    \"class\": \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    \"class\": \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    \"class\": \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    \"class\": \"card card-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    \"class\": \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  }, \" \", __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 19\n    }\n  }, __jsx(\"div\", {\n    \"class\": \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 21\n    }\n  }, __jsx(\"label\", {\n    \"class\": \"control-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 23\n    }\n  }, \"Name\"), __jsx(\"input\", {\n    name: \"Name\",\n    id: \"Name\",\n    type: \"text\",\n    placeholder: \"Todo Name\",\n    \"class\": \"form-control\",\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 23\n    }\n  }), \" \"), __jsx(\"div\", {\n    \"class\": \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 21\n    }\n  }, __jsx(\"label\", {\n    \"class\": \"control-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 23\n    }\n  }, \"Description\"), __jsx(\"textarea\", {\n    name: \"Description\",\n    id: \"Description\",\n    type: \"textarea\",\n    placeholder: \"Description\",\n    \"class\": \"form-control\",\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 23\n    }\n  }), \" \"), __jsx(\"div\", {\n    \"class\": \"margiv-top-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 21\n    }\n  }, __jsx(\"button\", {\n    type: \"submit\",\n    \"class\": \"btn green\",\n    disabled: isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 23\n    }\n  }, \" \", \"Save Changes\", \" \"), __jsx(\"a\", {\n    href: \"#\",\n    \"class\": \"btn default\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 23\n    }\n  }, \" \", \"Cancel\", \" \"))))))))));\n}\n\n_s(Task, \"kF6IRYe2QPDZM7onhSGAzetd+UM=\", false, function () {\n  return [useRouter, useSWR, useRouter, useForm];\n});\n\n_c = Task;\n\nvar _c;\n\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"sources":["C:/Users/msdtt/OneDrive/Documents/amai_hr_next_js_hasura/amai-hr/pages/Task/[id].js"],"names":["useSWR","mutate","useForm","gql","useRouter","hasuraUserClient","useAuthState","from","Date","toISOString","GetCandidats","UpdateCompleted","Task","initialData","hasura","query","id","request","revalidateOnMount","data","router","handleSubmit","register","control","errors","isSubmitting","formState","Complete","console","log","update_Todo_by_pk","deleteTodo","error","onSubmit","Description","Name","user_id","InsertTask","insert_Todo_one","window","location","reload","minHeight"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,MAAP,IAAiBC,MAAjB,QAA+B,KAA/B;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,gBAAT,QAAiC,8BAAjC;AACA,SAASC,YAAT,QAA6B,oBAA7B;AACA,IAAMC,IAAI,GAAG,IAAIC,IAAJ,GAAWC,WAAX,EAAb;AAQA,IAAMC,YAAY,GAAGP,GAAH,wOAAlB;AAWA,IAAMQ,eAAe,GAAGR,GAAH,uNAArB;;AAqCA,eAAe,SAASS,IAAT,OAA+B;AAAA;;AAAA,MAAfC,WAAe,QAAfA,WAAe;AAC5C,MAAMC,MAAM,GAAGT,gBAAgB,EAA/B;;AACA,mBAAkBD,SAAS,EAA3B;AAAA,MAAQW,KAAR,cAAQA,KAAR;;AACA,MAAQC,EAAR,GAAeD,KAAf,CAAQC,EAAR;;AACA,gBAAiBhB,MAAM,CACrB,CAACU,YAAD,EAAeM,EAAf,CADqB,EAGrB,UAACD,KAAD,EAAQC,EAAR;AAAA,WAAeF,MAAM,CAACG,OAAP,CAAeF,KAAf,CAAf;AAAA,GAHqB,EAIrB;AACEF,IAAAA,WAAW,EAAXA,WADF;AAEEK,IAAAA,iBAAiB,EAAE;AAFrB,GAJqB,CAAvB;AAAA,MAAQC,IAAR,WAAQA,IAAR;;AASA,MAAMC,MAAM,GAAGhB,SAAS,EAAxB;;AACA,iBAMIF,OAAO,EANX;AAAA,MACEmB,YADF,YACEA,YADF;AAAA,MAEEC,QAFF,YAEEA,QAFF;AAAA,MAGEC,OAHF,YAGEA,OAHF;AAAA,MAIEC,MAJF,YAIEA,MAJF;AAAA,MAKeC,YALf,YAKEC,SALF,CAKeD,YALf;;AAOA,MAAME,QAAQ;AAAA,yEAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAASX,cAAAA,EAAT,SAASA,EAAT;AACfY,cAAAA,OAAO,CAACC,GAAR,CAAYb,EAAZ;AADe;AAAA;AAAA,qBAGuBF,MAAM,CAACG,OAAP,CAAeN,eAAf,EAAgC;AAClEK,gBAAAA,EAAE,EAAFA;AADkE,eAAhC,CAHvB;;AAAA;AAAA;AAGLc,cAAAA,iBAHK,yBAGLA,iBAHK;AAAA;AAAA;;AAAA;AAAA;AAAA;AAObF,cAAAA,OAAO,CAACC,GAAR;;AAPa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAARF,QAAQ;AAAA;AAAA;AAAA,KAAd;;AAUA,MAAMI,UAAU;AAAA,yEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAASf,cAAAA,EAAT,SAASA,EAAT;AACXD,cAAAA,KADW,GACHZ,GADG;AAAA;AAAA;AAAA,qBAUTW,MAAM,CAACG,OAAP,CAAeF,KAAf,EAAsB;AAAEC,gBAAAA,EAAE,EAAFA;AAAF,eAAtB,CAVS;;AAAA;AAWff,cAAAA,MAAM;AAXS;AAAA;;AAAA;AAAA;AAAA;AAaf2B,cAAAA,OAAO,CAACI,KAAR;;AAbe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAVD,UAAU;AAAA;AAAA;AAAA,KAAhB;;AAgBA,MAAME,QAAQ;AAAA,yEAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAASC,cAAAA,WAAT,SAASA,WAAT,EAAsBC,IAAtB,SAAsBA,IAAtB,EAA4BC,OAA5B,SAA4BA,OAA5B;AACfR,cAAAA,OAAO,CAACC,GAAR,CAAYtB,IAAZ;AADe;AAAA;AAAA,qBAGqBO,MAAM,CAACG,OAAP,CAAeoB,UAAf,EAA2B;AAC3DH,gBAAAA,WAAW,EAAXA,WAD2D;AAE3D3B,gBAAAA,IAAI,EAAJA,IAF2D;AAG3D4B,gBAAAA,IAAI,EAAJA,IAH2D;AAI3DC,gBAAAA,OAAO,EAAPA;AAJ2D,eAA3B,CAHrB;;AAAA;AAAA;AAGLE,cAAAA,eAHK,0BAGLA,eAHK;AAUbC,cAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AAVa;AAAA;;AAAA;AAAA;AAAA;AAYbb,cAAAA,OAAO,CAACC,GAAR;;AAZa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAARI,QAAQ;AAAA;AAAA;AAAA,KAAd;;AAeA,SACE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,GADH,EAEE;AAAK,IAAA,SAAS,EAAC,cAAf;AAA8B,IAAA,KAAK,EAAE;AAAES,MAAAA,SAAS,EAAE;AAAb,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,aAAM,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,aAAM,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,aAAM,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,aAAM,iBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,aAAM,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,GADH,EAEE;AAAM,IAAA,QAAQ,EAAErB,YAAY,CAACY,QAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,aAAM,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,aAAM,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,EAAE,EAAC,MAFL;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,WAAW,EAAC,WAJd;AAKE,aAAM,cALR;AAME,IAAA,GAAG,EAAEX,QANP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EASK,GATL,CADF,EAYE;AAAK,aAAM,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,aAAM,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE;AACE,IAAA,IAAI,EAAC,aADP;AAEE,IAAA,EAAE,EAAC,aAFL;AAGE,IAAA,IAAI,EAAC,UAHP;AAIE,IAAA,WAAW,EAAC,aAJd;AAKE,aAAM,cALR;AAME,IAAA,GAAG,EAAEA,QANP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EASK,GATL,CAZF,EAwBE;AAAK,aAAM,eAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,aAAM,WAFR;AAGE,IAAA,QAAQ,EAAEG,YAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKG,GALH,kBAMe,GANf,CADF,EASE;AAAG,IAAA,IAAI,EAAC,GAAR;AAAY,aAAM,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,GADH,YAES,GAFT,CATF,CAxBF,CAFF,CADF,CADF,CADF,CADF,CADF,CAFF,CADF;AAyDD;;GAvHuBb,I;UAEJR,S,EAEDJ,M,EASFI,S,EAOXF,O;;;KApBkBU,I","sourcesContent":["import useSWR, { mutate } from \"swr\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport gql from \"graphql-tag\";\r\nimport { useRouter } from \"next/router\";\r\nimport { hasuraUserClient } from \"../../lib/hasura-user-client\";\r\nimport { useAuthState } from \"../../context/auth\";\r\nconst from = new Date().toISOString();\r\nconst Todos = gql`\r\n  query MyQuery {\r\n    User {\r\n      id\r\n    }\r\n  }\r\n`;\r\nconst GetCandidats = gql`\r\n  query MyQuery($id: Int!) {\r\n    Todo(where: { user_id: { _eq: $id } }) {\r\n      id\r\n      Name\r\n      user_id\r\n      Description\r\n      Completed\r\n    }\r\n  }\r\n`;\r\nconst UpdateCompleted = gql`\r\n  mutation MyMutation($id: Int!) {\r\n    update_Todo_by_pk(pk_columns: { id: $id }, _set: { Completed: true }) {\r\n      Completed\r\n    }\r\n  }\r\n`;\r\nexport const getStaticPaths = async () => {\r\n  const hasura = hasuraUserClient();\r\n\r\n  const { User } = await hasura.request(Todos);\r\n\r\n  return {\r\n    paths: User.map(({ id }) => ({\r\n      params: {\r\n        id: id.toString(),\r\n      },\r\n    })),\r\n    fallback: false,\r\n  };\r\n};\r\nexport const getStaticProps = async ({ params }) => {\r\n  const hasura = hasuraUserClient();\r\n  const { id } = params;\r\n\r\n  console.log(params);\r\n\r\n  const initialData = await hasura.request(GetCandidats, { id });\r\n\r\n  return {\r\n    props: {\r\n      initialData,\r\n    },\r\n    revalidate: 1,\r\n  };\r\n};\r\n\r\nexport default function Task({ initialData }) {\r\n  const hasura = hasuraUserClient();\r\n  const { query } = useRouter();\r\n  const { id } = query;\r\n  const { data } = useSWR(\r\n    [GetCandidats, id],\r\n\r\n    (query, id) => hasura.request(query),\r\n    {\r\n      initialData,\r\n      revalidateOnMount: true,\r\n    }\r\n  );\r\n  const router = useRouter();\r\n  const {\r\n    handleSubmit,\r\n    register,\r\n    control,\r\n    errors,\r\n    formState: { isSubmitting },\r\n  } = useForm();\r\n  const Complete = async ({ id }) => {\r\n    console.log(id);\r\n    try {\r\n      const { update_Todo_by_pk } = await hasura.request(UpdateCompleted, {\r\n        id,\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  const deleteTodo = async ({ id }) => {\r\n    const query = gql`\r\n      mutation delete_Todo($id: Int!) {\r\n        delete_Todo(where: { id: { _eq: $id } }) {\r\n          affected_rows\r\n        }\r\n      }\r\n    `;\r\n\r\n    try {\r\n      await hasura.request(query, { id });\r\n      mutate();\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  const onSubmit = async ({ Description, Name, user_id }) => {\r\n    console.log(from);\r\n    try {\r\n      const { insert_Todo_one } = await hasura.request(InsertTask, {\r\n        Description,\r\n        from,\r\n        Name,\r\n        user_id,\r\n      });\r\n\r\n      window.location.reload();\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"page-content-wrapper\">\r\n      {\" \"}\r\n      <div className=\"page-content\" style={{ minHeight: 1500 }}>\r\n        <div class=\"container\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n              <div class=\"card card-white\">\r\n                <div class=\"card-body\">\r\n                  {\" \"}\r\n                  <form onSubmit={handleSubmit(onSubmit)}>\r\n                    <div class=\"form-group\">\r\n                      <label class=\"control-label\">Name</label>\r\n                      <input\r\n                        name=\"Name\"\r\n                        id=\"Name\"\r\n                        type=\"text\"\r\n                        placeholder=\"Todo Name\"\r\n                        class=\"form-control\"\r\n                        ref={register}\r\n                      />{\" \"}\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                      <label class=\"control-label\">Description</label>\r\n                      <textarea\r\n                        name=\"Description\"\r\n                        id=\"Description\"\r\n                        type=\"textarea\"\r\n                        placeholder=\"Description\"\r\n                        class=\"form-control\"\r\n                        ref={register}\r\n                      />{\" \"}\r\n                    </div>\r\n\r\n                    <div class=\"margiv-top-10\">\r\n                      <button\r\n                        type=\"submit\"\r\n                        class=\"btn green\"\r\n                        disabled={isSubmitting}\r\n                      >\r\n                        {\" \"}\r\n                        Save Changes{\" \"}\r\n                      </button>\r\n                      <a href=\"#\" class=\"btn default\">\r\n                        {\" \"}\r\n                        Cancel{\" \"}\r\n                      </a>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}