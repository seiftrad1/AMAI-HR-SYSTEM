{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\msdtt\\\\OneDrive\\\\Documents\\\\amai_hr_next_js_hasura\\\\amai-hr\\\\pages\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { gql } from \"graphql-request\";\nimport { useRouter } from \"next/router\";\nimport useSWR from \"swr\";\nimport { hasuraUserClient } from \"../lib/hasura-user-client\";\nimport Layout from \"./Components/Layout\";\nimport FullCalendar from \"@fullcalendar/react\"; // must go before plugins\n\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport \"@fullcalendar/common/main.css\";\nimport \"@fullcalendar/daygrid/main.css\";\nimport { format, parseISO } from \"date-fns\";\nimport \"@fullcalendar/timegrid/main.css\";\nimport \"@fullcalendar/list/main.css\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport listPlugin from \"@fullcalendar/list\";\nimport { useAuthState, useAuthDispatch } from \"../context/auth\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport styled from \"styled-components\";\nconst Dot = styled.span`\n  background-color: #4cd137;\n  position: absolute;\n  right: 10px;\n  bottom: 10px;\n  height: 20px;\n  width: 20px;\n  border: 5px solid white;\n  border-radius: 50%;\n`;\nconst DotAway = styled.span`\n  background-color: #f5c71a;\n  position: absolute;\n  right: 10px;\n  bottom: 10px;\n  height: 20px;\n  width: 20px;\n  border: 5px solid white;\n  border-radius: 50%;\n`;\nconst Users = gql`\n  query MyQuery {\n    User_aggregate {\n      aggregate {\n        count\n      }\n    }\n  }\n`;\nconst GetEvents = gql`\n  query MyQuery {\n    Event {\n      id\n      Title\n      description\n      start_date\n    }\n  }\n`;\nconst Projects = gql`\n  query Query {\n    Project_aggregate {\n      aggregate {\n        count\n      }\n    }\n  }\n`;\nconst Candidats = gql`\n  query Query {\n    Candidate_aggregate(where: { Status: { _eq: 0 } }) {\n      aggregate {\n        count\n      }\n    }\n  }\n`;\nconst GetUsers = gql`\n  {\n    User(order_by: { created_at: asc }) {\n      id\n      Name\n      created_at\n      last_seen\n      Avatar\n      last_seen_url\n    }\n  }\n`;\nexport const getStaticProps = async () => {\n  const hasura = hasuraUserClient();\n  const initialData = await hasura.request(Users);\n  const ProjectData = await hasura.request(Projects);\n  const CandidatsData = await hasura.request(Candidats);\n  const Events = await hasura.request(GetEvents);\n  return {\n    props: {\n      initialData,\n      ProjectData,\n      CandidatsData,\n      Events\n    },\n    revalidate: 1\n  };\n};\nexport default function Home({\n  initialData,\n  ProjectData,\n  CandidatsData,\n  Events\n}) {\n  const hasura = hasuraUserClient();\n  const router = useRouter();\n  const {\n    isAuthenticated\n  } = useAuthState();\n  const {\n    0: loaded,\n    1: setLoaded\n  } = useState(false); ///////////////////////////\n  ///////redirectifnotloggedin\n\n  useEffect(() => {\n    if (!isAuthenticated) {\n      router.push(\"/login\");\n    } else {\n      setLoaded(true);\n    }\n  }, []); ////\n\n  console.log(ProjectData);\n  const {\n    data\n  } = useSWR(Users, query => hasura.request(query), {\n    initialData,\n    revalidateOnMount: true\n  });\n  const {\n    datay\n  } = useSWR(GetUsers, query => hasura.request(query), {\n    initialData,\n    revalidateOnMount: true\n  });\n  const {\n    dataEvents\n  } = useSWR(GetEvents, query => hasura.request(query), {\n    Events,\n    revalidateOnMount: true\n  });\n\n  if (!loaded) {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 12\n      }\n    }); //show nothing or a loader\n  }\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"page-content-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"page-content\",\n    style: {\n      minHeight: 1500\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    class: \"page-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }\n  }, \" Admin Dashboard\"), __jsx(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 11\n    }\n  }, \"statistics, charts, recent events and reports\"), __jsx(\"div\", {\n    class: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    class: \"col-lg-3 col-md-3 col-sm-6 col-xs-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }, __jsx(\"a\", {\n    class: \"dashboard-stat dashboard-stat-v2 blue\",\n    href: \"#\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    class: \"visual\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 17\n    }\n  }, __jsx(\"i\", {\n    class: \"fa fa-comments\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 19\n    }\n  })), __jsx(\"div\", {\n    class: \"details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    class: \"number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 19\n    }\n  }, __jsx(\"span\", {\n    \"data-counter\": \"counterup\",\n    \"data-value\": \"1349\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 21\n    }\n  }, data.User_aggregate.aggregate.count)), __jsx(\"div\", {\n    class: \"desc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 19\n    }\n  }, \" Users \")))), __jsx(\"div\", {\n    class: \"col-lg-3 col-md-3 col-sm-6 col-xs-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }\n  }, __jsx(\"a\", {\n    class: \"dashboard-stat dashboard-stat-v2 red\",\n    href: \"#\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    class: \"visual\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 17\n    }\n  }, __jsx(\"i\", {\n    class: \"fa fa-bar-chart-o\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 19\n    }\n  })), __jsx(\"div\", {\n    class: \"details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    class: \"number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 19\n    }\n  }, __jsx(\"span\", {\n    \"data-counter\": \"counterup\",\n    \"data-value\": \"12,5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 21\n    }\n  }), ProjectData.Project_aggregate.aggregate.count), __jsx(\"div\", {\n    class: \"desc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 19\n    }\n  }, \" Projects \")))), __jsx(\"div\", {\n    class: \"col-lg-3 col-md-3 col-sm-6 col-xs-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }\n  }, __jsx(\"a\", {\n    class: \"dashboard-stat dashboard-stat-v2 green\",\n    href: \"#\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    class: \"visual\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 17\n    }\n  }, __jsx(\"i\", {\n    class: \"fa fa-shopping-cart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 19\n    }\n  })), __jsx(\"div\", {\n    class: \"details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    class: \"number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 19\n    }\n  }, __jsx(\"span\", {\n    \"data-counter\": \"counterup\",\n    \"data-value\": \"549\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 21\n    }\n  }, CandidatsData.Candidate_aggregate.aggregate.count)), __jsx(\"div\", {\n    class: \"desc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 19\n    }\n  }, \" Pending Candidats \")))), __jsx(\"div\", {\n    class: \"col-lg-3 col-md-3 col-sm-6 col-xs-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }\n  }, __jsx(\"a\", {\n    class: \"dashboard-stat dashboard-stat-v2 purple\",\n    href: \"#\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    class: \"visual\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 17\n    }\n  }, __jsx(\"i\", {\n    class: \"fa fa-globe\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 19\n    }\n  })), __jsx(\"div\", {\n    class: \"details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    class: \"number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 19\n    }\n  }, \" \", \"+\", __jsx(\"span\", {\n    \"data-counter\": \"counterup\",\n    \"data-value\": \"89\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 22\n    }\n  }), \"%\", \" \"), __jsx(\"div\", {\n    class: \"desc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 19\n    }\n  }, \" Brand Popularity \")))), \" \"), \" \", __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 11\n    }\n  }, \" \", __jsx(\"div\", {\n    className: \"py-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 13\n    }\n  }, __jsx(\"h1\", {\n    className: \"text-2xl md:text-3xl font-semibold text-primary-500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 15\n    }\n  }, \"Members\")), __jsx(\"div\", {\n    className: \"grid grid-cols-1 gap-x-4 gap-y-8 sm:grid-cols-2 md:grid-cols-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 17\n    }\n  }, \" \", datay.User.map(({\n    created_at,\n    id,\n    last_seen,\n    Name,\n    Avatar,\n    last_seen_url\n  }) => {\n    const formattedJoinedAt = formatRelative(Date.parse(created_at), today, {\n      weekStartsOn: 1\n    });\n    const formattedLastSeen = differenceInMinutes(today, Date.parse(last_seen));\n    const formattedLastSeeninHours = differenceInHours(today, Date.parse(last_seen));\n    const formattedLastSeenindays = differenceInDays(today, Date.parse(last_seen));\n    const isUserOnline = 2 >= formattedLastSeen;\n    return __jsx(\"div\", {\n      key: id,\n      class: \"item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 25\n      }\n    }, __jsx(\"div\", {\n      class: \"item-head\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 27\n      }\n    }, __jsx(\"div\", {\n      class: \"item-details\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 29\n      }\n    }, __jsx(\"span\", {\n      className: \"relative mr-2 md:mr-4 flex items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 31\n      }\n    }, __jsx(\"span\", {\n      className: \"inline-block h-8 w-8 rounded-full overflow-hidden bg-gray-200\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 33\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 35\n      }\n    }, \" \", __jsx(\"span\", {\n      class: \"item-status\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 37\n      }\n    }, isUserOnline ? __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 41\n      }\n    }, \" \", __jsx(Dot, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 43\n      }\n    }), \"Online\") : __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 41\n      }\n    }, \" \", __jsx(DotAway, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 43\n      }\n    }), \"Offline\")), \" \", __jsx(\"div\", {\n      class: \"image_inner_container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 37\n      }\n    }, \" \", Avatar ? __jsx(\"img\", {\n      style: {\n        display: \"inline\",\n        width: 100,\n        height: 100,\n        objectFit: \"cover\"\n      },\n      src: `../${Avatar}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 41\n      }\n    }) : __jsx(\"img\", {\n      style: {\n        display: \"inline\",\n        width: 100,\n        height: 100,\n        objectFit: \"cover\"\n      },\n      src: `../profile.png`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 41\n      }\n    })))), \" \"), __jsx(\"a\", {\n      href: \"\",\n      class: \"item-name primary-link\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 31\n      }\n    }, Name), __jsx(\"span\", {\n      class: \"item-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 31\n      }\n    }, \" \", formattedLastSeen, \" minutes ago\", formattedLastSeeninHours, \" hours\", formattedLastSeenindays, \" days\")), __jsx(\"span\", {\n      class: \"item-status\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 29\n      }\n    }, __jsx(\"span\", {\n      class: \"badge badge-empty badge-success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 31\n      }\n    }), \" \", \"Open\")), __jsx(\"div\", {\n      class: \"item-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 27\n      }\n    }, \" \", \"routing path: \", last_seen_url, \" \"));\n  }))))), __jsx(FullCalendar, {\n    plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin, listPlugin],\n    headerToolbar: {\n      left: \"prev,next today\",\n      center: \"title\",\n      right: \"dayGridMonth,timeGridWeek,timeGridDay,listWeek\"\n    },\n    initialView: \"dayGridMonth\",\n    editable: true,\n    selectable: true,\n    selectMirror: true,\n    dayMaxEvents: true,\n    eventRemove: true,\n    events: Events.Event.map(({\n      id,\n      Title,\n      start_date\n    }) => {\n      return {\n        title: Title,\n        date: start_date\n      };\n    }),\n    eventColor: \"#378006\" // weekends={this.state.weekendsVisible}\n    // initialEvents={INITIAL_EVENTS} // alternatively, use the `events` setting to fetch from a feed\n    // select={this.handleDateSelect}\n    // eventContent={renderEventContent} // custom render function\n    // eventsSet={this.handleEvents} // called after events are initialized/added/changed/removed\n\n    /* you can update a remote database when these fire:\r\n        eventAdd={function(){}}\r\n        eventChange={function(){}}\r\n        */\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 11\n    }\n  }), __jsx(\"div\", {\n    class: \"clearfix\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 11\n    }\n  }))));\n}","map":{"version":3,"sources":["C:/Users/msdtt/OneDrive/Documents/amai_hr_next_js_hasura/amai-hr/pages/index.js"],"names":["gql","useRouter","useSWR","hasuraUserClient","Layout","FullCalendar","dayGridPlugin","format","parseISO","interactionPlugin","timeGridPlugin","listPlugin","useAuthState","useAuthDispatch","useEffect","useState","styled","Dot","span","DotAway","Users","GetEvents","Projects","Candidats","GetUsers","getStaticProps","hasura","initialData","request","ProjectData","CandidatsData","Events","props","revalidate","Home","router","isAuthenticated","loaded","setLoaded","push","console","log","data","query","revalidateOnMount","datay","dataEvents","minHeight","User_aggregate","aggregate","count","Project_aggregate","Candidate_aggregate","User","map","created_at","id","last_seen","Name","Avatar","last_seen_url","formattedJoinedAt","formatRelative","Date","parse","today","weekStartsOn","formattedLastSeen","differenceInMinutes","formattedLastSeeninHours","differenceInHours","formattedLastSeenindays","differenceInDays","isUserOnline","display","width","height","objectFit","left","center","right","Event","Title","start_date","title","date"],"mappings":"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","sourcesContent":["import { gql } from \"graphql-request\";\r\nimport { useRouter } from \"next/router\";\r\nimport useSWR from \"swr\";\r\nimport { hasuraUserClient } from \"../lib/hasura-user-client\";\r\nimport Layout from \"./Components/Layout\";\r\nimport FullCalendar from \"@fullcalendar/react\"; // must go before plugins\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport \"@fullcalendar/common/main.css\";\r\nimport \"@fullcalendar/daygrid/main.css\";\r\nimport { format, parseISO } from \"date-fns\";\r\nimport \"@fullcalendar/timegrid/main.css\";\r\nimport \"@fullcalendar/list/main.css\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\";\r\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\r\nimport listPlugin from \"@fullcalendar/list\";\r\nimport { useAuthState, useAuthDispatch } from \"../context/auth\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Dot = styled.span`\r\n  background-color: #4cd137;\r\n  position: absolute;\r\n  right: 10px;\r\n  bottom: 10px;\r\n  height: 20px;\r\n  width: 20px;\r\n  border: 5px solid white;\r\n  border-radius: 50%;\r\n`;\r\n\r\nconst DotAway = styled.span`\r\n  background-color: #f5c71a;\r\n  position: absolute;\r\n  right: 10px;\r\n  bottom: 10px;\r\n  height: 20px;\r\n  width: 20px;\r\n  border: 5px solid white;\r\n  border-radius: 50%;\r\n`;\r\nconst Users = gql`\r\n  query MyQuery {\r\n    User_aggregate {\r\n      aggregate {\r\n        count\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst GetEvents = gql`\r\n  query MyQuery {\r\n    Event {\r\n      id\r\n      Title\r\n      description\r\n      start_date\r\n    }\r\n  }\r\n`;\r\nconst Projects = gql`\r\n  query Query {\r\n    Project_aggregate {\r\n      aggregate {\r\n        count\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst Candidats = gql`\r\n  query Query {\r\n    Candidate_aggregate(where: { Status: { _eq: 0 } }) {\r\n      aggregate {\r\n        count\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst GetUsers = gql`\r\n  {\r\n    User(order_by: { created_at: asc }) {\r\n      id\r\n      Name\r\n      created_at\r\n      last_seen\r\n      Avatar\r\n      last_seen_url\r\n    }\r\n  }\r\n`;\r\n\r\nexport const getStaticProps = async () => {\r\n  const hasura = hasuraUserClient();\r\n\r\n  const initialData = await hasura.request(Users);\r\n  const ProjectData = await hasura.request(Projects);\r\n  const CandidatsData = await hasura.request(Candidats);\r\n  const Events = await hasura.request(GetEvents);\r\n\r\n  return {\r\n    props: {\r\n      initialData,\r\n      ProjectData,\r\n      CandidatsData,\r\n      Events,\r\n    },\r\n    revalidate: 1,\r\n  };\r\n};\r\n\r\nexport default function Home({\r\n  initialData,\r\n  ProjectData,\r\n  CandidatsData,\r\n  Events,\r\n}) {\r\n  const hasura = hasuraUserClient();\r\n  const router = useRouter();\r\n  const { isAuthenticated } = useAuthState();\r\n  const [loaded, setLoaded] = useState(false);\r\n\r\n  ///////////////////////////\r\n  ///////redirectifnotloggedin\r\n\r\n  useEffect(() => {\r\n    if (!isAuthenticated) {\r\n      router.push(\"/login\");\r\n    } else {\r\n      setLoaded(true);\r\n    }\r\n  }, []);\r\n\r\n  ////\r\n  console.log(ProjectData);\r\n  const { data } = useSWR(Users, (query) => hasura.request(query), {\r\n    initialData,\r\n    revalidateOnMount: true,\r\n  });\r\n  const { datay } = useSWR(GetUsers, (query) => hasura.request(query), {\r\n    initialData,\r\n    revalidateOnMount: true,\r\n  });\r\n\r\n  const { dataEvents } = useSWR(GetEvents, (query) => hasura.request(query), {\r\n    Events,\r\n    revalidateOnMount: true,\r\n  });\r\n  if (!loaded) {\r\n    return <div></div>; //show nothing or a loader\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"page-content-wrapper\">\r\n        <div className=\"page-content\" style={{ minHeight: 1500 }}>\r\n          <h1 class=\"page-title\"> Admin Dashboard</h1>\r\n          <small>statistics, charts, recent events and reports</small>\r\n          <div class=\"row\">\r\n            <div class=\"col-lg-3 col-md-3 col-sm-6 col-xs-12\">\r\n              <a class=\"dashboard-stat dashboard-stat-v2 blue\" href=\"#\">\r\n                <div class=\"visual\">\r\n                  <i class=\"fa fa-comments\"></i>\r\n                </div>\r\n                <div class=\"details\">\r\n                  <div class=\"number\">\r\n                    <span data-counter=\"counterup\" data-value=\"1349\">\r\n                      {data.User_aggregate.aggregate.count}\r\n                    </span>\r\n                  </div>\r\n                  <div class=\"desc\"> Users </div>\r\n                </div>\r\n              </a>\r\n            </div>\r\n            <div class=\"col-lg-3 col-md-3 col-sm-6 col-xs-12\">\r\n              <a class=\"dashboard-stat dashboard-stat-v2 red\" href=\"#\">\r\n                <div class=\"visual\">\r\n                  <i class=\"fa fa-bar-chart-o\"></i>\r\n                </div>\r\n                <div class=\"details\">\r\n                  <div class=\"number\">\r\n                    <span data-counter=\"counterup\" data-value=\"12,5\"></span>\r\n                    {ProjectData.Project_aggregate.aggregate.count}\r\n                  </div>\r\n                  <div class=\"desc\"> Projects </div>\r\n                </div>\r\n              </a>\r\n            </div>\r\n            <div class=\"col-lg-3 col-md-3 col-sm-6 col-xs-12\">\r\n              <a class=\"dashboard-stat dashboard-stat-v2 green\" href=\"#\">\r\n                <div class=\"visual\">\r\n                  <i class=\"fa fa-shopping-cart\"></i>\r\n                </div>\r\n                <div class=\"details\">\r\n                  <div class=\"number\">\r\n                    <span data-counter=\"counterup\" data-value=\"549\">\r\n                      {CandidatsData.Candidate_aggregate.aggregate.count}\r\n                    </span>\r\n                  </div>\r\n                  <div class=\"desc\"> Pending Candidats </div>\r\n                </div>\r\n              </a>\r\n            </div>\r\n            <div class=\"col-lg-3 col-md-3 col-sm-6 col-xs-12\">\r\n              <a class=\"dashboard-stat dashboard-stat-v2 purple\" href=\"#\">\r\n                <div class=\"visual\">\r\n                  <i class=\"fa fa-globe\"></i>\r\n                </div>\r\n                <div class=\"details\">\r\n                  <div class=\"number\">\r\n                    {\" \"}\r\n                    +<span\r\n                      data-counter=\"counterup\"\r\n                      data-value=\"89\"\r\n                    ></span>%{\" \"}\r\n                  </div>\r\n                  <div class=\"desc\"> Brand Popularity </div>\r\n                </div>\r\n              </a>\r\n            </div>{\" \"}\r\n          </div>{\" \"}\r\n          <div>\r\n            {\" \"}\r\n            <div className=\"py-6\">\r\n              <h1 className=\"text-2xl md:text-3xl font-semibold text-primary-500\">\r\n                Members\r\n              </h1>\r\n            </div>\r\n            <div className=\"grid grid-cols-1 gap-x-4 gap-y-8 sm:grid-cols-2 md:grid-cols-3\">\r\n              <div>\r\n                <div>\r\n                  {\" \"}\r\n                  {datay.User.map(\r\n                    ({\r\n                      created_at,\r\n                      id,\r\n                      last_seen,\r\n                      Name,\r\n                      Avatar,\r\n                      last_seen_url,\r\n                    }) => {\r\n                      const formattedJoinedAt = formatRelative(\r\n                        Date.parse(created_at),\r\n                        today,\r\n                        {\r\n                          weekStartsOn: 1,\r\n                        }\r\n                      );\r\n\r\n                      const formattedLastSeen = differenceInMinutes(\r\n                        today,\r\n                        Date.parse(last_seen)\r\n                      );\r\n\r\n                      const formattedLastSeeninHours = differenceInHours(\r\n                        today,\r\n                        Date.parse(last_seen)\r\n                      );\r\n                      const formattedLastSeenindays = differenceInDays(\r\n                        today,\r\n                        Date.parse(last_seen)\r\n                      );\r\n                      const isUserOnline = 2 >= formattedLastSeen;\r\n\r\n                      return (\r\n                        <div key={id} class=\"item\">\r\n                          <div class=\"item-head\">\r\n                            <div class=\"item-details\">\r\n                              <span className=\"relative mr-2 md:mr-4 flex items-center\">\r\n                                <span className=\"inline-block h-8 w-8 rounded-full overflow-hidden bg-gray-200\">\r\n                                  <div>\r\n                                    {\" \"}\r\n                                    <span class=\"item-status\">\r\n                                      {isUserOnline ? (\r\n                                        <p>\r\n                                          {\" \"}\r\n                                          <Dot />\r\n                                          Online\r\n                                        </p>\r\n                                      ) : (\r\n                                        <p>\r\n                                          {\" \"}\r\n                                          <DotAway />\r\n                                          Offline\r\n                                        </p>\r\n                                      )}\r\n                                    </span>{\" \"}\r\n                                    <div class=\"image_inner_container\">\r\n                                      {\" \"}\r\n                                      {Avatar ? (\r\n                                        <img\r\n                                          style={{\r\n                                            display: \"inline\",\r\n                                            width: 100,\r\n                                            height: 100,\r\n                                            objectFit: \"cover\",\r\n                                          }}\r\n                                          src={`../${Avatar}`}\r\n                                        />\r\n                                      ) : (\r\n                                        <img\r\n                                          style={{\r\n                                            display: \"inline\",\r\n                                            width: 100,\r\n                                            height: 100,\r\n                                            objectFit: \"cover\",\r\n                                          }}\r\n                                          src={`../profile.png`}\r\n                                        />\r\n                                      )}\r\n                                    </div>\r\n                                  </div>\r\n                                </span>{\" \"}\r\n                              </span>\r\n\r\n                              <a href=\"\" class=\"item-name primary-link\">\r\n                                {Name}\r\n                              </a>\r\n                              <span class=\"item-label\">\r\n                                {\" \"}\r\n                                {formattedLastSeen} minutes ago\r\n                                {formattedLastSeeninHours} hours\r\n                                {formattedLastSeenindays} days\r\n                              </span>\r\n                            </div>\r\n                            <span class=\"item-status\">\r\n                              <span class=\"badge badge-empty badge-success\"></span>{\" \"}\r\n                              Open\r\n                            </span>\r\n                          </div>\r\n                          <div class=\"item-body\">\r\n                            {\" \"}\r\n                            routing path: {last_seen_url}{\" \"}\r\n                          </div>\r\n                        </div>\r\n                      );\r\n                    }\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <FullCalendar\r\n            plugins={[\r\n              dayGridPlugin,\r\n              timeGridPlugin,\r\n              interactionPlugin,\r\n              listPlugin,\r\n            ]}\r\n            headerToolbar={{\r\n              left: \"prev,next today\",\r\n              center: \"title\",\r\n              right: \"dayGridMonth,timeGridWeek,timeGridDay,listWeek\",\r\n            }}\r\n            initialView=\"dayGridMonth\"\r\n            editable={true}\r\n            selectable={true}\r\n            selectMirror={true}\r\n            dayMaxEvents={true}\r\n            eventRemove\r\n            events={Events.Event.map(({ id, Title, start_date }) => {\r\n              return { title: Title, date: start_date };\r\n            })}\r\n            eventColor=\"#378006\"\r\n\r\n            // weekends={this.state.weekendsVisible}\r\n            // initialEvents={INITIAL_EVENTS} // alternatively, use the `events` setting to fetch from a feed\r\n            // select={this.handleDateSelect}\r\n            // eventContent={renderEventContent} // custom render function\r\n            // eventsSet={this.handleEvents} // called after events are initialized/added/changed/removed\r\n            /* you can update a remote database when these fire:\r\n                eventAdd={function(){}}\r\n                eventChange={function(){}}\r\n                */\r\n          />\r\n          <div class=\"clearfix\"></div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}