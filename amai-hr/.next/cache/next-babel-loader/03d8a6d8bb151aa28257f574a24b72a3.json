{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _templateObject,\n    _jsxFileName = \"C:\\\\Users\\\\msdtt\\\\OneDrive\\\\Documents\\\\amai_hr_next_js_hasura\\\\amai-hr\\\\pages\\\\Notification.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Link from \"next/link\";\nimport { useAuthState, useAuthDispatch } from \"../context/auth\";\nimport Image from \"react-bootstrap/Image\";\nimport useSWR, { mutate } from \"swr\";\nimport gql from \"graphql-tag\";\nimport { useRouter } from \"next/router\";\nimport { hasuraUserClient } from \"../lib/hasura-user-client\";\nvar Notification_count = gql(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  query MyQuery {\\n    notification {\\n      name\\n      seen\\n      user_id\\n      id\\n      description\\n    }\\n    notification_aggregate {\\n      aggregate {\\n        count(columns: id)\\n      }\\n    }\\n  }\\n\"])));\nexport var __N_SSG = true;\nexport default function Header(_ref) {\n  _s();\n\n  var initialData = _ref.initialData;\n\n  var _useAuthDispatch = useAuthDispatch(),\n      logout = _useAuthDispatch.logout;\n\n  var _useAuthState = useAuthState(),\n      isAuthenticated = _useAuthState.isAuthenticated,\n      user = _useAuthState.user;\n\n  var hasura = hasuraUserClient();\n\n  var _useSWR = useSWR(Notification_count, function (query) {\n    return hasura.request(query);\n  }, {\n    initialData: initialData,\n    revalidateOnMount: true\n  }),\n      data = _useSWR.data;\n\n  console.log(data.notification_aggregate);\n  return __jsx(\"div\", {\n    className: \"page-header navbar navbar-fixed-top \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 10\n    }\n  });\n}\n\n_s(Header, \"lHUwGYHo+3hbsSmWtlOHg4Lv1DM=\", false, function () {\n  return [useAuthDispatch, useAuthState, useSWR];\n});\n\n_c = Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["C:/Users/msdtt/OneDrive/Documents/amai_hr_next_js_hasura/amai-hr/pages/Notification.js"],"names":["React","Link","useAuthState","useAuthDispatch","Image","useSWR","mutate","gql","useRouter","hasuraUserClient","Notification_count","Header","initialData","logout","isAuthenticated","user","hasura","query","request","revalidateOnMount","data","console","log","notification_aggregate"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,YAAT,EAAuBC,eAAvB,QAA8C,iBAA9C;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,MAAP,IAAiBC,MAAjB,QAA+B,KAA/B;AAEA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,SAASC,gBAAT,QAAiC,2BAAjC;AAEA,IAAMC,kBAAkB,GAAGH,GAAH,2RAAxB;;AA8BA,eAAe,SAASI,MAAT,OAAiC;AAAA;;AAAA,MAAfC,WAAe,QAAfA,WAAe;;AAC9C,yBAAmBT,eAAe,EAAlC;AAAA,MAAQU,MAAR,oBAAQA,MAAR;;AACA,sBAAkCX,YAAY,EAA9C;AAAA,MAAQY,eAAR,iBAAQA,eAAR;AAAA,MAAyBC,IAAzB,iBAAyBA,IAAzB;;AACA,MAAMC,MAAM,GAAGP,gBAAgB,EAA/B;;AAEA,gBAAiBJ,MAAM,CACrBK,kBADqB,EAErB,UAACO,KAAD;AAAA,WAAWD,MAAM,CAACE,OAAP,CAAeD,KAAf,CAAX;AAAA,GAFqB,EAGrB;AACEL,IAAAA,WAAW,EAAXA,WADF;AAEEO,IAAAA,iBAAiB,EAAE;AAFrB,GAHqB,CAAvB;AAAA,MAAQC,IAAR,WAAQA,IAAR;;AAQAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,sBAAjB;AACA,SAAO;AAAK,IAAA,SAAS,EAAC,sCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD;;GAfuBZ,M;UACHR,e,EACeD,Y,EAGjBG,M;;;KALKM,M","sourcesContent":["import React from \"react\";\r\nimport Link from \"next/link\";\r\nimport { useAuthState, useAuthDispatch } from \"../context/auth\";\r\nimport Image from \"react-bootstrap/Image\";\r\nimport useSWR, { mutate } from \"swr\";\r\n\r\nimport gql from \"graphql-tag\";\r\nimport { useRouter } from \"next/router\";\r\n\r\nimport { hasuraUserClient } from \"../lib/hasura-user-client\";\r\n\r\nconst Notification_count = gql`\r\n  query MyQuery {\r\n    notification {\r\n      name\r\n      seen\r\n      user_id\r\n      id\r\n      description\r\n    }\r\n    notification_aggregate {\r\n      aggregate {\r\n        count(columns: id)\r\n      }\r\n    }\r\n  }\r\n`;\r\nexport const getStaticProps = async () => {\r\n  const hasura = hasuraUserClient();\r\n\r\n  const initialData = await hasura.request(Notification_count);\r\n  console.log(initialData);\r\n\r\n  return {\r\n    props: {\r\n      initialData,\r\n    },\r\n    revalidate: 1,\r\n  };\r\n};\r\n\r\nexport default function Header({ initialData }) {\r\n  const { logout } = useAuthDispatch();\r\n  const { isAuthenticated, user } = useAuthState();\r\n  const hasura = hasuraUserClient();\r\n\r\n  const { data } = useSWR(\r\n    Notification_count,\r\n    (query) => hasura.request(query),\r\n    {\r\n      initialData,\r\n      revalidateOnMount: true,\r\n    }\r\n  );\r\n  console.log(data.notification_aggregate);\r\n  return <div className=\"page-header navbar navbar-fixed-top \"></div>;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}