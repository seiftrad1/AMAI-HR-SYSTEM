{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\msdtt\\\\OneDrive\\\\Documents\\\\amai_hr_next_js_hasura\\\\amai-hr\\\\pages\\\\Todo.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useForm } from \"react-hook-form\";\nimport { useAuthState, useAuthDispatch } from \"../context/auth\";\nimport { gql, hasuraAdminClient } from \"../lib/hasura-admin-client\";\nimport { hasuraUserClient } from \"../lib/hasura-user-client\";\nconst from = new Date().toISOString();\nconst GetUsers = gql`\n  {\n    User {\n      Name\n      id\n      notifications_aggregate(where: { seen: { _eq: false } }) {\n        aggregate {\n          count\n        }\n      }\n      notifications(where: { seen: { _eq: false } }) {\n        id\n        description\n      }\n    }\n  }\n`;\nconst GetTodos = gql`\n  {\n    Todo {\n      Description\n      Name\n      Date\n      User {\n        Name\n        id\n      }\n    }\n  }\n`;\nconst GetUserById = gql`\n  query GetUserById($user_id: Int!) {\n    User_by_pk(id: $user_id) {\n      id\n      notifications_aggregate(where: { seen: { _eq: false } }) {\n        aggregate {\n          count\n        }\n      }\n      notifications(where: { seen: { _eq: false } }) {\n        id\n        description\n      }\n    }\n  }\n`;\nconst AddNotification = gql`\n  mutation MyMutation($user_id: Int!) {\n    insert_notification_one(\n      object: {\n        user_id: $user_id\n        name: \"ttt\"\n        seen: false\n        description: \"tttttt\"\n      }\n    ) {\n      user_id\n      seen\n      name\n      id\n      description\n    }\n  }\n`;\nconst insertMultiple = gql`\n  mutation MyMutation(\n    $Description: String!\n    $Name: String!\n    $Date: timestamptz = \"\"\n    $Description1: String!\n    $Name1: String!\n    $Date1: timestamptz = \"\"\n    $Description2: String!\n    $Name2: String!\n    $Date2: timestamptz = \"\"\n    $Description3: String!\n    $Name3: String!\n    $Date3: timestamptz = \"\"\n    $Description4: String!\n    $Name4: String!\n    $Date4: timestamptz = \"\"\n  ) {\n    insert_Todo(\n      objects: [\n        { Description: $Description, Name: $Name, Date: $Date }\n        { Description: $Description1, Name: $Name1, Date: $Date1 }\n        { Description: $Description2, Name: $Name1, Date: $Date1 }\n        { Description: $Description3, Name: $Name3, Date: $Date3 }\n        { Description: $Description4, Name: $Name4, Date: $Date4 }\n      ]\n    ) {\n      affected_rows\n    }\n  }\n`;\nconst InsertTask = gql`\n  mutation InsertTask(\n    $Description: String!\n    $Name: String!\n    $from: timestamptz!\n  ) {\n    insert_Todo_one(\n      object: { Description: $Description, Name: $Name, Date: $from }\n    ) {\n      Description\n      Date\n      Name\n    }\n  }\n`;\nexport const getStaticProps = async () => {\n  const {\n    User\n  } = await hasuraAdminClient.request(GetUsers);\n  return {\n    props: {\n      User\n    }\n  };\n};\nexport default function Todos({\n  User\n}) {\n  const router = useRouter();\n  const {\n    isAuthenticated,\n    user\n  } = useAuthState();\n  const hasura = hasuraUserClient();\n  const {\n    handleSubmit,\n    register,\n    control,\n    errors,\n    formState: {\n      isSubmitting\n    }\n  } = useForm();\n  const {\n    updateUser\n  } = useAuthDispatch();\n  useEffect(() => {\n    if (!isAuthenticated) router.push(\"/\");\n  }, [isAuthenticated]);\n  if (!isAuthenticated) return null;\n\n  const onSubmit = async ({\n    Description,\n    Name\n  }) => {\n    console.log(from);\n\n    try {\n      const {\n        insert_Todo_one\n      } = await hasura.request(InsertTask, {\n        Description,\n        from,\n        Name\n      });\n      window.location.reload();\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: \"page-content-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"page-content\",\n    style: {\n      minHeight: 1500\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    class: \"profile-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    class: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    class: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    class: \"portlet light \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    class: \"portlet-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    class: \"tab-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 19\n    }\n  }, __jsx(\"div\", {\n    class: \"tab-pane active\",\n    id: \"tab_1_1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 21\n    }\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 23\n    }\n  }, __jsx(\"div\", {\n    class: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 25\n    }\n  }, __jsx(\"label\", {\n    class: \"control-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 27\n    }\n  }, \"Name\"), __jsx(\"input\", {\n    name: \"Name\",\n    id: \"Name\",\n    type: \"text\",\n    placeholder: \"Todo Name\",\n    class: \"form-control\",\n    ref: register,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 27\n    }\n  }), \" \"), __jsx(\"div\", {\n    class: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 25\n    }\n  }, __jsx(\"label\", {\n    class: \"control-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 27\n    }\n  }, \"Description\"), __jsx(\"textarea\", {\n    name: \"Description\",\n    id: \"Description\",\n    type: \"textarea\",\n    placeholder: \"Description\",\n    class: \"form-control\",\n    ref: register,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 27\n    }\n  }), \" \"), __jsx(\"div\", {\n    class: \"margiv-top-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 25\n    }\n  }, __jsx(\"button\", {\n    type: \"submit\",\n    class: \"btn green\",\n    disabled: isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 27\n    }\n  }, \" \", \"Save Changes\", \" \")))))))), \" \", __jsx(\"div\", {\n    class: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    class: \"portlet light \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    class: \"portlet-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    class: \"tab-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 19\n    }\n  }))))))), \" \");\n}","map":{"version":3,"sources":["C:/Users/msdtt/OneDrive/Documents/amai_hr_next_js_hasura/amai-hr/pages/Todo.js"],"names":["useEffect","useRouter","useForm","useAuthState","useAuthDispatch","gql","hasuraAdminClient","hasuraUserClient","from","Date","toISOString","GetUsers","GetTodos","GetUserById","AddNotification","insertMultiple","InsertTask","getStaticProps","User","request","props","Todos","router","isAuthenticated","user","hasura","handleSubmit","register","control","errors","formState","isSubmitting","updateUser","push","onSubmit","Description","Name","console","log","insert_Todo_one","window","location","reload","err","minHeight"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,OAAT,QAAwB,iBAAxB;AAEA,SAASC,YAAT,EAAuBC,eAAvB,QAA8C,iBAA9C;AACA,SAASC,GAAT,EAAcC,iBAAd,QAAuC,4BAAvC;AACA,SAASC,gBAAT,QAAiC,2BAAjC;AAEA,MAAMC,IAAI,GAAG,IAAIC,IAAJ,GAAWC,WAAX,EAAb;AAEA,MAAMC,QAAQ,GAAGN,GAAI;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAhBA;AAiBA,MAAMO,QAAQ,GAAGP,GAAI;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAZA;AAaA,MAAMQ,WAAW,GAAGR,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAfA;AAgBA,MAAMS,eAAe,GAAGT,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAjBA;AAkBA,MAAMU,cAAc,GAAGV,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA9BA;AA+BA,MAAMW,UAAU,GAAGX,GAAI;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAdA;AAgBA,OAAO,MAAMY,cAAc,GAAG,YAAY;AACxC,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAMZ,iBAAiB,CAACa,OAAlB,CAA0BR,QAA1B,CAAvB;AAEA,SAAO;AACLS,IAAAA,KAAK,EAAE;AACLF,MAAAA;AADK;AADF,GAAP;AAKD,CARM;AAUP,eAAe,SAASG,KAAT,CAAe;AAAEH,EAAAA;AAAF,CAAf,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","sourcesContent":["import { useEffect } from \"react\";\r\nimport { useRouter } from \"next/router\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nimport { useAuthState, useAuthDispatch } from \"../context/auth\";\r\nimport { gql, hasuraAdminClient } from \"../lib/hasura-admin-client\";\r\nimport { hasuraUserClient } from \"../lib/hasura-user-client\";\r\n\r\nconst from = new Date().toISOString();\r\n\r\nconst GetUsers = gql`\r\n  {\r\n    User {\r\n      Name\r\n      id\r\n      notifications_aggregate(where: { seen: { _eq: false } }) {\r\n        aggregate {\r\n          count\r\n        }\r\n      }\r\n      notifications(where: { seen: { _eq: false } }) {\r\n        id\r\n        description\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst GetTodos = gql`\r\n  {\r\n    Todo {\r\n      Description\r\n      Name\r\n      Date\r\n      User {\r\n        Name\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst GetUserById = gql`\r\n  query GetUserById($user_id: Int!) {\r\n    User_by_pk(id: $user_id) {\r\n      id\r\n      notifications_aggregate(where: { seen: { _eq: false } }) {\r\n        aggregate {\r\n          count\r\n        }\r\n      }\r\n      notifications(where: { seen: { _eq: false } }) {\r\n        id\r\n        description\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst AddNotification = gql`\r\n  mutation MyMutation($user_id: Int!) {\r\n    insert_notification_one(\r\n      object: {\r\n        user_id: $user_id\r\n        name: \"ttt\"\r\n        seen: false\r\n        description: \"tttttt\"\r\n      }\r\n    ) {\r\n      user_id\r\n      seen\r\n      name\r\n      id\r\n      description\r\n    }\r\n  }\r\n`;\r\nconst insertMultiple = gql`\r\n  mutation MyMutation(\r\n    $Description: String!\r\n    $Name: String!\r\n    $Date: timestamptz = \"\"\r\n    $Description1: String!\r\n    $Name1: String!\r\n    $Date1: timestamptz = \"\"\r\n    $Description2: String!\r\n    $Name2: String!\r\n    $Date2: timestamptz = \"\"\r\n    $Description3: String!\r\n    $Name3: String!\r\n    $Date3: timestamptz = \"\"\r\n    $Description4: String!\r\n    $Name4: String!\r\n    $Date4: timestamptz = \"\"\r\n  ) {\r\n    insert_Todo(\r\n      objects: [\r\n        { Description: $Description, Name: $Name, Date: $Date }\r\n        { Description: $Description1, Name: $Name1, Date: $Date1 }\r\n        { Description: $Description2, Name: $Name1, Date: $Date1 }\r\n        { Description: $Description3, Name: $Name3, Date: $Date3 }\r\n        { Description: $Description4, Name: $Name4, Date: $Date4 }\r\n      ]\r\n    ) {\r\n      affected_rows\r\n    }\r\n  }\r\n`;\r\nconst InsertTask = gql`\r\n  mutation InsertTask(\r\n    $Description: String!\r\n    $Name: String!\r\n    $from: timestamptz!\r\n  ) {\r\n    insert_Todo_one(\r\n      object: { Description: $Description, Name: $Name, Date: $from }\r\n    ) {\r\n      Description\r\n      Date\r\n      Name\r\n    }\r\n  }\r\n`;\r\n\r\nexport const getStaticProps = async () => {\r\n  const { User } = await hasuraAdminClient.request(GetUsers);\r\n\r\n  return {\r\n    props: {\r\n      User,\r\n    },\r\n  };\r\n};\r\n\r\nexport default function Todos({ User }) {\r\n  const router = useRouter();\r\n  const { isAuthenticated, user } = useAuthState();\r\n  const hasura = hasuraUserClient();\r\n  const {\r\n    handleSubmit,\r\n    register,\r\n    control,\r\n    errors,\r\n    formState: { isSubmitting },\r\n  } = useForm();\r\n  const { updateUser } = useAuthDispatch();\r\n  useEffect(() => {\r\n    if (!isAuthenticated) router.push(\"/\");\r\n  }, [isAuthenticated]);\r\n\r\n  if (!isAuthenticated) return null;\r\n\r\n  const onSubmit = async ({ Description, Name }) => {\r\n    console.log(from);\r\n    try {\r\n      const { insert_Todo_one } = await hasura.request(InsertTask, {\r\n        Description,\r\n        from,\r\n        Name,\r\n      });\r\n\r\n      window.location.reload();\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"page-content-wrapper\">\r\n      <div className=\"page-content\" style={{ minHeight: 1500 }}>\r\n        <div class=\"profile-content\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n              <div class=\"portlet light \">\r\n                <div class=\"portlet-body\">\r\n                  <div class=\"tab-content\">\r\n                    <div class=\"tab-pane active\" id=\"tab_1_1\">\r\n                      <form onSubmit={handleSubmit(onSubmit)}>\r\n                        <div class=\"form-group\">\r\n                          <label class=\"control-label\">Name</label>\r\n                          <input\r\n                            name=\"Name\"\r\n                            id=\"Name\"\r\n                            type=\"text\"\r\n                            placeholder=\"Todo Name\"\r\n                            class=\"form-control\"\r\n                            ref={register}\r\n                            required\r\n                          />{\" \"}\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                          <label class=\"control-label\">Description</label>\r\n                          <textarea\r\n                            name=\"Description\"\r\n                            id=\"Description\"\r\n                            type=\"textarea\"\r\n                            placeholder=\"Description\"\r\n                            class=\"form-control\"\r\n                            ref={register}\r\n                            required\r\n                          />{\" \"}\r\n                        </div>\r\n                        {/* <select\r\n                          name=\"user_id\"\r\n                          id=\"user_id\"\r\n                          ref={register({\r\n                            required:\r\n                              \"You must select a category for your thread\",\r\n                          })}\r\n                          className=\"appearance-none bg-transparent w-full\"\r\n                        >\r\n                          {User.map(({ id, Name }) => (\r\n                            <React.Fragment key={id}>\r\n                              <option value={id}>{Name}</option>\r\n                            </React.Fragment>\r\n                          ))}\r\n                        </select>{\" \"} */}\r\n                        <div class=\"margiv-top-10\">\r\n                          <button\r\n                            type=\"submit\"\r\n                            class=\"btn green\"\r\n                            disabled={isSubmitting}\r\n                          >\r\n                            {\" \"}\r\n                            Save Changes{\" \"}\r\n                          </button>\r\n                        </div>\r\n                      </form>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>{\" \"}\r\n            <div class=\"col-md-6\">\r\n              <div class=\"portlet light \">\r\n                <div class=\"portlet-body\">\r\n                  <div class=\"tab-content\"></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>{\" \"}\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}