{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\msdtt\\\\OneDrive\\\\Documents\\\\amai_hr_next_js_hasura\\\\amai-hr\\\\pages\\\\Components\\\\Editor.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, useRef } from \"react\";\n\nvar Editor = function Editor(props) {\n  _s();\n\n  var editorRef = useRef();\n\n  var _useState = useState(false),\n      editorLoaded = _useState[0],\n      setEditorLoaded = _useState[1];\n\n  var _ref = editorRef.current || {},\n      CKEditor = _ref.CKEditor,\n      ClassicEditor = _ref.ClassicEditor;\n\n  useEffect(function () {\n    editorRef.current = {\n      CKEditor: require(\"@ckeditor/ckeditor5-react\"),\n      ClassicEditor: require(\"@ckeditor/ckeditor5-build-classic\")\n    };\n    setEditorLoaded(true);\n  }, []);\n  return editorLoaded ? __jsx(CKEditor, {\n    editor: ClassicEditor,\n    data: \"<p>Hello from CKEditor 5!</p>\",\n    onInit: function onInit(editor) {\n      // You can store the \"editor\" and use when it is needed.\n      console.log(\"Editor is ready to use!\", editor);\n    },\n    onChange: function onChange(event, editor) {\n      var data = editor.getData();\n      console.log({\n        event: event,\n        editor: editor,\n        data: data\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }) : __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, \"Editor loading\");\n};\n\n_s(Editor, \"SrcqpY7O03yNSmizUBT9nRKJomc=\");\n\n_c = Editor;\nexport default Editor;\n\nvar _c;\n\n$RefreshReg$(_c, \"Editor\");","map":{"version":3,"sources":["C:/Users/msdtt/OneDrive/Documents/amai_hr_next_js_hasura/amai-hr/pages/Components/Editor.js"],"names":["React","useState","useEffect","useRef","Editor","props","editorRef","editorLoaded","setEditorLoaded","current","CKEditor","ClassicEditor","require","editor","console","log","event","data","getData"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD,EAAW;AAAA;;AACxB,MAAMC,SAAS,GAAGH,MAAM,EAAxB;;AACA,kBAAwCF,QAAQ,CAAC,KAAD,CAAhD;AAAA,MAAOM,YAAP;AAAA,MAAqBC,eAArB;;AACA,aAAoCF,SAAS,CAACG,OAAV,IAAqB,EAAzD;AAAA,MAAQC,QAAR,QAAQA,QAAR;AAAA,MAAkBC,aAAlB,QAAkBA,aAAlB;;AAEAT,EAAAA,SAAS,CAAC,YAAM;AACdI,IAAAA,SAAS,CAACG,OAAV,GAAoB;AAClBC,MAAAA,QAAQ,EAAEE,OAAO,CAAC,2BAAD,CADC;AAElBD,MAAAA,aAAa,EAAEC,OAAO,CAAC,mCAAD;AAFJ,KAApB;AAIAJ,IAAAA,eAAe,CAAC,IAAD,CAAf;AACD,GANQ,EAMN,EANM,CAAT;AAQA,SAAOD,YAAY,GACjB,MAAC,QAAD;AACE,IAAA,MAAM,EAAEI,aADV;AAEE,IAAA,IAAI,EAAC,+BAFP;AAGE,IAAA,MAAM,EAAE,gBAACE,MAAD,EAAY;AAClB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCF,MAAvC;AACD,KANH;AAOE,IAAA,QAAQ,EAAE,kBAACG,KAAD,EAAQH,MAAR,EAAmB;AAC3B,UAAMI,IAAI,GAAGJ,MAAM,CAACK,OAAP,EAAb;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAY;AAAEC,QAAAA,KAAK,EAALA,KAAF;AAASH,QAAAA,MAAM,EAANA,MAAT;AAAiBI,QAAAA,IAAI,EAAJA;AAAjB,OAAZ;AACD,KAVH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADiB,GAcjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAdF;AAgBD,CA7BD;;GAAMb,M;;KAAAA,M;AA8BN,eAAeA,MAAf","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nconst Editor = (props) => {\r\n  const editorRef = useRef();\r\n  const [editorLoaded, setEditorLoaded] = useState(false);\r\n  const { CKEditor, ClassicEditor } = editorRef.current || {};\r\n\r\n  useEffect(() => {\r\n    editorRef.current = {\r\n      CKEditor: require(\"@ckeditor/ckeditor5-react\"),\r\n      ClassicEditor: require(\"@ckeditor/ckeditor5-build-classic\"),\r\n    };\r\n    setEditorLoaded(true);\r\n  }, []);\r\n\r\n  return editorLoaded ? (\r\n    <CKEditor\r\n      editor={ClassicEditor}\r\n      data=\"<p>Hello from CKEditor 5!</p>\"\r\n      onInit={(editor) => {\r\n        // You can store the \"editor\" and use when it is needed.\r\n        console.log(\"Editor is ready to use!\", editor);\r\n      }}\r\n      onChange={(event, editor) => {\r\n        const data = editor.getData();\r\n        console.log({ event, editor, data });\r\n      }}\r\n    />\r\n  ) : (\r\n    <div>Editor loading</div>\r\n  );\r\n};\r\nexport default Editor;\r\n"]},"metadata":{},"sourceType":"module"}