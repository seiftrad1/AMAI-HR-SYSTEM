{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\msdtt\\\\OneDrive\\\\Documents\\\\amai_hr_next_js_hasura\\\\amai-hr\\\\pages\\\\Task.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport ReactMde from \"react-mde\";\nimport Markdown from \"react-markdown\";\nimport { useAuthState } from \"../context/auth\";\nimport { gql, hasuraAdminClient } from \"../lib/hasura-admin-client\";\nimport { hasuraUserClient } from \"../lib/hasura-user-client\";\nexport default function Task(_ref) {\n  _s();\n\n  var User = _ref.User;\n  var router = useRouter();\n\n  var _useAuthState = useAuthState(),\n      isAuthenticated = _useAuthState.isAuthenticated,\n      user = _useAuthState.user;\n\n  var hasura = hasuraUserClient();\n\n  var _useForm = useForm(),\n      handleSubmit = _useForm.handleSubmit,\n      register = _useForm.register,\n      control = _useForm.control,\n      errors = _useForm.errors,\n      isSubmitting = _useForm.formState.isSubmitting;\n\n  var _useState = useState(\"write\"),\n      selectedTab = _useState[0],\n      setSelectedTab = _useState[1];\n\n  useEffect(function () {\n    if (!isAuthenticated) router.push(\"/\");\n  }, [isAuthenticated]);\n  if (!isAuthenticated) return null;\n\n  var onSubmit = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {\n      var userId, title, message, _yield$hasura$request, insert_task_one;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              userId = _ref2.userId, title = _ref2.title, message = _ref2.message;\n              _context.prev = 1;\n              _context.next = 4;\n              return hasura.request(InsertTask, {\n                categoryId: categoryId,\n                title: title,\n                message: message\n              });\n\n            case 4:\n              _yield$hasura$request = _context.sent;\n              insert_task_one = _yield$hasura$request.insert_task_one;\n              router.push(\"/task/\".concat(insert_task_one.id));\n              _context.next = 12;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](1);\n              console.log(_context.t0);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 9]]);\n    }));\n\n    return function onSubmit(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(React.Fragment, null, __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"page-content-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  })));\n}\n\n_s(Task, \"pSKCtTQtb3ZndsGWhUAP6dvH7g8=\", false, function () {\n  return [useRouter, useAuthState, useForm];\n});\n\n_c = Task;\n\nvar _c;\n\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"sources":["C:/Users/msdtt/OneDrive/Documents/amai_hr_next_js_hasura/amai-hr/pages/Task.js"],"names":["useState","useEffect","useRouter","useForm","Controller","ReactMde","Markdown","useAuthState","gql","hasuraAdminClient","hasuraUserClient","Task","User","router","isAuthenticated","user","hasura","handleSubmit","register","control","errors","isSubmitting","formState","selectedTab","setSelectedTab","push","onSubmit","userId","title","message","request","InsertTask","categoryId","insert_task_one","id","console","log"],"mappings":";;;;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,OAAT,EAAkBC,UAAlB,QAAoC,iBAApC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AAEA,SAASC,YAAT,QAA6B,iBAA7B;AACA,SAASC,GAAT,EAAcC,iBAAd,QAAuC,4BAAvC;AACA,SAASC,gBAAT,QAAiC,2BAAjC;AAEA,eAAe,SAASC,IAAT,OAAwB;AAAA;;AAAA,MAARC,IAAQ,QAARA,IAAQ;AACrC,MAAMC,MAAM,GAAGX,SAAS,EAAxB;;AACA,sBAAkCK,YAAY,EAA9C;AAAA,MAAQO,eAAR,iBAAQA,eAAR;AAAA,MAAyBC,IAAzB,iBAAyBA,IAAzB;;AACA,MAAMC,MAAM,GAAGN,gBAAgB,EAA/B;;AACA,iBAMIP,OAAO,EANX;AAAA,MACEc,YADF,YACEA,YADF;AAAA,MAEEC,QAFF,YAEEA,QAFF;AAAA,MAGEC,OAHF,YAGEA,OAHF;AAAA,MAIEC,MAJF,YAIEA,MAJF;AAAA,MAKeC,YALf,YAKEC,SALF,CAKeD,YALf;;AAOA,kBAAsCrB,QAAQ,CAAC,OAAD,CAA9C;AAAA,MAAOuB,WAAP;AAAA,MAAoBC,cAApB;;AAEAvB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI,CAACa,eAAL,EAAsBD,MAAM,CAACY,IAAP,CAAY,GAAZ;AACvB,GAFQ,EAEN,CAACX,eAAD,CAFM,CAAT;AAIA,MAAI,CAACA,eAAL,EAAsB,OAAO,IAAP;;AAEtB,MAAMY,QAAQ;AAAA,yEAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAASC,cAAAA,MAAT,SAASA,MAAT,EAAiBC,KAAjB,SAAiBA,KAAjB,EAAwBC,OAAxB,SAAwBA,OAAxB;AAAA;AAAA;AAAA,qBAEqBb,MAAM,CAACc,OAAP,CAAeC,UAAf,EAA2B;AAC3DC,gBAAAA,UAAU,EAAVA,UAD2D;AAE3DJ,gBAAAA,KAAK,EAALA,KAF2D;AAG3DC,gBAAAA,OAAO,EAAPA;AAH2D,eAA3B,CAFrB;;AAAA;AAAA;AAELI,cAAAA,eAFK,yBAELA,eAFK;AAQbpB,cAAAA,MAAM,CAACY,IAAP,iBAAqBQ,eAAe,CAACC,EAArC;AARa;AAAA;;AAAA;AAAA;AAAA;AAUbC,cAAAA,OAAO,CAACC,GAAR;;AAVa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAARV,QAAQ;AAAA;AAAA;AAAA,KAAd;;AAcA,SACE,4BACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF;AAOD;;GAxCuBf,I;UACPT,S,EACmBK,Y,EAQ9BJ,O;;;KAVkBQ,I","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { useRouter } from \"next/router\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport ReactMde from \"react-mde\";\r\nimport Markdown from \"react-markdown\";\r\n\r\nimport { useAuthState } from \"../context/auth\";\r\nimport { gql, hasuraAdminClient } from \"../lib/hasura-admin-client\";\r\nimport { hasuraUserClient } from \"../lib/hasura-user-client\";\r\n\r\nexport default function Task({ User }) {\r\n  const router = useRouter();\r\n  const { isAuthenticated, user } = useAuthState();\r\n  const hasura = hasuraUserClient();\r\n  const {\r\n    handleSubmit,\r\n    register,\r\n    control,\r\n    errors,\r\n    formState: { isSubmitting },\r\n  } = useForm();\r\n  const [selectedTab, setSelectedTab] = useState(\"write\");\r\n\r\n  useEffect(() => {\r\n    if (!isAuthenticated) router.push(\"/\");\r\n  }, [isAuthenticated]);\r\n\r\n  if (!isAuthenticated) return null;\r\n\r\n  const onSubmit = async ({ userId, title, message }) => {\r\n    try {\r\n      const { insert_task_one } = await hasura.request(InsertTask, {\r\n        categoryId,\r\n        title,\r\n        message,\r\n      });\r\n\r\n      router.push(`/task/${insert_task_one.id}`);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Layout>\r\n        <div className=\"page-content-wrapper\"></div>\r\n      </Layout>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}