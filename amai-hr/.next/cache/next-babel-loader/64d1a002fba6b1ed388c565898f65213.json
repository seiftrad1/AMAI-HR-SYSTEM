{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\msdtt\\\\OneDrive\\\\Documents\\\\amai_hr_next_js_hasura\\\\amai-hr\\\\pages\\\\leave\\\\[id].js\";\nvar __jsx = React.createElement;\nimport useSWR, { mutate } from \"swr\";\nimport { useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useForm } from \"react-hook-form\";\nimport React, { useState } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport Link from \"next/link\";\nimport gql from \"graphql-tag\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { format, intervalToDuration, parseISO } from \"date-fns\";\nimport FullCalendar from \"@fullcalendar/react\"; // must go before plugins\n\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport \"@fullcalendar/common/main.css\";\nimport \"@fullcalendar/daygrid/main.css\";\nimport \"@fullcalendar/timegrid/main.css\";\nimport \"@fullcalendar/list/main.css\";\nimport { TextField } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useAuthState, useAuthDispatch } from \"../../context/auth\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport listPlugin from \"@fullcalendar/list\";\nimport { hasuraUserClient } from \"../../lib/hasura-user-client\";\nconst today = new Date().toISOString().substring(0, 19);\nconst mindate = new Date().toISOString().substring(0, 10);\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200,\n    fontSize: 60\n  }\n}));\nconst GetUsersId = gql`\n  {\n    User {\n      id\n      Last_Name\n      Name\n      Avatar\n      email\n      Role\n      Phone_Number\n      Domain\n      password\n      File\n    }\n  }\n`;\nconst GetEvents = gql`\n  query MyQuery {\n    Event {\n      id\n      Title\n      description\n      start_date\n    }\n  }\n`;\nconst AddNotification = gql`\n  mutation MyMutation {\n    insert_notification_one(\n      object: { name: \"test\", seen: false, description: \"test\" }\n    ) {\n      seen\n      name\n      id\n      description\n    }\n  }\n`;\nconst insertEvent = gql`\n  mutation MyMutation(\n    $Title: String!\n    $description: String!\n    $start_date: timestamp!\n  ) {\n    insert_Event_one(\n      object: {\n        Title: $Title\n        description: $description\n        start_date: $start_date\n      }\n    ) {\n      Title\n      description\n      start_date\n    }\n  }\n`;\nconst getNotifications = gql`\n  query MyQuery {\n    notification(where: { user_id: { _is_null: true } }) {\n      description\n      name\n      seen\n    }\n    notification_aggregate(where: { user_id: { _is_null: true } }) {\n      aggregate {\n        count\n      }\n    }\n  }\n`;\nexport const getStaticPaths = async () => {\n  const hasura = hasuraUserClient();\n  const {\n    User\n  } = await hasura.request(GetUsersId);\n  return {\n    paths: User.map(({\n      id\n    }) => ({\n      params: {\n        id: id.toString()\n      }\n    })),\n    fallback: false\n  };\n};\nexport const getStaticProps = async ({\n  params\n}) => {\n  const hasura = hasuraUserClient();\n  const {\n    id\n  } = params;\n  const initialData = await hasura.request(GetEvents);\n  const datar = await hasura.request(getNotifications);\n  return {\n    props: {\n      initialData,\n      datar,\n      id\n    },\n    revalidate: 1\n  };\n};\nexport default function Calendar({\n  initialData,\n  datar,\n  id\n}) {\n  const {\n    isAuthenticated,\n    user\n  } = useAuthState();\n  console.log(id);\n  const classes = useStyles();\n  console.log(mindate);\n  console.log(initialData);\n  const {\n    handleSubmit,\n    register,\n    control,\n    errors,\n    formState: {\n      isSubmitting\n    }\n  } = useForm();\n  const hasura = hasuraUserClient();\n  const router = useRouter();\n  const {\n    data\n  } = useSWR(GetEvents, query => hasura.request(query), {\n    initialData,\n    revalidateOnMount: true\n  });\n\n  const onSubmit = async ({\n    Title,\n    datetime,\n    description\n  }) => {\n    console.log(datetime);\n    const start_date = datetime;\n\n    try {\n      const {\n        insert_Event_one\n      } = await hasura.request(insertEvent, {\n        Title,\n        description,\n        start_date\n      });\n\n      if (isAuthenticated) {\n        const {\n          insert_notification_one\n        } = await hasura.request(AddNotification);\n      }\n\n      window.location.reload();\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const deleteEvent = gql`\n    mutation MyMutation($id: Int = 10) {\n      delete_Event_by_pk(id: $id) {\n        id\n      }\n    }\n  `;\n\n  const handleDateClick = arg => {\n    // bind with an arrow function\n    alert(`date ${arg.dateStr} marked`); // alert(\"Coordinates: \" + arg.jsEvent.pageX + \",\" + arg.jsEvent.pageY);\n    // alert(\"Current view: \" + arg.view.type);\n    // change the day's background color just for fun\n\n    arg.dayEl.style.backgroundColor = \"#FF5C5C\";\n  };\n\n  const handleevebt = async arg => {\n    if (confirm(`are you sure you want to delete this event ${arg.event.title}?`)) {\n      const c = {\n        id: arg.event.id\n      };\n      console.log(c);\n\n      try {\n        await hasura.request(deleteEvent, c);\n        mutate();\n        window.location.reload();\n      } catch (error) {\n        console.error(error);\n      }\n    } else {\n      return null;\n    }\n  };\n\n  const weekendsVisible = arg => {\n    // alert(\"Coordinates: \" + arg.jsEvent.pageX + \",\" + arg.jsEvent.pageY);\n    // alert(\"Current view: \" + arg.view.type);\n    // change the day's background color just for fun\n    return arg.dayEl.style.backgroundColor = \"#FF5C5C\";\n  };\n\n  return __jsx(\"div\", {\n    className: \"page-content-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"page-content\",\n    style: {\n      minHeight: 1500\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    class: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    class: \"col-md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    class: \"portlet light portlet-fit bordered calendar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    class: \"portlet-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    class: \"caption\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 17\n    }\n  }, __jsx(\"i\", {\n    class: \" icon-layers font-green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 19\n    }\n  }), __jsx(\"span\", {\n    class: \"caption-subject font-green sbold uppercase\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 19\n    }\n  }, \"Calendar\"))), __jsx(\"div\", {\n    class: \"portlet-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    class: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    class: \"col-md-3 col-sm-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 19\n    }\n  }, __jsx(\"h3\", {\n    class: \"event-form-title margin-bottom-20\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 21\n    }\n  }, \"Event\"), isAuthenticated ? user.Role === \"Admin\" ? __jsx(\"div\", {\n    id: \"external-events\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 25\n    }\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 27\n    }\n  }, \" \", __jsx(\"div\", {\n    class: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 29\n    }\n  }, __jsx(\"input\", {\n    type: \"text\",\n    name: \"Title\",\n    class: \"form-control\",\n    placeholder: \"Event Type...\",\n    id: \"event_title\",\n    ref: register({\n      required: \"You must provide a the event\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 31\n    }\n  }), \" \", errors.Title && __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 33\n    }\n  }, errors.Title.message)), \" \", __jsx(\"div\", {\n    class: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 29\n    }\n  }, __jsx(\"input\", {\n    type: \"text\",\n    name: \"description\",\n    class: \"form-control\",\n    placeholder: \"Description\",\n    id: \"event_title\",\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 31\n    }\n  }), \" \"), __jsx(\"div\", {\n    class: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 29\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 31\n    }\n  }, \"start day\"), __jsx(TextField, {\n    id: \"start_date\",\n    name: \"start_date\",\n    type: \"date\",\n    defaultValue: today,\n    className: classes.textField,\n    inputRef: register,\n    InputLabelProps: {\n      shrink: true\n    },\n    inputProps: {\n      min: `${mindate}`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 31\n    }\n  }), \" \", __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 31\n    }\n  }, \"end day\"), __jsx(TextField, {\n    id: \"end_date\",\n    name: \"end_date\",\n    type: \"date\",\n    defaultValue: today,\n    className: classes.textField,\n    inputRef: register,\n    InputLabelProps: {\n      shrink: true\n    },\n    inputProps: {\n      min: `${mindate}`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 31\n    }\n  })), __jsx(\"div\", {\n    class: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 29\n    }\n  }, __jsx(\"button\", {\n    type: \"submit\",\n    class: \"btn green\",\n    disabled: isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 31\n    }\n  }, \" \", \"Leave\", \" \"))), __jsx(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 27\n    }\n  }), __jsx(\"hr\", {\n    class: \"visible-xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 27\n    }\n  }), \" \") : __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 25\n    }\n  }) : __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 23\n    }\n  })), __jsx(\"div\", {\n    class: \"col-md-9 col-sm-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 19\n    }\n  }, __jsx(FullCalendar, {\n    plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin, listPlugin],\n    headerToolbar: {\n      left: \"prev,next today\",\n      center: \"title\",\n      right: \"dayGridMonth,timeGridWeek,timeGridDay,listWeek\"\n    },\n    initialView: \"dayGridMonth\",\n    editable: true,\n    selectable: true,\n    selectMirror: true,\n    dayMaxEvents: true,\n    themeSystem: \"bootstrap\",\n    events: [{\n      title: \"event 1\",\n      start: \"2021-08-12\",\n      end: \"2021-08-20\",\n      backgroundColor: \"#FF5C5C\",\n      display: \"background\"\n    }],\n    dateClick: handleDateClick // initialEvents={INITIAL_EVENTS} // alternatively, use the `events` setting to fetch from a feed\n    // select={this.handleDateSelect}\n    // eventContent={renderEventContent} // custom render function\n    // eventsSet={this.handleEvents} // called after events are initialized/added/changed/removed\n\n    /* you can update a remote database when these fire:\r\n    eventAdd={function(){}}\r\n    eventChange={function(){}}\r\n    // */\n    //       validRange={{\n    //         start: \"2021-08-03\",\n    //         end: \"2021-08-07\",\n    //       }}\n    ,\n    weekends: false,\n    eventClick: handleevebt // select={color}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 21\n    }\n  })))))))));\n}","map":{"version":3,"sources":["C:/Users/msdtt/OneDrive/Documents/amai_hr_next_js_hasura/amai-hr/pages/leave/[id].js"],"names":["useSWR","mutate","useEffect","useRouter","useForm","React","useState","Form","Link","gql","DatePicker","format","intervalToDuration","parseISO","FullCalendar","dayGridPlugin","TextField","makeStyles","useAuthState","useAuthDispatch","interactionPlugin","timeGridPlugin","listPlugin","hasuraUserClient","today","Date","toISOString","substring","mindate","useStyles","theme","container","display","flexWrap","textField","marginLeft","spacing","marginRight","width","fontSize","GetUsersId","GetEvents","AddNotification","insertEvent","getNotifications","getStaticPaths","hasura","User","request","paths","map","id","params","toString","fallback","getStaticProps","initialData","datar","props","revalidate","Calendar","isAuthenticated","user","console","log","classes","handleSubmit","register","control","errors","formState","isSubmitting","router","data","query","revalidateOnMount","onSubmit","Title","datetime","description","start_date","insert_Event_one","insert_notification_one","window","location","reload","err","deleteEvent","handleDateClick","arg","alert","dateStr","dayEl","style","backgroundColor","handleevebt","confirm","event","title","c","error","weekendsVisible","minHeight","Role","required","message","shrink","min","left","center","right","start","end"],"mappings":"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","sourcesContent":["import useSWR, { mutate } from \"swr\";\r\nimport { useEffect } from \"react\";\r\nimport { useRouter } from \"next/router\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport React, { useState } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport Link from \"next/link\";\r\nimport gql from \"graphql-tag\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { format, intervalToDuration, parseISO } from \"date-fns\";\r\nimport FullCalendar from \"@fullcalendar/react\"; // must go before plugins\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport \"@fullcalendar/common/main.css\";\r\nimport \"@fullcalendar/daygrid/main.css\";\r\nimport \"@fullcalendar/timegrid/main.css\";\r\nimport \"@fullcalendar/list/main.css\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useAuthState, useAuthDispatch } from \"../../context/auth\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\";\r\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\r\nimport listPlugin from \"@fullcalendar/list\";\r\nimport { hasuraUserClient } from \"../../lib/hasura-user-client\";\r\nconst today = new Date().toISOString().substring(0, 19);\r\nconst mindate = new Date().toISOString().substring(0, 10);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 200,\r\n    fontSize: 60,\r\n  },\r\n}));\r\nconst GetUsersId = gql`\r\n  {\r\n    User {\r\n      id\r\n      Last_Name\r\n      Name\r\n      Avatar\r\n      email\r\n      Role\r\n      Phone_Number\r\n      Domain\r\n      password\r\n      File\r\n    }\r\n  }\r\n`;\r\nconst GetEvents = gql`\r\n  query MyQuery {\r\n    Event {\r\n      id\r\n      Title\r\n      description\r\n      start_date\r\n    }\r\n  }\r\n`;\r\nconst AddNotification = gql`\r\n  mutation MyMutation {\r\n    insert_notification_one(\r\n      object: { name: \"test\", seen: false, description: \"test\" }\r\n    ) {\r\n      seen\r\n      name\r\n      id\r\n      description\r\n    }\r\n  }\r\n`;\r\n\r\nconst insertEvent = gql`\r\n  mutation MyMutation(\r\n    $Title: String!\r\n    $description: String!\r\n    $start_date: timestamp!\r\n  ) {\r\n    insert_Event_one(\r\n      object: {\r\n        Title: $Title\r\n        description: $description\r\n        start_date: $start_date\r\n      }\r\n    ) {\r\n      Title\r\n      description\r\n      start_date\r\n    }\r\n  }\r\n`;\r\nconst getNotifications = gql`\r\n  query MyQuery {\r\n    notification(where: { user_id: { _is_null: true } }) {\r\n      description\r\n      name\r\n      seen\r\n    }\r\n    notification_aggregate(where: { user_id: { _is_null: true } }) {\r\n      aggregate {\r\n        count\r\n      }\r\n    }\r\n  }\r\n`;\r\nexport const getStaticPaths = async () => {\r\n  const hasura = hasuraUserClient();\r\n\r\n  const { User } = await hasura.request(GetUsersId);\r\n\r\n  return {\r\n    paths: User.map(({ id }) => ({\r\n      params: {\r\n        id: id.toString(),\r\n      },\r\n    })),\r\n    fallback: false,\r\n  };\r\n};\r\n\r\nexport const getStaticProps = async ({ params }) => {\r\n  const hasura = hasuraUserClient();\r\n  const { id } = params;\r\n\r\n  const initialData = await hasura.request(GetEvents);\r\n  const datar = await hasura.request(getNotifications);\r\n\r\n  return {\r\n    props: {\r\n      initialData,\r\n      datar,\r\n      id,\r\n    },\r\n    revalidate: 1,\r\n  };\r\n};\r\n\r\nexport default function Calendar({ initialData, datar, id }) {\r\n  const { isAuthenticated, user } = useAuthState();\r\n  console.log(id);\r\n  const classes = useStyles();\r\n  console.log(mindate);\r\n  console.log(initialData);\r\n\r\n  const {\r\n    handleSubmit,\r\n    register,\r\n    control,\r\n    errors,\r\n    formState: { isSubmitting },\r\n  } = useForm();\r\n  const hasura = hasuraUserClient();\r\n  const router = useRouter();\r\n  const { data } = useSWR(GetEvents, (query) => hasura.request(query), {\r\n    initialData,\r\n    revalidateOnMount: true,\r\n  });\r\n  const onSubmit = async ({ Title, datetime, description }) => {\r\n    console.log(datetime);\r\n    const start_date = datetime;\r\n    try {\r\n      const { insert_Event_one } = await hasura.request(insertEvent, {\r\n        Title,\r\n        description,\r\n        start_date,\r\n      });\r\n      if (isAuthenticated) {\r\n        const { insert_notification_one } = await hasura.request(\r\n          AddNotification\r\n        );\r\n      }\r\n\r\n      window.location.reload();\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  const deleteEvent = gql`\r\n    mutation MyMutation($id: Int = 10) {\r\n      delete_Event_by_pk(id: $id) {\r\n        id\r\n      }\r\n    }\r\n  `;\r\n  const handleDateClick = (arg) => {\r\n    // bind with an arrow function\r\n    alert(`date ${arg.dateStr} marked`);\r\n    // alert(\"Coordinates: \" + arg.jsEvent.pageX + \",\" + arg.jsEvent.pageY);\r\n    // alert(\"Current view: \" + arg.view.type);\r\n    // change the day's background color just for fun\r\n    arg.dayEl.style.backgroundColor = \"#FF5C5C\";\r\n  };\r\n  const handleevebt = async (arg) => {\r\n    if (\r\n      confirm(`are you sure you want to delete this event ${arg.event.title}?`)\r\n    ) {\r\n      const c = { id: arg.event.id };\r\n      console.log(c);\r\n      try {\r\n        await hasura.request(deleteEvent, c);\r\n        mutate();\r\n        window.location.reload();\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n  const weekendsVisible = (arg) => {\r\n    // alert(\"Coordinates: \" + arg.jsEvent.pageX + \",\" + arg.jsEvent.pageY);\r\n    // alert(\"Current view: \" + arg.view.type);\r\n    // change the day's background color just for fun\r\n    return (arg.dayEl.style.backgroundColor = \"#FF5C5C\");\r\n  };\r\n  return (\r\n    <div className=\"page-content-wrapper\">\r\n      <div className=\"page-content\" style={{ minHeight: 1500 }}>\r\n        {/* <h1 class=\"page-title\"> Calendar</h1> */}\r\n\r\n        <div class=\"row\">\r\n          <div class=\"col-md-12\">\r\n            <div class=\"portlet light portlet-fit bordered calendar\">\r\n              <div class=\"portlet-title\">\r\n                <div class=\"caption\">\r\n                  <i class=\" icon-layers font-green\"></i>\r\n                  <span class=\"caption-subject font-green sbold uppercase\">\r\n                    Calendar\r\n                  </span>\r\n                </div>\r\n              </div>\r\n              <div class=\"portlet-body\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-3 col-sm-12\">\r\n                    <h3 class=\"event-form-title margin-bottom-20\">Event</h3>\r\n                    {isAuthenticated ? (\r\n                      user.Role === \"Admin\" ? (\r\n                        <div id=\"external-events\">\r\n                          <form onSubmit={handleSubmit(onSubmit)}>\r\n                            {\" \"}\r\n                            <div class=\"form-group\">\r\n                              <input\r\n                                type=\"text\"\r\n                                name=\"Title\"\r\n                                class=\"form-control\"\r\n                                placeholder=\"Event Type...\"\r\n                                id=\"event_title\"\r\n                                ref={register({\r\n                                  required: \"You must provide a the event\",\r\n                                })}\r\n                              />{\" \"}\r\n                              {errors.Title && (\r\n                                <span>{errors.Title.message}</span>\r\n                              )}\r\n                            </div>{\" \"}\r\n                            <div class=\"form-group\">\r\n                              <input\r\n                                type=\"text\"\r\n                                name=\"description\"\r\n                                class=\"form-control\"\r\n                                placeholder=\"Description\"\r\n                                id=\"event_title\"\r\n                                ref={register}\r\n                              />{\" \"}\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                              <label>start day</label>\r\n                              <TextField\r\n                                id=\"start_date\"\r\n                                name=\"start_date\"\r\n                                type=\"date\"\r\n                                defaultValue={today}\r\n                                className={classes.textField}\r\n                                inputRef={register}\r\n                                InputLabelProps={{\r\n                                  shrink: true,\r\n                                }}\r\n                                inputProps={{ min: `${mindate}` }}\r\n                              />{\" \"}\r\n                              <label>end day</label>\r\n                              <TextField\r\n                                id=\"end_date\"\r\n                                name=\"end_date\"\r\n                                type=\"date\"\r\n                                defaultValue={today}\r\n                                className={classes.textField}\r\n                                inputRef={register}\r\n                                InputLabelProps={{\r\n                                  shrink: true,\r\n                                }}\r\n                                inputProps={{ min: `${mindate}` }}\r\n                              />\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                              <button\r\n                                type=\"submit\"\r\n                                class=\"btn green\"\r\n                                disabled={isSubmitting}\r\n                              >\r\n                                {\" \"}\r\n                                Leave{\" \"}\r\n                              </button>\r\n                            </div>\r\n                          </form>\r\n                          <hr />\r\n                          <hr class=\"visible-xs\" />{\" \"}\r\n                        </div>\r\n                      ) : (\r\n                        <div></div>\r\n                      )\r\n                    ) : (\r\n                      <div></div>\r\n                    )}\r\n                  </div>\r\n                  <div class=\"col-md-9 col-sm-12\">\r\n                    <FullCalendar\r\n                      plugins={[\r\n                        dayGridPlugin,\r\n                        timeGridPlugin,\r\n                        interactionPlugin,\r\n                        listPlugin,\r\n                      ]}\r\n                      headerToolbar={{\r\n                        left: \"prev,next today\",\r\n                        center: \"title\",\r\n                        right: \"dayGridMonth,timeGridWeek,timeGridDay,listWeek\",\r\n                      }}\r\n                      initialView=\"dayGridMonth\"\r\n                      editable={true}\r\n                      selectable={true}\r\n                      selectMirror={true}\r\n                      dayMaxEvents={true}\r\n                      themeSystem=\"bootstrap\"\r\n                      events={[\r\n                        {\r\n                          title: \"event 1\",\r\n                          start: \"2021-08-12\",\r\n                          end: \"2021-08-20\",\r\n                          backgroundColor: \"#FF5C5C\",\r\n                          display: \"background\",\r\n                        },\r\n                      ]}\r\n                      dateClick={handleDateClick}\r\n                      // initialEvents={INITIAL_EVENTS} // alternatively, use the `events` setting to fetch from a feed\r\n                      // select={this.handleDateSelect}\r\n                      // eventContent={renderEventContent} // custom render function\r\n                      // eventsSet={this.handleEvents} // called after events are initialized/added/changed/removed\r\n                      /* you can update a remote database when these fire:\r\n                eventAdd={function(){}}\r\n                eventChange={function(){}}\r\n                // */\r\n                      //       validRange={{\r\n                      //         start: \"2021-08-03\",\r\n                      //         end: \"2021-08-07\",\r\n                      //       }}\r\n                      weekends={false}\r\n                      eventClick={handleevebt}\r\n                      // select={color}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}