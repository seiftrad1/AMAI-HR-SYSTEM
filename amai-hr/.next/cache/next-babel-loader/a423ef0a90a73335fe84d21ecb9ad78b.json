{"ast":null,"code":"import useSWR, { mutate } from \"swr\";\nimport { useRouter } from \"next/router\";\nimport formidable from \"formidable\";\nimport fs from \"fs\";\nimport { hasuraAdminClient, gql } from \"../../lib/hasura-admin-client\";\nimport { hasuraUserClient } from \"../../lib/hasura-user-client\";\nexport const config = {\n  api: {\n    bodyParser: false\n  }\n};\nconst GetUsers = gql`\n  query MyQuery {\n    User {\n      id\n      Name\n      email\n    }\n  }\n`;\nexport default function seif() {\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n\n  async (req, res) => {\n    const form = new formidable.IncomingForm();\n    form.parse(req, async function (err, fields, files) {\n      await saveFile(files.file);\n      return res.status(201).send(\"\");\n    });\n\n    const saveFile = async file => {\n      const hasura = hasuraUserClient();\n      const data = fs.readFileSync(file.path);\n      fs.writeFileSync(`./public/${file.name}`, data);\n      await fs.unlinkSync(file.path);\n      const Avatar = file.name;\n      const UploadImage = gql`\n        mutation MyMutation($Avatar: String!, $id: Int!) {\n          update_User_by_pk(\n            pk_columns: { id: $id }\n            _set: { Avatar: $Avatar }\n          ) {\n            Avatar\n            Name\n          }\n        }\n      `;\n\n      try {\n        await hasura.request(UploadImage, {\n          id,\n          Avatar\n        });\n        mutate();\n      } catch (error) {\n        console.error(error);\n      }\n\n      return;\n    };\n  };\n}","map":{"version":3,"sources":["C:/Users/msdtt/OneDrive/Documents/amai_hr_next_js_hasura/amai-hr/pages/api/file.js"],"names":["useSWR","mutate","useRouter","formidable","fs","hasuraAdminClient","gql","hasuraUserClient","config","api","bodyParser","GetUsers","seif","router","id","query","req","res","form","IncomingForm","parse","err","fields","files","saveFile","file","status","send","hasura","data","readFileSync","path","writeFileSync","name","unlinkSync","Avatar","UploadImage","request","error","console"],"mappings":"AAAA,OAAOA,MAAP,IAAiBC,MAAjB,QAA+B,KAA/B;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,EAAP,MAAe,IAAf;AACA,SAASC,iBAAT,EAA4BC,GAA5B,QAAuC,+BAAvC;AACA,SAASC,gBAAT,QAAiC,8BAAjC;AAEA,OAAO,MAAMC,MAAM,GAAG;AACpBC,EAAAA,GAAG,EAAE;AACHC,IAAAA,UAAU,EAAE;AADT;AADe,CAAf;AAMP,MAAMC,QAAQ,GAAGL,GAAI;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;AASA,eAAe,SAASM,IAAT,GAAgB;AAC7B,QAAMC,MAAM,GAAGX,SAAS,EAAxB;AACA,QAAM;AAAEY,IAAAA;AAAF,MAASD,MAAM,CAACE,KAAtB;;AAEA,SAAOC,GAAP,EAAYC,GAAZ,KAAoB;AAClB,UAAMC,IAAI,GAAG,IAAIf,UAAU,CAACgB,YAAf,EAAb;AACAD,IAAAA,IAAI,CAACE,KAAL,CAAWJ,GAAX,EAAgB,gBAAgBK,GAAhB,EAAqBC,MAArB,EAA6BC,KAA7B,EAAoC;AAClD,YAAMC,QAAQ,CAACD,KAAK,CAACE,IAAP,CAAd;AACA,aAAOR,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAArB,CAAP;AACD,KAHD;;AAKA,UAAMH,QAAQ,GAAG,MAAOC,IAAP,IAAgB;AAC/B,YAAMG,MAAM,GAAGrB,gBAAgB,EAA/B;AACA,YAAMsB,IAAI,GAAGzB,EAAE,CAAC0B,YAAH,CAAgBL,IAAI,CAACM,IAArB,CAAb;AACA3B,MAAAA,EAAE,CAAC4B,aAAH,CAAkB,YAAWP,IAAI,CAACQ,IAAK,EAAvC,EAA0CJ,IAA1C;AACA,YAAMzB,EAAE,CAAC8B,UAAH,CAAcT,IAAI,CAACM,IAAnB,CAAN;AACA,YAAMI,MAAM,GAAGV,IAAI,CAACQ,IAApB;AAEA,YAAMG,WAAW,GAAG9B,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAVM;;AAWA,UAAI;AACF,cAAMsB,MAAM,CAACS,OAAP,CAAeD,WAAf,EAA4B;AAAEtB,UAAAA,EAAF;AAAMqB,UAAAA;AAAN,SAA5B,CAAN;AACAlC,QAAAA,MAAM;AACP,OAHD,CAGE,OAAOqC,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD;;AACD;AACD,KAzBD;AA0BD,GAjCD;AAkCD","sourcesContent":["import useSWR, { mutate } from \"swr\";\r\nimport { useRouter } from \"next/router\";\r\n\r\nimport formidable from \"formidable\";\r\nimport fs from \"fs\";\r\nimport { hasuraAdminClient, gql } from \"../../lib/hasura-admin-client\";\r\nimport { hasuraUserClient } from \"../../lib/hasura-user-client\";\r\n\r\nexport const config = {\r\n  api: {\r\n    bodyParser: false,\r\n  },\r\n};\r\n\r\nconst GetUsers = gql`\r\n  query MyQuery {\r\n    User {\r\n      id\r\n      Name\r\n      email\r\n    }\r\n  }\r\n`;\r\nexport default function seif() {\r\n  const router = useRouter();\r\n  const { id } = router.query;\r\n\r\n  async (req, res) => {\r\n    const form = new formidable.IncomingForm();\r\n    form.parse(req, async function (err, fields, files) {\r\n      await saveFile(files.file);\r\n      return res.status(201).send(\"\");\r\n    });\r\n\r\n    const saveFile = async (file) => {\r\n      const hasura = hasuraUserClient();\r\n      const data = fs.readFileSync(file.path);\r\n      fs.writeFileSync(`./public/${file.name}`, data);\r\n      await fs.unlinkSync(file.path);\r\n      const Avatar = file.name;\r\n\r\n      const UploadImage = gql`\r\n        mutation MyMutation($Avatar: String!, $id: Int!) {\r\n          update_User_by_pk(\r\n            pk_columns: { id: $id }\r\n            _set: { Avatar: $Avatar }\r\n          ) {\r\n            Avatar\r\n            Name\r\n          }\r\n        }\r\n      `;\r\n      try {\r\n        await hasura.request(UploadImage, { id, Avatar });\r\n        mutate();\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n      return;\r\n    };\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}