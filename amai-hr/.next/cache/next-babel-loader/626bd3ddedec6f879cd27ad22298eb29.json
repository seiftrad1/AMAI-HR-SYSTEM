{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\msdtt\\\\OneDrive\\\\Documents\\\\amai_hr_next_js_hasura\\\\amai-hr\\\\pages\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { gql } from \"graphql-request\";\nimport { useRouter } from \"next/router\";\nimport useSWR from \"swr\";\nimport { hasuraUserClient } from \"../lib/hasura-user-client\";\nimport Layout from \"./Components/Layout\";\nimport FullCalendar from \"@fullcalendar/react\"; // must go before plugins\n\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport \"@fullcalendar/common/main.css\";\nimport \"@fullcalendar/daygrid/main.css\";\nimport { format, parseISO } from \"date-fns\";\nimport \"@fullcalendar/timegrid/main.css\";\nimport \"@fullcalendar/list/main.css\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport listPlugin from \"@fullcalendar/list\";\nimport { useAuthState, useAuthDispatch } from \"../context/auth\";\nimport { useEffect } from \"react\";\nconst Users = gql`\n  query MyQuery {\n    User_aggregate {\n      aggregate {\n        count\n      }\n    }\n  }\n`;\nconst GetEvents = gql`\n  query MyQuery {\n    Event {\n      id\n      Title\n      description\n      start_date\n    }\n  }\n`;\nconst Projects = gql`\n  query Query {\n    Project_aggregate {\n      aggregate {\n        count\n      }\n    }\n  }\n`;\nconst Candidats = gql`\n  query Query {\n    Candidate_aggregate(where: { Status: { _eq: 0 } }) {\n      aggregate {\n        count\n      }\n    }\n  }\n`;\nexport const getStaticProps = async () => {\n  const hasura = hasuraUserClient();\n  const initialData = await hasura.request(Users);\n  const ProjectData = await hasura.request(Projects);\n  const CandidatsData = await hasura.request(Candidats);\n  const Events = await hasura.request(GetEvents);\n  return {\n    props: {\n      initialData,\n      ProjectData,\n      CandidatsData,\n      Events\n    },\n    revalidate: 1\n  };\n};\nexport default function Home({\n  initialData,\n  ProjectData,\n  CandidatsData,\n  Events\n}) {\n  const {\n    isAuthenticated,\n    user\n  } = useAuthState();\n  const hasura = hasuraUserClient();\n  const router = useRouter();\n  console.log(ProjectData);\n  const {\n    data\n  } = useSWR(Users, query => hasura.request(query), {\n    initialData,\n    revalidateOnMount: true\n  });\n  useEffect(() => {\n    if (isAuthenticated) {\n      router.push(`/login`);\n    } else {\n      return null;\n    }\n  }, []);\n  const {\n    dataEvents\n  } = useSWR(GetEvents, query => hasura.request(query), {\n    Events,\n    revalidateOnMount: true\n  });\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"page-content-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"page-content\",\n    style: {\n      minHeight: 1500\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    class: \"page-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, \" Admin Dashboard\"), __jsx(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, \"statistics, charts, recent events and reports\"), __jsx(\"div\", {\n    class: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    class: \"col-lg-3 col-md-3 col-sm-6 col-xs-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, __jsx(\"a\", {\n    class: \"dashboard-stat dashboard-stat-v2 blue\",\n    href: \"#\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    class: \"visual\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  }, __jsx(\"i\", {\n    class: \"fa fa-comments\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 19\n    }\n  })), __jsx(\"div\", {\n    class: \"details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    class: \"number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 19\n    }\n  }, __jsx(\"span\", {\n    \"data-counter\": \"counterup\",\n    \"data-value\": \"1349\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 21\n    }\n  }, data.User_aggregate.aggregate.count)), __jsx(\"div\", {\n    class: \"desc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 19\n    }\n  }, \" Users \")))), __jsx(\"div\", {\n    class: \"col-lg-3 col-md-3 col-sm-6 col-xs-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, __jsx(\"a\", {\n    class: \"dashboard-stat dashboard-stat-v2 red\",\n    href: \"#\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    class: \"visual\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  }, __jsx(\"i\", {\n    class: \"fa fa-bar-chart-o\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 19\n    }\n  })), __jsx(\"div\", {\n    class: \"details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    class: \"number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 19\n    }\n  }, __jsx(\"span\", {\n    \"data-counter\": \"counterup\",\n    \"data-value\": \"12,5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 21\n    }\n  }), ProjectData.Project_aggregate.aggregate.count), __jsx(\"div\", {\n    class: \"desc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 19\n    }\n  }, \" Projects \")))), __jsx(\"div\", {\n    class: \"col-lg-3 col-md-3 col-sm-6 col-xs-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }, __jsx(\"a\", {\n    class: \"dashboard-stat dashboard-stat-v2 green\",\n    href: \"#\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    class: \"visual\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }\n  }, __jsx(\"i\", {\n    class: \"fa fa-shopping-cart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 19\n    }\n  })), __jsx(\"div\", {\n    class: \"details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    class: \"number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 19\n    }\n  }, __jsx(\"span\", {\n    \"data-counter\": \"counterup\",\n    \"data-value\": \"549\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 21\n    }\n  }, CandidatsData.Candidate_aggregate.aggregate.count)), __jsx(\"div\", {\n    class: \"desc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 19\n    }\n  }, \" Pending Candidats \")))), __jsx(\"div\", {\n    class: \"col-lg-3 col-md-3 col-sm-6 col-xs-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }, __jsx(\"a\", {\n    class: \"dashboard-stat dashboard-stat-v2 purple\",\n    href: \"#\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    class: \"visual\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 17\n    }\n  }, __jsx(\"i\", {\n    class: \"fa fa-globe\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 19\n    }\n  })), __jsx(\"div\", {\n    class: \"details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    class: \"number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 19\n    }\n  }, \" \", \"+\", __jsx(\"span\", {\n    \"data-counter\": \"counterup\",\n    \"data-value\": \"89\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 22\n    }\n  }), \"%\", \" \"), __jsx(\"div\", {\n    class: \"desc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 19\n    }\n  }, \" Brand Popularity \")))), \" \"), \" \", __jsx(FullCalendar, {\n    plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin, listPlugin],\n    headerToolbar: {\n      left: \"prev,next today\",\n      center: \"title\",\n      right: \"dayGridMonth,timeGridWeek,timeGridDay,listWeek\"\n    },\n    initialView: \"dayGridMonth\",\n    editable: true,\n    selectable: true,\n    selectMirror: true,\n    dayMaxEvents: true,\n    eventRemove: true,\n    events: Events.Event.map(({\n      id,\n      Title,\n      start_date\n    }) => {\n      return {\n        title: Title,\n        date: start_date\n      };\n    }),\n    eventColor: \"#378006\" // weekends={this.state.weekendsVisible}\n    // initialEvents={INITIAL_EVENTS} // alternatively, use the `events` setting to fetch from a feed\n    // select={this.handleDateSelect}\n    // eventContent={renderEventContent} // custom render function\n    // eventsSet={this.handleEvents} // called after events are initialized/added/changed/removed\n\n    /* you can update a remote database when these fire:\r\n        eventAdd={function(){}}\r\n        eventChange={function(){}}\r\n        */\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 11\n    }\n  }), __jsx(\"div\", {\n    class: \"clearfix\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 11\n    }\n  }))));\n}","map":{"version":3,"sources":["C:/Users/msdtt/OneDrive/Documents/amai_hr_next_js_hasura/amai-hr/pages/index.js"],"names":["gql","useRouter","useSWR","hasuraUserClient","Layout","FullCalendar","dayGridPlugin","format","parseISO","interactionPlugin","timeGridPlugin","listPlugin","useAuthState","useAuthDispatch","useEffect","Users","GetEvents","Projects","Candidats","getStaticProps","hasura","initialData","request","ProjectData","CandidatsData","Events","props","revalidate","Home","isAuthenticated","user","router","console","log","data","query","revalidateOnMount","push","dataEvents","minHeight","User_aggregate","aggregate","count","Project_aggregate","Candidate_aggregate","left","center","right","Event","map","id","Title","start_date","title","date"],"mappings":"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","sourcesContent":["import { gql } from \"graphql-request\";\r\nimport { useRouter } from \"next/router\";\r\nimport useSWR from \"swr\";\r\nimport { hasuraUserClient } from \"../lib/hasura-user-client\";\r\nimport Layout from \"./Components/Layout\";\r\nimport FullCalendar from \"@fullcalendar/react\"; // must go before plugins\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport \"@fullcalendar/common/main.css\";\r\nimport \"@fullcalendar/daygrid/main.css\";\r\nimport { format, parseISO } from \"date-fns\";\r\nimport \"@fullcalendar/timegrid/main.css\";\r\nimport \"@fullcalendar/list/main.css\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\";\r\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\r\nimport listPlugin from \"@fullcalendar/list\";\r\nimport { useAuthState, useAuthDispatch } from \"../context/auth\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst Users = gql`\r\n  query MyQuery {\r\n    User_aggregate {\r\n      aggregate {\r\n        count\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst GetEvents = gql`\r\n  query MyQuery {\r\n    Event {\r\n      id\r\n      Title\r\n      description\r\n      start_date\r\n    }\r\n  }\r\n`;\r\nconst Projects = gql`\r\n  query Query {\r\n    Project_aggregate {\r\n      aggregate {\r\n        count\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst Candidats = gql`\r\n  query Query {\r\n    Candidate_aggregate(where: { Status: { _eq: 0 } }) {\r\n      aggregate {\r\n        count\r\n      }\r\n    }\r\n  }\r\n`;\r\nexport const getStaticProps = async () => {\r\n  const hasura = hasuraUserClient();\r\n\r\n  const initialData = await hasura.request(Users);\r\n  const ProjectData = await hasura.request(Projects);\r\n  const CandidatsData = await hasura.request(Candidats);\r\n  const Events = await hasura.request(GetEvents);\r\n\r\n  return {\r\n    props: {\r\n      initialData,\r\n      ProjectData,\r\n      CandidatsData,\r\n      Events,\r\n    },\r\n    revalidate: 1,\r\n  };\r\n};\r\n\r\nexport default function Home({\r\n  initialData,\r\n  ProjectData,\r\n  CandidatsData,\r\n  Events,\r\n}) {\r\n  const { isAuthenticated, user } = useAuthState();\r\n\r\n  const hasura = hasuraUserClient();\r\n  const router = useRouter();\r\n  console.log(ProjectData);\r\n  const { data } = useSWR(Users, (query) => hasura.request(query), {\r\n    initialData,\r\n    revalidateOnMount: true,\r\n  });\r\n  useEffect(() => {\r\n    if (isAuthenticated) {\r\n      router.push(`/login`);\r\n    } else {\r\n      return null;\r\n    }\r\n  }, []);\r\n  const { dataEvents } = useSWR(GetEvents, (query) => hasura.request(query), {\r\n    Events,\r\n    revalidateOnMount: true,\r\n  });\r\n  return (\r\n    <>\r\n      <div className=\"page-content-wrapper\">\r\n        <div className=\"page-content\" style={{ minHeight: 1500 }}>\r\n          <h1 class=\"page-title\"> Admin Dashboard</h1>\r\n          <small>statistics, charts, recent events and reports</small>\r\n          <div class=\"row\">\r\n            <div class=\"col-lg-3 col-md-3 col-sm-6 col-xs-12\">\r\n              <a class=\"dashboard-stat dashboard-stat-v2 blue\" href=\"#\">\r\n                <div class=\"visual\">\r\n                  <i class=\"fa fa-comments\"></i>\r\n                </div>\r\n                <div class=\"details\">\r\n                  <div class=\"number\">\r\n                    <span data-counter=\"counterup\" data-value=\"1349\">\r\n                      {data.User_aggregate.aggregate.count}\r\n                    </span>\r\n                  </div>\r\n                  <div class=\"desc\"> Users </div>\r\n                </div>\r\n              </a>\r\n            </div>\r\n            <div class=\"col-lg-3 col-md-3 col-sm-6 col-xs-12\">\r\n              <a class=\"dashboard-stat dashboard-stat-v2 red\" href=\"#\">\r\n                <div class=\"visual\">\r\n                  <i class=\"fa fa-bar-chart-o\"></i>\r\n                </div>\r\n                <div class=\"details\">\r\n                  <div class=\"number\">\r\n                    <span data-counter=\"counterup\" data-value=\"12,5\"></span>\r\n                    {ProjectData.Project_aggregate.aggregate.count}\r\n                  </div>\r\n                  <div class=\"desc\"> Projects </div>\r\n                </div>\r\n              </a>\r\n            </div>\r\n            <div class=\"col-lg-3 col-md-3 col-sm-6 col-xs-12\">\r\n              <a class=\"dashboard-stat dashboard-stat-v2 green\" href=\"#\">\r\n                <div class=\"visual\">\r\n                  <i class=\"fa fa-shopping-cart\"></i>\r\n                </div>\r\n                <div class=\"details\">\r\n                  <div class=\"number\">\r\n                    <span data-counter=\"counterup\" data-value=\"549\">\r\n                      {CandidatsData.Candidate_aggregate.aggregate.count}\r\n                    </span>\r\n                  </div>\r\n                  <div class=\"desc\"> Pending Candidats </div>\r\n                </div>\r\n              </a>\r\n            </div>\r\n            <div class=\"col-lg-3 col-md-3 col-sm-6 col-xs-12\">\r\n              <a class=\"dashboard-stat dashboard-stat-v2 purple\" href=\"#\">\r\n                <div class=\"visual\">\r\n                  <i class=\"fa fa-globe\"></i>\r\n                </div>\r\n                <div class=\"details\">\r\n                  <div class=\"number\">\r\n                    {\" \"}\r\n                    +<span\r\n                      data-counter=\"counterup\"\r\n                      data-value=\"89\"\r\n                    ></span>%{\" \"}\r\n                  </div>\r\n                  <div class=\"desc\"> Brand Popularity </div>\r\n                </div>\r\n              </a>\r\n            </div>{\" \"}\r\n          </div>{\" \"}\r\n          <FullCalendar\r\n            plugins={[\r\n              dayGridPlugin,\r\n              timeGridPlugin,\r\n              interactionPlugin,\r\n              listPlugin,\r\n            ]}\r\n            headerToolbar={{\r\n              left: \"prev,next today\",\r\n              center: \"title\",\r\n              right: \"dayGridMonth,timeGridWeek,timeGridDay,listWeek\",\r\n            }}\r\n            initialView=\"dayGridMonth\"\r\n            editable={true}\r\n            selectable={true}\r\n            selectMirror={true}\r\n            dayMaxEvents={true}\r\n            eventRemove\r\n            events={Events.Event.map(({ id, Title, start_date }) => {\r\n              return { title: Title, date: start_date };\r\n            })}\r\n            eventColor=\"#378006\"\r\n\r\n            // weekends={this.state.weekendsVisible}\r\n            // initialEvents={INITIAL_EVENTS} // alternatively, use the `events` setting to fetch from a feed\r\n            // select={this.handleDateSelect}\r\n            // eventContent={renderEventContent} // custom render function\r\n            // eventsSet={this.handleEvents} // called after events are initialized/added/changed/removed\r\n            /* you can update a remote database when these fire:\r\n                eventAdd={function(){}}\r\n                eventChange={function(){}}\r\n                */\r\n          />\r\n          <div class=\"clearfix\"></div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}