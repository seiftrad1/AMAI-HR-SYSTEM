{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport useSWR, { mutate } from \"swr\";\nimport formatRelative from \"date-fns/formatRelative\";\nimport differenceInMinutes from \"date-fns/differenceInMinutes\";\nimport Link from \"next/link\";\nimport Layout from \"../pages/Components/Layout\";\nimport gql from \"graphql-tag\";\nimport { useRouter } from \"next/router\";\nimport { hasuraUserClient } from \"../lib/hasura-user-client\";\nconst today = new Date();\nconst GetCandidats = gql`\n  query MyQuery {\n    Candidate {\n      Email\n      Last_Name\n      Name\n      domain\n      id\n      phone_number\n      Status\n    }\n  }\n`;\nexport const getStaticProps = async () => {\n  const hasura = hasuraUserClient();\n  const initialData = await hasura.request(GetCandidats);\n  return {\n    props: {\n      initialData\n    },\n    revalidate: 1\n  };\n};\nexport default function MembersPage({\n  initialData\n}) {\n  const hasura = hasuraUserClient();\n  const router = useRouter();\n  const {\n    data\n  } = useSWR(GetCandidats, query => hasura.request(query), {\n    initialData,\n    revalidateOnMount: true\n  });\n\n  const deleteATodo = async id => {\n    const query = gql`\n      mutation delete_Candidate($id: Int!) {\n        delete_Candidate(where: { id: { _eq: $id } }) {\n          affected_rows\n        }\n      }\n    `;\n\n    try {\n      await hasura.request(query, {\n        id\n      });\n      mutate();\n      window.location.reload();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const updateStatus = async id => {\n    const SetStatus = gql`\n      mutation MyMutation($id: Int!) {\n        update_Candidate_by_pk(pk_columns: { id: $id }, _set: { Status: 1 }) {\n          id\n          Status\n        }\n      }\n    `;\n\n    try {\n      await hasura.request(SetStatus, {\n        id\n      });\n      mutate();\n      window.location.reload();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const DeclineCandidat = async id => {\n    const SetStatus = gql`\n      mutation MyMutation($id: Int!) {\n        update_Candidate_by_pk(pk_columns: { id: $id }, _set: { Status: 0 }) {\n          id\n          Status\n        }\n      }\n    `;\n\n    try {\n      await hasura.request(SetStatus, {\n        id\n      });\n      mutate();\n      window.location.reload();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const Modify = async ({\n    id\n  }) => {\n    console.log(id);\n    router.push(`/CandidatOne/${id}`);\n  };\n\n  return __jsx(Layout, null, __jsx(\"div\", {\n    className: \"page-content-wrapper\"\n  }, __jsx(\"div\", {\n    className: \"page-content\",\n    style: {\n      minHeight: 1500\n    }\n  }, __jsx(\"div\", {\n    class: \"row\"\n  }, __jsx(\"div\", {\n    class: \"col-md-12\"\n  }, __jsx(\"div\", {\n    class: \"portlet light bordered\"\n  }, __jsx(\"div\", {\n    class: \"portlet-title\"\n  }, __jsx(\"div\", {\n    class: \"caption font-dark\"\n  }, __jsx(\"i\", {\n    class: \"icon-settings font-dark\"\n  }), __jsx(\"span\", {\n    class: \"caption-subject bold uppercase\"\n  }, \" \", \"Individual column searching (select inputs)\")), __jsx(\"div\", {\n    class: \"actions\"\n  }, __jsx(\"div\", {\n    class: \"btn-group btn-group-devided\",\n    \"data-toggle\": \"buttons\"\n  }, __jsx(\"label\", {\n    class: \"btn btn-transparent dark btn-outline btn-circle btn-sm active\"\n  }, __jsx(\"input\", {\n    type: \"radio\",\n    name: \"options\",\n    class: \"toggle\",\n    id: \"option1\"\n  }), \"Actions\"), __jsx(\"label\", {\n    class: \"btn btn-transparent dark btn-outline btn-circle btn-sm\"\n  }, __jsx(\"input\", {\n    type: \"radio\",\n    name: \"options\",\n    class: \"toggle\",\n    id: \"option2\"\n  }), \"Settings\")))), __jsx(\"div\", {\n    class: \"portlet-body\"\n  }, __jsx(\"div\", {\n    class: \"table-toolbar\"\n  }, __jsx(\"div\", {\n    class: \"row\"\n  }, __jsx(\"div\", {\n    class: \"col-md-6\"\n  }, __jsx(\"div\", {\n    class: \"btn-group\"\n  }, __jsx(\"button\", {\n    id: \"sample_editable_1_2_new\",\n    class: \"btn sbold green\"\n  }, \" \", \"Add New\", __jsx(\"i\", {\n    class: \"fa fa-plus\"\n  })))), __jsx(\"div\", {\n    class: \"col-md-6\"\n  }, __jsx(\"div\", {\n    class: \"btn-group pull-right\"\n  }, __jsx(\"button\", {\n    class: \"btn green  btn-outline dropdown-toggle\",\n    \"data-toggle\": \"dropdown\"\n  }, \"Tools\", __jsx(\"i\", {\n    class: \"fa fa-angle-down\"\n  })), __jsx(\"ul\", {\n    class: \"dropdown-menu pull-right\"\n  }, __jsx(\"li\", null, __jsx(\"a\", {\n    href: \"javascript:;\"\n  }, __jsx(\"i\", {\n    class: \"fa fa-print\"\n  }), \" Print\", \" \")), __jsx(\"li\", null, __jsx(\"a\", {\n    href: \"javascript:;\"\n  }, __jsx(\"i\", {\n    class: \"fa fa-file-pdf-o\"\n  }), \" Save as PDF\", \" \")), __jsx(\"li\", null, __jsx(\"a\", {\n    href: \"javascript:;\"\n  }, __jsx(\"i\", {\n    class: \"fa fa-file-excel-o\"\n  }), \" Export to Excel\", \" \"))))))), __jsx(\"table\", {\n    class: \"table table-striped table-bordered table-hover table-checkable order-column\",\n    id: \"sample_1_2\"\n  }, __jsx(\"thead\", null, __jsx(\"tr\", null, __jsx(\"th\", null, __jsx(\"label\", {\n    class: \"mt-checkbox mt-checkbox-single mt-checkbox-outline\"\n  }, __jsx(\"input\", {\n    type: \"checkbox\",\n    class: \"group-checkable\",\n    \"data-set\": \"#sample_1_2 .checkboxes\"\n  }), __jsx(\"span\", null))), __jsx(\"th\", null, \" Username \"), __jsx(\"th\", null, \" Email \"), __jsx(\"th\", null, \" Status \"), __jsx(\"th\", null, \" Joined \"), __jsx(\"th\", null, \" Actions \"))), __jsx(\"tfoot\", null, __jsx(\"tr\", null, __jsx(\"th\", null, \" \"), __jsx(\"th\", null, \" \"), __jsx(\"th\", null, \" \"), __jsx(\"th\", null, \" \"), __jsx(\"th\", null, \" \"), __jsx(\"th\", null, \" \"))), __jsx(\"tbody\", null, data.Candidate.map(({\n    Email,\n    Last_Name,\n    Name,\n    domain,\n    id,\n    phone_number,\n    Status\n  }) => {\n    return __jsx(\"tr\", {\n      key: id,\n      class: \"odd gradeX\"\n    }, __jsx(\"td\", null, __jsx(\"label\", {\n      class: \"mt-checkbox mt-checkbox-single mt-checkbox-outline\"\n    }, __jsx(\"input\", {\n      type: \"checkbox\",\n      class: \"checkboxes\",\n      value: \"1\"\n    }), __jsx(\"span\", null))), __jsx(\"td\", null, Name), __jsx(\"td\", null, __jsx(\"a\", {\n      href: \"mailto:shuxer@gmail.com\"\n    }, \" \", Email)), __jsx(\"td\", null, Status === 1 ? __jsx(\"span\", {\n      class: \"label label-sm label-success\"\n    }, \" \", \"Approved\", \" \") : __jsx(\"span\", {\n      class: \"label label-sm label-success\"\n    }, \" \", \"OnHold\", \" \")), __jsx(\"td\", {\n      class: \"center\"\n    }, \" 12 Jan 2012 \"), __jsx(\"td\", null, __jsx(\"div\", {\n      class: \"btn-group\"\n    }, __jsx(\"button\", {\n      class: \"btn btn-xs green dropdown-toggle\",\n      type: \"button\",\n      \"data-toggle\": \"dropdown\",\n      \"aria-expanded\": \"false\"\n    }, \" \", \"Actions\", __jsx(\"i\", {\n      class: \"fa fa-angle-down\"\n    })), __jsx(\"ul\", {\n      class: \"dropdown-menu pull-left\",\n      role: \"menu\"\n    }, __jsx(\"li\", null, __jsx(\"a\", {\n      href: \"javascript:;\"\n    }, __jsx(\"i\", {\n      class: \"icon-docs\"\n    }), \" New Post\", \" \")), __jsx(\"li\", null, __jsx(\"a\", {\n      href: \"javascript:;\"\n    }, __jsx(\"i\", {\n      class: \"icon-tag\"\n    }), \" New Comment\", \" \")), __jsx(\"li\", null, __jsx(\"a\", {\n      href: \"javascript:;\"\n    }, __jsx(\"i\", {\n      class: \"icon-user\"\n    }), \" New User\", \" \")), __jsx(\"li\", {\n      class: \"divider\"\n    }, \" \"), __jsx(\"li\", null, __jsx(\"a\", {\n      href: \"javascript:;\"\n    }, __jsx(\"i\", {\n      class: \"icon-flag\"\n    }), \" Comments\", __jsx(\"span\", {\n      class: \"badge badge-success\"\n    }, \"4\"))), __jsx(\"li\", null, __jsx(\"a\", {\n      className: \"closeBtn\",\n      onClick: () => deleteATodo(id)\n    }, \"Delete User\")), __jsx(\"li\", null, __jsx(\"a\", {\n      className: \"closeBtn\",\n      onClick: () => updateStatus(id)\n    }, \"Approve Candidat\")), \" \", __jsx(\"li\", null, __jsx(\"a\", {\n      className: \"closeBtn\",\n      onClick: () => DeclineCandidat(id)\n    }, \"Decline Candidat\")), \" \", __jsx(\"li\", null, __jsx(Link, {\n      href: `/CandidatOne/${id}`\n    }, __jsx(\"a\", null, \"Edit\")))))));\n  }))))))))));\n}","map":null,"metadata":{},"sourceType":"module"}