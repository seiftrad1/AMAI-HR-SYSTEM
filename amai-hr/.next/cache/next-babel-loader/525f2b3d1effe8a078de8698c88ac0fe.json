{"ast":null,"code":"import { useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useAuthState } from \"../../context/auth\";\nimport { gql, hasuraUserClient } from \"../../lib/hasura-user-client\";\nconst UpdateUserLastSeen = gql`\n  mutation UpdateUserLastSeen($id: uuid!, $now: timestamptz!, $url: String) {\n    update_User(\n      where: { id: { _eq: $id } }\n      _set: { last_seen: $now, last_seen_url: $url }\n    ) {\n      returning {\n        last_seen\n        last_seen_url\n      }\n    }\n  }\n`;\nexport default function LastSeen({\n  children\n}) {\n  const router = useRouter();\n  const {\n    isAuthenticated,\n    user,\n    save_last_seen\n  } = useAuthState();\n  useEffect(() => {\n    if (!isAuthenticated || !save_last_seen) return; // updateLastSeen(router.pathname);\n\n    router.events.on(\"routeChangeComplete\", updateLastSeen);\n    return () => router.events.off(\"routeChangeComplete\", updateLastSeen);\n  }, [isAuthenticated, save_last_seen]);\n\n  const updateLastSeen = async url => {\n    const hasura = hasuraUserClient();\n    await hasura.request(UpdateUserLastSeen, {\n      id: user.id,\n      now: new Date().toISOString(),\n      url\n    });\n  };\n\n  return children;\n}","map":{"version":3,"sources":["C:/Users/msdtt/OneDrive/Documents/amai_hr_next_js_hasura/amai-hr/pages/Components/LastSeen.js"],"names":["useEffect","useRouter","useAuthState","gql","hasuraUserClient","UpdateUserLastSeen","LastSeen","children","router","isAuthenticated","user","save_last_seen","events","on","updateLastSeen","off","url","hasura","request","id","now","Date","toISOString"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,SAASC,YAAT,QAA6B,oBAA7B;AACA,SAASC,GAAT,EAAcC,gBAAd,QAAsC,8BAAtC;AAEA,MAAMC,kBAAkB,GAAGF,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAZA;AAcA,eAAe,SAASG,QAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAAgC;AAC7C,QAAMC,MAAM,GAAGP,SAAS,EAAxB;AACA,QAAM;AAAEQ,IAAAA,eAAF;AAAmBC,IAAAA,IAAnB;AAAyBC,IAAAA;AAAzB,MAA4CT,YAAY,EAA9D;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACS,eAAD,IAAoB,CAACE,cAAzB,EAAyC,OAD3B,CAGd;;AAEAH,IAAAA,MAAM,CAACI,MAAP,CAAcC,EAAd,CAAiB,qBAAjB,EAAwCC,cAAxC;AAEA,WAAO,MAAMN,MAAM,CAACI,MAAP,CAAcG,GAAd,CAAkB,qBAAlB,EAAyCD,cAAzC,CAAb;AACD,GARQ,EAQN,CAACL,eAAD,EAAkBE,cAAlB,CARM,CAAT;;AAUA,QAAMG,cAAc,GAAG,MAAOE,GAAP,IAAe;AACpC,UAAMC,MAAM,GAAGb,gBAAgB,EAA/B;AAEA,UAAMa,MAAM,CAACC,OAAP,CAAeb,kBAAf,EAAmC;AACvCc,MAAAA,EAAE,EAAET,IAAI,CAACS,EAD8B;AAEvCC,MAAAA,GAAG,EAAE,IAAIC,IAAJ,GAAWC,WAAX,EAFkC;AAGvCN,MAAAA;AAHuC,KAAnC,CAAN;AAKD,GARD;;AAUA,SAAOT,QAAP;AACD","sourcesContent":["import { useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\n\nimport { useAuthState } from \"../../context/auth\";\nimport { gql, hasuraUserClient } from \"../../lib/hasura-user-client\";\n\nconst UpdateUserLastSeen = gql`\n  mutation UpdateUserLastSeen($id: uuid!, $now: timestamptz!, $url: String) {\n    update_User(\n      where: { id: { _eq: $id } }\n      _set: { last_seen: $now, last_seen_url: $url }\n    ) {\n      returning {\n        last_seen\n        last_seen_url\n      }\n    }\n  }\n`;\n\nexport default function LastSeen({ children }) {\n  const router = useRouter();\n  const { isAuthenticated, user, save_last_seen } = useAuthState();\n\n  useEffect(() => {\n    if (!isAuthenticated || !save_last_seen) return;\n\n    // updateLastSeen(router.pathname);\n\n    router.events.on(\"routeChangeComplete\", updateLastSeen);\n\n    return () => router.events.off(\"routeChangeComplete\", updateLastSeen);\n  }, [isAuthenticated, save_last_seen]);\n\n  const updateLastSeen = async (url) => {\n    const hasura = hasuraUserClient();\n\n    await hasura.request(UpdateUserLastSeen, {\n      id: user.id,\n      now: new Date().toISOString(),\n      url,\n    });\n  };\n\n  return children;\n}\n"]},"metadata":{},"sourceType":"module"}