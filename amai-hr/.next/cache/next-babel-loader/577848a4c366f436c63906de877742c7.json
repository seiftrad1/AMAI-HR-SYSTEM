{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\msdtt\\\\OneDrive\\\\Documents\\\\amai_hr_next_js_hasura\\\\amai-hr\\\\pages\\\\Todo.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useForm } from \"react-hook-form\";\nimport useSWR, { mutate } from \"swr\";\nimport { useAuthState, useAuthDispatch } from \"../context/auth\";\nimport { gql, hasuraAdminClient } from \"../lib/hasura-admin-client\";\nimport { hasuraUserClient } from \"../lib/hasura-user-client\";\nconst from = new Date().toISOString();\nconst GetUsers = gql`\n  {\n    User(where: { _not: { todo_users: {} } }, order_by: { created_at: desc }) {\n      Name\n      id\n      notifications_aggregate(where: { seen: { _eq: false } }) {\n        aggregate {\n          count\n        }\n      }\n      notifications(where: { seen: { _eq: false } }) {\n        id\n        description\n      }\n    }\n  }\n`;\nconst GetUsersOn = gql`\n  {\n    User(where: { todo_users: {} }, order_by: { created_at: desc }) {\n      Name\n      id\n      email\n    }\n  }\n`;\nconst GetTodos = gql`\n  {\n    Todo(where: { Type: { _eq: \"Onboarding\" } }, order_by: { id: asc }) {\n      id\n      Description\n      Name\n    }\n  }\n`;\nconst GetUserById = gql`\n  query GetUserById($user_id: Int!) {\n    User_by_pk(id: $user_id) {\n      id\n      notifications_aggregate(where: { seen: { _eq: false } }) {\n        aggregate {\n          count\n        }\n      }\n      notifications(where: { seen: { _eq: false } }) {\n        id\n        description\n      }\n    }\n  }\n`;\nconst AddNotification = gql`\n  mutation MyMutation($user_id: Int!) {\n    insert_notification_one(\n      object: {\n        user_id: $user_id\n        name: \"Onboarding\"\n        seen: false\n        description: \"you are assigned to your onboarding tasks. \"\n      }\n    ) {\n      user_id\n      seen\n      name\n      id\n      description\n    }\n  }\n`;\nconst InsertTask = gql`\n  mutation InsertTask(\n    $Description: String!\n    $Name: String!\n    $from: timestamptz!\n  ) {\n    insert_Todo_one(\n      object: {\n        Description: $Description\n        Name: $Name\n        Date: $from\n        Type: \"Onboarding\"\n      }\n    ) {\n      Description\n      Date\n      Name\n    }\n  }\n`;\nconst deleteTodo = gql`\n  mutation MyMutation($id: Int!) {\n    delete_Todo_by_pk(id: $id) {\n      id\n    }\n  }\n`;\nexport const getStaticProps = async () => {\n  const {\n    Usert\n  } = await hasuraAdminClient.request(GetUsers);\n  const initialData = await hasuraAdminClient.request(GetTodos);\n  const UserOn = await hasuraAdminClient.request(GetUsersOn);\n  return {\n    props: {\n      Usert,\n      initialData,\n      UserOn\n    }\n  };\n};\nexport default function Todos({\n  Usert,\n  initialData,\n  UserOn\n}) {\n  const router = useRouter();\n  const {\n    isAuthenticated,\n    user\n  } = useAuthState();\n  const hasura = hasuraUserClient();\n  const {\n    handleSubmit,\n    register,\n    control,\n    errors,\n    formState: {\n      isSubmitting\n    }\n  } = useForm();\n  const {\n    updateUser\n  } = useAuthDispatch();\n  const {\n    register: register2,\n    errors: errors2,\n    handleSubmit: handleSubmit2\n  } = useForm();\n  useEffect(() => {\n    if (!isAuthenticated) router.push(\"/\");\n  }, [isAuthenticated]);\n  if (!isAuthenticated) return null;\n  const {\n    data\n  } = useSWR(GetTodos, query => hasura.request(query), {\n    initialData,\n    revalidateOnMount: true\n  });\n  const {\n    datau\n  } = useSWR(GetUsersOn, query => hasura.request(query), {\n    UserOn,\n    revalidateOnMount: true\n  });\n\n  const onSubmit = async ({\n    Description,\n    Name\n  }) => {\n    console.log(from);\n\n    try {\n      const {\n        insert_Todo_one\n      } = await hasura.request(InsertTask, {\n        Description,\n        from,\n        Name\n      });\n      window.location.reload();\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const Assign = async ({\n    user_id\n  }) => {\n    const u_id = user_id;\n    const t = data.Todo.map(({\n      id\n    }) => {\n      return {\n        todo_id: id,\n        user_id: u_id,\n        completed: false\n      };\n    });\n    const query = gql`\n      mutation insert_todo_user($objects: [todo_user_insert_input!]!) {\n        insert_todo_user(objects: $objects) {\n          affected_rows\n        }\n      }\n    `;\n\n    if (confirm(`are you sure you want to assign those tasks to this employee`)) {\n      try {\n        const {\n          insert_todo_user\n        } = await hasura.request(query, {\n          objects: t\n        });\n        const {\n          insert_notification_one\n        } = await hasura.request(AddNotification, {\n          user_id: u_id\n        });\n        mutate();\n        window.location.reload();\n      } catch (error) {\n        console.error(error);\n      }\n    } else {\n      return null;\n    }\n  };\n\n  const deleteATodo = async id => {\n    if (confirm(\"are you sure you want to delete this todo?\")) {\n      try {\n        await hasura.request(deleteTodo, {\n          id\n        });\n        mutate();\n        window.location.reload();\n      } catch (error) {\n        console.error(error);\n      }\n    } else {\n      return null;\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: \"page-content-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"page-content\",\n    style: {\n      minHeight: 1500\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    class: \"profile-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    class: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 11\n    }\n  }, \" \", __jsx(\"div\", {\n    class: \"col-md-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    class: \"portlet light \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    class: \"portlet-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 17\n    }\n  }, __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 19\n    }\n  }, \" onboarding Tasks\"), __jsx(\"div\", {\n    class: \"table-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 19\n    }\n  }, __jsx(\"table\", {\n    class: \"table table-striped table-bordered table-hover\",\n    id: \"sample_3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 21\n    }\n  }, __jsx(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 23\n    }\n  }, __jsx(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 25\n    }\n  }, \" \", __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 27\n    }\n  }, \" title \"), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 27\n    }\n  }, \" task \"), \" \", __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 43\n    }\n  }, \" Edit \"), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 27\n    }\n  }, \" Delete \"))), __jsx(\"tfoot\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 23\n    }\n  }, __jsx(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 25\n    }\n  }, __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 27\n    }\n  }, \" \"), \" \", __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 38\n    }\n  }, \" \"), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 27\n    }\n  }, \" \"), \" \", __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 38\n    }\n  }, \" \"))), __jsx(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 23\n    }\n  }, data.Todo.map(({\n    id,\n    Description,\n    Name\n  }) => {\n    return __jsx(\"tr\", {\n      key: id,\n      class: \"odd gradeX\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 29\n      }\n    }, __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 31\n      }\n    }, Name), __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 31\n      }\n    }, Description), \" \", __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 31\n      }\n    }, __jsx(\"a\", {\n      class: \"btn btn-circle blue btn-sm \",\n      href: `/todo/${id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 33\n      }\n    }, \"edit\")), \" \", __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 31\n      }\n    }, __jsx(\"button\", {\n      class: \"btn btn-circle red btn-sm \",\n      onClick: () => deleteATodo(id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 33\n      }\n    }, \" \", \"delete\")));\n  }))), \" \")))), __jsx(\"div\", {\n    class: \"col-md-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    class: \"portlet light \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    class: \"portlet-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 17\n    }\n  }, __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 19\n    }\n  }, \"Add new onboarding Task\"), __jsx(\"div\", {\n    class: \"tab-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 19\n    }\n  }, __jsx(\"div\", {\n    class: \"tab-pane active\",\n    id: \"tab_1_1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 21\n    }\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 23\n    }\n  }, __jsx(\"div\", {\n    class: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 25\n    }\n  }, __jsx(\"label\", {\n    class: \"control-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 27\n    }\n  }, \"Name\"), __jsx(\"input\", {\n    name: \"Name\",\n    id: \"Name\",\n    type: \"text\",\n    placeholder: \"Todo Name\",\n    class: \"form-control\",\n    ref: register,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 27\n    }\n  }), \" \"), __jsx(\"div\", {\n    class: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 25\n    }\n  }, __jsx(\"label\", {\n    class: \"control-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 27\n    }\n  }, \"Description\"), __jsx(\"textarea\", {\n    name: \"Description\",\n    id: \"Description\",\n    type: \"textarea\",\n    placeholder: \"Description\",\n    class: \"form-control\",\n    ref: register,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 27\n    }\n  }), \" \"), \" \", __jsx(\"div\", {\n    class: \"margiv-top-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 25\n    }\n  }, __jsx(\"button\", {\n    type: \"submit\",\n    class: \"btn green\",\n    disabled: isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 27\n    }\n  }, \" \", \"Save Changes\", \" \"))))))), __jsx(\"div\", {\n    class: \"portlet light \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    class: \"portlet-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 17\n    }\n  }, __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 19\n    }\n  }, \"Assign tasks to:\"), __jsx(\"div\", {\n    class: \"tab-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 19\n    }\n  }, __jsx(\"div\", {\n    class: \"tab-pane active\",\n    id: \"tab_1_1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 21\n    }\n  }, \" \", __jsx(\"form\", {\n    onSubmit: handleSubmit2(Assign),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 23\n    }\n  }, \" \", __jsx(\"div\", {\n    class: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 25\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 27\n    }\n  }, \"new users:\"), __jsx(\"select\", {\n    name: \"user_id\",\n    id: \"user_id\",\n    ref: register2,\n    required: true,\n    className: \"form-control select2 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 27\n    }\n  }, Usert.map(({\n    id,\n    Name\n  }) => __jsx(React.Fragment, {\n    key: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 31\n    }\n  }, \" \", __jsx(\"option\", {\n    value: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 33\n    }\n  }, Name))))), __jsx(\"div\", {\n    class: \"btn-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 25\n    }\n  }, __jsx(\"button\", {\n    className: \"btn green\",\n    type: \"submit\",\n    disabled: isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 27\n    }\n  }, \" \", \"Assign\")), \" \"))))), \" \", __jsx(\"div\", {\n    class: \"portlet light \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    class: \"portlet-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 17\n    }\n  }, __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 19\n    }\n  }, \"Assign tasks to:\"), __jsx(\"div\", {\n    class: \"tab-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 19\n    }\n  }, __jsx(\"div\", {\n    class: \"tab-pane active\",\n    id: \"tab_1_1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 21\n    }\n  }, datau.User.map(({\n    id,\n    Name,\n    email\n  }) => __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 25\n    }\n  }, Name))))))), \" \"))), \" \");\n}","map":{"version":3,"sources":["C:/Users/msdtt/OneDrive/Documents/amai_hr_next_js_hasura/amai-hr/pages/Todo.js"],"names":["useEffect","useRouter","useForm","useSWR","mutate","useAuthState","useAuthDispatch","gql","hasuraAdminClient","hasuraUserClient","from","Date","toISOString","GetUsers","GetUsersOn","GetTodos","GetUserById","AddNotification","InsertTask","deleteTodo","getStaticProps","Usert","request","initialData","UserOn","props","Todos","router","isAuthenticated","user","hasura","handleSubmit","register","control","errors","formState","isSubmitting","updateUser","register2","errors2","handleSubmit2","push","data","query","revalidateOnMount","datau","onSubmit","Description","Name","console","log","insert_Todo_one","window","location","reload","err","Assign","user_id","u_id","t","Todo","map","id","todo_id","completed","confirm","insert_todo_user","objects","insert_notification_one","error","deleteATodo","minHeight","User","email"],"mappings":"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","sourcesContent":["import { useEffect } from \"react\";\r\nimport { useRouter } from \"next/router\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport useSWR, { mutate } from \"swr\";\r\n\r\nimport { useAuthState, useAuthDispatch } from \"../context/auth\";\r\nimport { gql, hasuraAdminClient } from \"../lib/hasura-admin-client\";\r\nimport { hasuraUserClient } from \"../lib/hasura-user-client\";\r\n\r\nconst from = new Date().toISOString();\r\n\r\nconst GetUsers = gql`\r\n  {\r\n    User(where: { _not: { todo_users: {} } }, order_by: { created_at: desc }) {\r\n      Name\r\n      id\r\n      notifications_aggregate(where: { seen: { _eq: false } }) {\r\n        aggregate {\r\n          count\r\n        }\r\n      }\r\n      notifications(where: { seen: { _eq: false } }) {\r\n        id\r\n        description\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst GetUsersOn = gql`\r\n  {\r\n    User(where: { todo_users: {} }, order_by: { created_at: desc }) {\r\n      Name\r\n      id\r\n      email\r\n    }\r\n  }\r\n`;\r\nconst GetTodos = gql`\r\n  {\r\n    Todo(where: { Type: { _eq: \"Onboarding\" } }, order_by: { id: asc }) {\r\n      id\r\n      Description\r\n      Name\r\n    }\r\n  }\r\n`;\r\nconst GetUserById = gql`\r\n  query GetUserById($user_id: Int!) {\r\n    User_by_pk(id: $user_id) {\r\n      id\r\n      notifications_aggregate(where: { seen: { _eq: false } }) {\r\n        aggregate {\r\n          count\r\n        }\r\n      }\r\n      notifications(where: { seen: { _eq: false } }) {\r\n        id\r\n        description\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst AddNotification = gql`\r\n  mutation MyMutation($user_id: Int!) {\r\n    insert_notification_one(\r\n      object: {\r\n        user_id: $user_id\r\n        name: \"Onboarding\"\r\n        seen: false\r\n        description: \"you are assigned to your onboarding tasks. \"\r\n      }\r\n    ) {\r\n      user_id\r\n      seen\r\n      name\r\n      id\r\n      description\r\n    }\r\n  }\r\n`;\r\n\r\nconst InsertTask = gql`\r\n  mutation InsertTask(\r\n    $Description: String!\r\n    $Name: String!\r\n    $from: timestamptz!\r\n  ) {\r\n    insert_Todo_one(\r\n      object: {\r\n        Description: $Description\r\n        Name: $Name\r\n        Date: $from\r\n        Type: \"Onboarding\"\r\n      }\r\n    ) {\r\n      Description\r\n      Date\r\n      Name\r\n    }\r\n  }\r\n`;\r\nconst deleteTodo = gql`\r\n  mutation MyMutation($id: Int!) {\r\n    delete_Todo_by_pk(id: $id) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nexport const getStaticProps = async () => {\r\n  const { Usert } = await hasuraAdminClient.request(GetUsers);\r\n  const initialData = await hasuraAdminClient.request(GetTodos);\r\n  const UserOn = await hasuraAdminClient.request(GetUsersOn);\r\n  return {\r\n    props: {\r\n      Usert,\r\n      initialData,\r\n      UserOn,\r\n    },\r\n  };\r\n};\r\n\r\nexport default function Todos({ Usert, initialData, UserOn }) {\r\n  const router = useRouter();\r\n  const { isAuthenticated, user } = useAuthState();\r\n  const hasura = hasuraUserClient();\r\n  const {\r\n    handleSubmit,\r\n    register,\r\n    control,\r\n    errors,\r\n    formState: { isSubmitting },\r\n  } = useForm();\r\n  const { updateUser } = useAuthDispatch();\r\n  const {\r\n    register: register2,\r\n    errors: errors2,\r\n    handleSubmit: handleSubmit2,\r\n  } = useForm();\r\n  useEffect(() => {\r\n    if (!isAuthenticated) router.push(\"/\");\r\n  }, [isAuthenticated]);\r\n\r\n  if (!isAuthenticated) return null;\r\n  const { data } = useSWR(GetTodos, (query) => hasura.request(query), {\r\n    initialData,\r\n    revalidateOnMount: true,\r\n  });\r\n  const { datau } = useSWR(GetUsersOn, (query) => hasura.request(query), {\r\n    UserOn,\r\n    revalidateOnMount: true,\r\n  });\r\n  const onSubmit = async ({ Description, Name }) => {\r\n    console.log(from);\r\n    try {\r\n      const { insert_Todo_one } = await hasura.request(InsertTask, {\r\n        Description,\r\n        from,\r\n        Name,\r\n      });\r\n\r\n      window.location.reload();\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const Assign = async ({ user_id }) => {\r\n    const u_id = user_id;\r\n    const t = data.Todo.map(({ id }) => {\r\n      return { todo_id: id, user_id: u_id, completed: false };\r\n    });\r\n    const query = gql`\r\n      mutation insert_todo_user($objects: [todo_user_insert_input!]!) {\r\n        insert_todo_user(objects: $objects) {\r\n          affected_rows\r\n        }\r\n      }\r\n    `;\r\n    if (\r\n      confirm(`are you sure you want to assign those tasks to this employee`)\r\n    ) {\r\n      try {\r\n        const { insert_todo_user } = await hasura.request(query, {\r\n          objects: t,\r\n        });\r\n        const { insert_notification_one } = await hasura.request(\r\n          AddNotification,\r\n          { user_id: u_id }\r\n        );\r\n        mutate();\r\n        window.location.reload();\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n  const deleteATodo = async (id) => {\r\n    if (confirm(\"are you sure you want to delete this todo?\")) {\r\n      try {\r\n        await hasura.request(deleteTodo, { id });\r\n        mutate();\r\n        window.location.reload();\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"page-content-wrapper\">\r\n      <div className=\"page-content\" style={{ minHeight: 1500 }}>\r\n        <div class=\"profile-content\">\r\n          <div class=\"row\">\r\n            {\" \"}\r\n            <div class=\"col-md-8\">\r\n              <div class=\"portlet light \">\r\n                <div class=\"portlet-body\">\r\n                  <h3> onboarding Tasks</h3>\r\n\r\n                  <div class=\"table-container\">\r\n                    <table\r\n                      class=\"table table-striped table-bordered table-hover\"\r\n                      id=\"sample_3\"\r\n                    >\r\n                      <thead>\r\n                        <tr>\r\n                          {\" \"}\r\n                          <th> title </th>\r\n                          <th> task </th> <th> Edit </th>\r\n                          <th> Delete </th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tfoot>\r\n                        <tr>\r\n                          <th> </th> <th> </th>\r\n                          <th> </th> <th> </th>\r\n                        </tr>\r\n                      </tfoot>\r\n                      <tbody>\r\n                        {data.Todo.map(({ id, Description, Name }) => {\r\n                          return (\r\n                            <tr key={id} class=\"odd gradeX\">\r\n                              <td>{Name}</td>\r\n                              <td>{Description}</td>{\" \"}\r\n                              <td>\r\n                                <a\r\n                                  class=\"btn btn-circle blue btn-sm \"\r\n                                  href={`/todo/${id}`}\r\n                                >\r\n                                  edit\r\n                                </a>\r\n                              </td>{\" \"}\r\n                              <td>\r\n                                <button\r\n                                  class=\"btn btn-circle red btn-sm \"\r\n                                  onClick={() => deleteATodo(id)}\r\n                                >\r\n                                  {\" \"}\r\n                                  delete\r\n                                </button>\r\n                              </td>\r\n                            </tr>\r\n                          );\r\n                        })}\r\n                      </tbody>\r\n                    </table>{\" \"}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n              <div class=\"portlet light \">\r\n                <div class=\"portlet-body\">\r\n                  <h3>Add new onboarding Task</h3>\r\n                  <div class=\"tab-content\">\r\n                    <div class=\"tab-pane active\" id=\"tab_1_1\">\r\n                      <form onSubmit={handleSubmit(onSubmit)}>\r\n                        <div class=\"form-group\">\r\n                          <label class=\"control-label\">Name</label>\r\n                          <input\r\n                            name=\"Name\"\r\n                            id=\"Name\"\r\n                            type=\"text\"\r\n                            placeholder=\"Todo Name\"\r\n                            class=\"form-control\"\r\n                            ref={register}\r\n                            required\r\n                          />{\" \"}\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                          <label class=\"control-label\">Description</label>\r\n                          <textarea\r\n                            name=\"Description\"\r\n                            id=\"Description\"\r\n                            type=\"textarea\"\r\n                            placeholder=\"Description\"\r\n                            class=\"form-control\"\r\n                            ref={register}\r\n                            required\r\n                          />{\" \"}\r\n                        </div>{\" \"}\r\n                        <div class=\"margiv-top-10\">\r\n                          <button\r\n                            type=\"submit\"\r\n                            class=\"btn green\"\r\n                            disabled={isSubmitting}\r\n                          >\r\n                            {\" \"}\r\n                            Save Changes{\" \"}\r\n                          </button>\r\n                        </div>\r\n                      </form>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"portlet light \">\r\n                <div class=\"portlet-body\">\r\n                  <h3>Assign tasks to:</h3>\r\n                  <div class=\"tab-content\">\r\n                    <div class=\"tab-pane active\" id=\"tab_1_1\">\r\n                      {\" \"}\r\n                      <form onSubmit={handleSubmit2(Assign)}>\r\n                        {\" \"}\r\n                        <div class=\"form-group\">\r\n                          <label>new users:</label>\r\n                          <select\r\n                            name=\"user_id\"\r\n                            id=\"user_id\"\r\n                            ref={register2}\r\n                            required\r\n                            className=\"form-control select2 \"\r\n                          >\r\n                            {Usert.map(({ id, Name }) => (\r\n                              <React.Fragment key={id}>\r\n                                {\" \"}\r\n                                <option value={id}>{Name}</option>\r\n                              </React.Fragment>\r\n                            ))}\r\n                          </select>\r\n                        </div>\r\n                        <div class=\"btn-group\">\r\n                          <button\r\n                            className=\"btn green\"\r\n                            type=\"submit\"\r\n                            disabled={isSubmitting}\r\n                          >\r\n                            {\" \"}\r\n                            Assign\r\n                          </button>\r\n                        </div>{\" \"}\r\n                      </form>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>{\" \"}\r\n              <div class=\"portlet light \">\r\n                <div class=\"portlet-body\">\r\n                  <h3>Assign tasks to:</h3>\r\n                  <div class=\"tab-content\">\r\n                    <div class=\"tab-pane active\" id=\"tab_1_1\">\r\n                      {datau.User.map(({ id, Name, email }) => (\r\n                        <div>{Name}</div>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>{\" \"}\r\n          </div>\r\n        </div>\r\n      </div>{\" \"}\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}