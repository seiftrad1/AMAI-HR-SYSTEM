{"ast":null,"code":"import { useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useAuthState, useAuthDispatch } from \"../../context/auth\";\nimport { gql, hasuraUserClient } from \"../../lib/hasura-user-client\";\nconst UpdateUserLastSeen = gql`\n  mutation UpdateUserLastSeen($id: Int!, $now: timestamptz!, $url: String) {\n    update_User(\n      where: { id: { _eq: $id } }\n      _set: { last_seen: $now, last_seen_url: $url }\n    ) {\n      returning {\n        last_seen\n        last_seen_url\n      }\n    }\n  }\n`;\nexport default function LastSeen({\n  children\n}) {\n  const router = useRouter();\n  const {\n    isAuthenticated,\n    user,\n    save_last_seen\n  } = useAuthState();\n  const {\n    updateUser\n  } = useAuthDispatch();\n  useEffect(() => {\n    if (!isAuthenticated || !save_last_seen) return;\n    updateLastSeen(router.pathname);\n    router.events.on(\"routeChangeComplete\", updateLastSeen);\n    return () => router.events.off(\"routeChangeComplete\", updateLastSeen);\n  }, [isAuthenticated, save_last_seen]);\n\n  const updateLastSeen = async url => {\n    const hasura = hasuraUserClient();\n    await hasura.request(UpdateUserLastSeen, {\n      id: user.id,\n      now: new Date().toISOString(),\n      url\n    });\n  };\n\n  return children;\n}","map":{"version":3,"sources":["C:/Users/msdtt/OneDrive/Documents/amai_hr_next_js_hasura/amai-hr/pages/Components/LastSeen.js"],"names":["useEffect","useRouter","useAuthState","useAuthDispatch","gql","hasuraUserClient","UpdateUserLastSeen","LastSeen","children","router","isAuthenticated","user","save_last_seen","updateUser","updateLastSeen","pathname","events","on","off","url","hasura","request","id","now","Date","toISOString"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,SAASC,YAAT,EAAuBC,eAAvB,QAA8C,oBAA9C;AACA,SAASC,GAAT,EAAcC,gBAAd,QAAsC,8BAAtC;AAEA,MAAMC,kBAAkB,GAAGF,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAZA;AAcA,eAAe,SAASG,QAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAAgC;AAC7C,QAAMC,MAAM,GAAGR,SAAS,EAAxB;AACA,QAAM;AAAES,IAAAA,eAAF;AAAmBC,IAAAA,IAAnB;AAAyBC,IAAAA;AAAzB,MAA4CV,YAAY,EAA9D;AACA,QAAM;AAAEW,IAAAA;AAAF,MAAiBV,eAAe,EAAtC;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACU,eAAD,IAAoB,CAACE,cAAzB,EAAyC;AAEzCE,IAAAA,cAAc,CAACL,MAAM,CAACM,QAAR,CAAd;AAEAN,IAAAA,MAAM,CAACO,MAAP,CAAcC,EAAd,CAAiB,qBAAjB,EAAwCH,cAAxC;AAEA,WAAO,MAAML,MAAM,CAACO,MAAP,CAAcE,GAAd,CAAkB,qBAAlB,EAAyCJ,cAAzC,CAAb;AACD,GARQ,EAQN,CAACJ,eAAD,EAAkBE,cAAlB,CARM,CAAT;;AAUA,QAAME,cAAc,GAAG,MAAOK,GAAP,IAAe;AACpC,UAAMC,MAAM,GAAGf,gBAAgB,EAA/B;AAEA,UAAMe,MAAM,CAACC,OAAP,CAAef,kBAAf,EAAmC;AACvCgB,MAAAA,EAAE,EAAEX,IAAI,CAACW,EAD8B;AAEvCC,MAAAA,GAAG,EAAE,IAAIC,IAAJ,GAAWC,WAAX,EAFkC;AAGvCN,MAAAA;AAHuC,KAAnC,CAAN;AAKD,GARD;;AAUA,SAAOX,QAAP;AACD","sourcesContent":["import { useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\n\nimport { useAuthState, useAuthDispatch } from \"../../context/auth\";\nimport { gql, hasuraUserClient } from \"../../lib/hasura-user-client\";\n\nconst UpdateUserLastSeen = gql`\n  mutation UpdateUserLastSeen($id: Int!, $now: timestamptz!, $url: String) {\n    update_User(\n      where: { id: { _eq: $id } }\n      _set: { last_seen: $now, last_seen_url: $url }\n    ) {\n      returning {\n        last_seen\n        last_seen_url\n      }\n    }\n  }\n`;\n\nexport default function LastSeen({ children }) {\n  const router = useRouter();\n  const { isAuthenticated, user, save_last_seen } = useAuthState();\n  const { updateUser } = useAuthDispatch();\n\n  useEffect(() => {\n    if (!isAuthenticated || !save_last_seen) return;\n\n    updateLastSeen(router.pathname);\n\n    router.events.on(\"routeChangeComplete\", updateLastSeen);\n\n    return () => router.events.off(\"routeChangeComplete\", updateLastSeen);\n  }, [isAuthenticated, save_last_seen]);\n\n  const updateLastSeen = async (url) => {\n    const hasura = hasuraUserClient();\n\n    await hasura.request(UpdateUserLastSeen, {\n      id: user.id,\n      now: new Date().toISOString(),\n      url,\n    });\n  };\n\n  return children;\n}\n"]},"metadata":{},"sourceType":"module"}