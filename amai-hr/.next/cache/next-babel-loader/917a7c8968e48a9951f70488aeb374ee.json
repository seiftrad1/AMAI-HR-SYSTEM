{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\msdtt\\\\OneDrive\\\\Documents\\\\amai_hr_next_js_hasura\\\\amai-hr\\\\pages\\\\Notification.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Link from \"next/link\";\nimport { useAuthState, useAuthDispatch } from \"../context/auth\";\nimport Image from \"react-bootstrap/Image\";\nimport useSWR, { mutate } from \"swr\";\nimport gql from \"graphql-tag\";\nimport { useRouter } from \"next/router\";\nimport { hasuraUserClient } from \"../lib/hasura-user-client\";\nconst Notification_count = gql`\n  query MyQuery {\n    notification {\n      name\n      seen\n      user_id\n      id\n      description\n    }\n    notification_aggregate {\n      aggregate {\n        count(columns: id)\n      }\n    }\n  }\n`;\nexport const getStaticProps = async () => {\n  const hasura = hasuraUserClient();\n  const initialData = await hasura.request(Notification_count);\n  console.log(initialData);\n  return {\n    props: {\n      initialData\n    },\n    revalidate: 1\n  };\n};\nexport default function Header({\n  initialData\n}) {\n  const {\n    logout\n  } = useAuthDispatch();\n  const {\n    isAuthenticated,\n    user\n  } = useAuthState();\n  const hasura = hasuraUserClient();\n  const {\n    data\n  } = useSWR(Notification_count, query => hasura.request(query), {\n    initialData,\n    revalidateOnMount: true\n  });\n  console.log(data);\n  return __jsx(\"div\", {\n    className: \"page-content-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, \" \", __jsx(\"div\", {\n    className: \"page-content\",\n    style: {\n      minHeight: 1500\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, data.notification_aggregate.aggregate.count));\n}","map":{"version":3,"sources":["C:/Users/msdtt/OneDrive/Documents/amai_hr_next_js_hasura/amai-hr/pages/Notification.js"],"names":["React","Link","useAuthState","useAuthDispatch","Image","useSWR","mutate","gql","useRouter","hasuraUserClient","Notification_count","getStaticProps","hasura","initialData","request","console","log","props","revalidate","Header","logout","isAuthenticated","user","data","query","revalidateOnMount","minHeight","notification_aggregate","aggregate","count"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,YAAT,EAAuBC,eAAvB,QAA8C,iBAA9C;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,MAAP,IAAiBC,MAAjB,QAA+B,KAA/B;AAEA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,SAASC,gBAAT,QAAiC,2BAAjC;AAEA,MAAMC,kBAAkB,GAAGH,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAfA;AAgBA,OAAO,MAAMI,cAAc,GAAG,YAAY;AACxC,QAAMC,MAAM,GAAGH,gBAAgB,EAA/B;AAEA,QAAMI,WAAW,GAAG,MAAMD,MAAM,CAACE,OAAP,CAAeJ,kBAAf,CAA1B;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYH,WAAZ;AAEA,SAAO;AACLI,IAAAA,KAAK,EAAE;AACLJ,MAAAA;AADK,KADF;AAILK,IAAAA,UAAU,EAAE;AAJP,GAAP;AAMD,CAZM;AAcP,eAAe,SAASC,MAAT,CAAgB;AAAEN,EAAAA;AAAF,CAAhB,EAAiC;AAC9C,QAAM;AAAEO,IAAAA;AAAF,MAAajB,eAAe,EAAlC;AACA,QAAM;AAAEkB,IAAAA,eAAF;AAAmBC,IAAAA;AAAnB,MAA4BpB,YAAY,EAA9C;AACA,QAAMU,MAAM,GAAGH,gBAAgB,EAA/B;AAEA,QAAM;AAAEc,IAAAA;AAAF,MAAWlB,MAAM,CACrBK,kBADqB,EAEpBc,KAAD,IAAWZ,MAAM,CAACE,OAAP,CAAeU,KAAf,CAFU,EAGrB;AACEX,IAAAA,WADF;AAEEY,IAAAA,iBAAiB,EAAE;AAFrB,GAHqB,CAAvB;AAQAV,EAAAA,OAAO,CAACC,GAAR,CAAYO,IAAZ;AACA,SACE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,GADH,EAEE;AAAK,IAAA,SAAS,EAAC,cAAf;AAA8B,IAAA,KAAK,EAAE;AAAEG,MAAAA,SAAS,EAAE;AAAb,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,IAAI,CAACI,sBAAL,CAA4BC,SAA5B,CAAsCC,KADzC,CAFF,CADF;AAQD","sourcesContent":["import React from \"react\";\r\nimport Link from \"next/link\";\r\nimport { useAuthState, useAuthDispatch } from \"../context/auth\";\r\nimport Image from \"react-bootstrap/Image\";\r\nimport useSWR, { mutate } from \"swr\";\r\n\r\nimport gql from \"graphql-tag\";\r\nimport { useRouter } from \"next/router\";\r\n\r\nimport { hasuraUserClient } from \"../lib/hasura-user-client\";\r\n\r\nconst Notification_count = gql`\r\n  query MyQuery {\r\n    notification {\r\n      name\r\n      seen\r\n      user_id\r\n      id\r\n      description\r\n    }\r\n    notification_aggregate {\r\n      aggregate {\r\n        count(columns: id)\r\n      }\r\n    }\r\n  }\r\n`;\r\nexport const getStaticProps = async () => {\r\n  const hasura = hasuraUserClient();\r\n\r\n  const initialData = await hasura.request(Notification_count);\r\n  console.log(initialData);\r\n\r\n  return {\r\n    props: {\r\n      initialData,\r\n    },\r\n    revalidate: 1,\r\n  };\r\n};\r\n\r\nexport default function Header({ initialData }) {\r\n  const { logout } = useAuthDispatch();\r\n  const { isAuthenticated, user } = useAuthState();\r\n  const hasura = hasuraUserClient();\r\n\r\n  const { data } = useSWR(\r\n    Notification_count,\r\n    (query) => hasura.request(query),\r\n    {\r\n      initialData,\r\n      revalidateOnMount: true,\r\n    }\r\n  );\r\n  console.log(data);\r\n  return (\r\n    <div className=\"page-content-wrapper\">\r\n      {\" \"}\r\n      <div className=\"page-content\" style={{ minHeight: 1500 }}>\r\n        {data.notification_aggregate.aggregate.count}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}