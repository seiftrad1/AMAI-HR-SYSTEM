{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\msdtt\\\\OneDrive\\\\Documents\\\\amai_hr_next_js_hasura\\\\amai-hr\\\\pages\\\\Task\\\\[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport useSWR, { mutate } from \"swr\";\nimport { useForm } from \"react-hook-form\";\nimport gql from \"graphql-tag\";\nimport { useRouter } from \"next/router\";\nimport { hasuraUserClient } from \"../../lib/hasura-user-client\";\nimport { useAuthState } from \"../../context/auth\";\nconst from = new Date().toISOString();\nconst Users = gql`\n  query MyQuery {\n    User {\n      id\n    }\n  }\n`;\nconst GetTasks = gql`\n  query MyQuery($id: Int!) {\n    Task(where: { user_id: { _eq: $id } }) {\n      id\n      Name\n      user_id\n      Description\n      Completed\n    }\n  }\n`;\nconst UpdateCompleted = gql`\n  mutation MyMutation($id: Int!) {\n    update_Task_by_pk(pk_columns: { id: $id }, _set: { Completed: true }) {\n      Completed\n    }\n  }\n`;\nexport const getStaticPaths = async () => {\n  const hasura = hasuraUserClient();\n  const {\n    User\n  } = await hasura.request(Users);\n  return {\n    paths: User.map(({\n      id\n    }) => ({\n      params: {\n        id: id.toString()\n      }\n    })),\n    fallback: false\n  };\n};\nexport const getStaticProps = async ({\n  params\n}) => {\n  const hasura = hasuraUserClient();\n  const {\n    id\n  } = params;\n  console.log(params);\n  const initialData = await hasura.request(GetTasks, {\n    id\n  });\n  return {\n    props: {\n      initialData\n    },\n    revalidate: 1\n  };\n};\nexport default function Task({\n  initialData\n}) {\n  const hasura = hasuraUserClient();\n  const {\n    query\n  } = useRouter();\n  const {\n    id\n  } = query;\n  const {\n    data\n  } = useSWR([GetCandidats, id], (query, id) => hasura.request(query), {\n    initialData,\n    revalidateOnMount: true\n  });\n  const router = useRouter();\n  const {\n    handleSubmit,\n    register,\n    control,\n    errors,\n    formState: {\n      isSubmitting\n    }\n  } = useForm();\n\n  const Complete = async ({\n    id\n  }) => {\n    console.log(id);\n\n    try {\n      const {\n        update_Todo_by_pk\n      } = await hasura.request(UpdateCompleted, {\n        id\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const deleteTodo = async ({\n    id\n  }) => {\n    const query = gql`\n      mutation delete_Todo($id: Int!) {\n        delete_Todo(where: { id: { _eq: $id } }) {\n          affected_rows\n        }\n      }\n    `;\n\n    try {\n      await hasura.request(query, {\n        id\n      });\n      mutate();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const onSubmit = async ({\n    Description,\n    Name,\n    user_id\n  }) => {\n    console.log(from);\n\n    try {\n      const {\n        insert_Todo_one\n      } = await hasura.request(InsertTask, {\n        Description,\n        from,\n        Name,\n        user_id\n      });\n      window.location.reload();\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: \"page-content-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 5\n    }\n  }, \" \", __jsx(\"div\", {\n    className: \"page-content\",\n    style: {\n      minHeight: 1500\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    class: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    class: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    class: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    class: \"card card-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    class: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  }, __jsx(\"ul\", {\n    class: \"nav nav-pills todo-nav\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 19\n    }\n  }, __jsx(\"li\", {\n    role: \"presentation\",\n    class: \"nav-item all-task active\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 21\n    }\n  }, __jsx(\"a\", {\n    href: \"#\",\n    class: \"nav-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 23\n    }\n  }, \"All\")), __jsx(\"li\", {\n    role: \"presentation\",\n    class: \"nav-item active-task\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 21\n    }\n  }, __jsx(\"a\", {\n    href: \"#\",\n    class: \"nav-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 23\n    }\n  }, \"Active\")), __jsx(\"li\", {\n    role: \"presentation\",\n    class: \"nav-item completed-task\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 21\n    }\n  }, __jsx(\"a\", {\n    href: \"#\",\n    class: \"nav-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 23\n    }\n  }, \"Completed\"))), \" \", data.Todo.map(({\n    id,\n    Description,\n    Name,\n    Completed\n  }) => {\n    return __jsx(\"div\", {\n      key: id,\n      class: \"todo-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 23\n      }\n    }, !Completed ? __jsx(\"div\", {\n      class: \"todo-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 27\n      }\n    }, __jsx(\"div\", {\n      class: \"checker\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 29\n      }\n    }, __jsx(\"span\", {\n      class: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 31\n      }\n    }, __jsx(\"input\", {\n      name: \"Completed\",\n      type: \"checkbox\",\n      onChange: () => Complete({\n        id\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 33\n      }\n    }))), __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 29\n      }\n    }, Name, \": \", Description), __jsx(\"a\", {\n      href: \"javascript:void(0);\",\n      class: \"float-right remove-todo-item\",\n      onClick: () => deleteTodo({\n        id\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 29\n      }\n    }, __jsx(\"i\", {\n      class: \"icon-close\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 31\n      }\n    }))) : __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 27\n      }\n    }));\n  }), \" \"))), \" \", __jsx(\"div\", {\n    class: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    class: \"card card-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    class: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 17\n    }\n  }, \" \", __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 19\n    }\n  }, __jsx(\"div\", {\n    class: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 21\n    }\n  }, __jsx(\"label\", {\n    class: \"control-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 23\n    }\n  }, \"Name\"), __jsx(\"input\", {\n    name: \"Name\",\n    id: \"Name\",\n    type: \"text\",\n    placeholder: \"Todo Name\",\n    class: \"form-control\",\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 23\n    }\n  }), \" \"), __jsx(\"div\", {\n    class: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 21\n    }\n  }, __jsx(\"label\", {\n    class: \"control-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 23\n    }\n  }, \"Description\"), __jsx(\"textarea\", {\n    name: \"Description\",\n    id: \"Description\",\n    type: \"textarea\",\n    placeholder: \"Description\",\n    class: \"form-control\",\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 23\n    }\n  }), \" \"), __jsx(\"div\", {\n    class: \"margiv-top-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 21\n    }\n  }, __jsx(\"button\", {\n    type: \"submit\",\n    class: \"btn green\",\n    disabled: isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 23\n    }\n  }, \" \", \"Save Changes\", \" \"), __jsx(\"a\", {\n    href: \"#\",\n    class: \"btn default\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 23\n    }\n  }, \" \", \"Cancel\", \" \"))))))))));\n}","map":{"version":3,"sources":["C:/Users/msdtt/OneDrive/Documents/amai_hr_next_js_hasura/amai-hr/pages/Task/[id].js"],"names":["useSWR","mutate","useForm","gql","useRouter","hasuraUserClient","useAuthState","from","Date","toISOString","Users","GetTasks","UpdateCompleted","getStaticPaths","hasura","User","request","paths","map","id","params","toString","fallback","getStaticProps","console","log","initialData","props","revalidate","Task","query","data","GetCandidats","revalidateOnMount","router","handleSubmit","register","control","errors","formState","isSubmitting","Complete","update_Todo_by_pk","err","deleteTodo","error","onSubmit","Description","Name","user_id","insert_Todo_one","InsertTask","window","location","reload","minHeight","Todo","Completed"],"mappings":";;;AAAA,OAAOA,MAAP,IAAiBC,MAAjB,QAA+B,KAA/B;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,gBAAT,QAAiC,8BAAjC;AACA,SAASC,YAAT,QAA6B,oBAA7B;AACA,MAAMC,IAAI,GAAG,IAAIC,IAAJ,GAAWC,WAAX,EAAb;AACA,MAAMC,KAAK,GAAGP,GAAI;AAClB;AACA;AACA;AACA;AACA;AACA,CANA;AAOA,MAAMQ,QAAQ,GAAGR,GAAI;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAVA;AAWA,MAAMS,eAAe,GAAGT,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA,CANA;AAOA,OAAO,MAAMU,cAAc,GAAG,YAAY;AACxC,QAAMC,MAAM,GAAGT,gBAAgB,EAA/B;AAEA,QAAM;AAAEU,IAAAA;AAAF,MAAW,MAAMD,MAAM,CAACE,OAAP,CAAeN,KAAf,CAAvB;AAEA,SAAO;AACLO,IAAAA,KAAK,EAAEF,IAAI,CAACG,GAAL,CAAS,CAAC;AAAEC,MAAAA;AAAF,KAAD,MAAa;AAC3BC,MAAAA,MAAM,EAAE;AACND,QAAAA,EAAE,EAAEA,EAAE,CAACE,QAAH;AADE;AADmB,KAAb,CAAT,CADF;AAMLC,IAAAA,QAAQ,EAAE;AANL,GAAP;AAQD,CAbM;AAcP,OAAO,MAAMC,cAAc,GAAG,OAAO;AAAEH,EAAAA;AAAF,CAAP,KAAsB;AAClD,QAAMN,MAAM,GAAGT,gBAAgB,EAA/B;AACA,QAAM;AAAEc,IAAAA;AAAF,MAASC,MAAf;AAEAI,EAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ;AAEA,QAAMM,WAAW,GAAG,MAAMZ,MAAM,CAACE,OAAP,CAAeL,QAAf,EAAyB;AAAEQ,IAAAA;AAAF,GAAzB,CAA1B;AAEA,SAAO;AACLQ,IAAAA,KAAK,EAAE;AACLD,MAAAA;AADK,KADF;AAILE,IAAAA,UAAU,EAAE;AAJP,GAAP;AAMD,CAdM;AAgBP,eAAe,SAASC,IAAT,CAAc;AAAEH,EAAAA;AAAF,CAAd,EAA+B;AAC5C,QAAMZ,MAAM,GAAGT,gBAAgB,EAA/B;AACA,QAAM;AAAEyB,IAAAA;AAAF,MAAY1B,SAAS,EAA3B;AACA,QAAM;AAAEe,IAAAA;AAAF,MAASW,KAAf;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAW/B,MAAM,CACrB,CAACgC,YAAD,EAAeb,EAAf,CADqB,EAGrB,CAACW,KAAD,EAAQX,EAAR,KAAeL,MAAM,CAACE,OAAP,CAAec,KAAf,CAHM,EAIrB;AACEJ,IAAAA,WADF;AAEEO,IAAAA,iBAAiB,EAAE;AAFrB,GAJqB,CAAvB;AASA,QAAMC,MAAM,GAAG9B,SAAS,EAAxB;AACA,QAAM;AACJ+B,IAAAA,YADI;AAEJC,IAAAA,QAFI;AAGJC,IAAAA,OAHI;AAIJC,IAAAA,MAJI;AAKJC,IAAAA,SAAS,EAAE;AAAEC,MAAAA;AAAF;AALP,MAMFtC,OAAO,EANX;;AAOA,QAAMuC,QAAQ,GAAG,OAAO;AAAEtB,IAAAA;AAAF,GAAP,KAAkB;AACjCK,IAAAA,OAAO,CAACC,GAAR,CAAYN,EAAZ;;AACA,QAAI;AACF,YAAM;AAAEuB,QAAAA;AAAF,UAAwB,MAAM5B,MAAM,CAACE,OAAP,CAAeJ,eAAf,EAAgC;AAClEO,QAAAA;AADkE,OAAhC,CAApC;AAGD,KAJD,CAIE,OAAOwB,GAAP,EAAY;AACZnB,MAAAA,OAAO,CAACC,GAAR,CAAYkB,GAAZ;AACD;AACF,GATD;;AAUA,QAAMC,UAAU,GAAG,OAAO;AAAEzB,IAAAA;AAAF,GAAP,KAAkB;AACnC,UAAMW,KAAK,GAAG3B,GAAI;AACtB;AACA;AACA;AACA;AACA;AACA,KANI;;AAQA,QAAI;AACF,YAAMW,MAAM,CAACE,OAAP,CAAec,KAAf,EAAsB;AAAEX,QAAAA;AAAF,OAAtB,CAAN;AACAlB,MAAAA,MAAM;AACP,KAHD,CAGE,OAAO4C,KAAP,EAAc;AACdrB,MAAAA,OAAO,CAACqB,KAAR,CAAcA,KAAd;AACD;AACF,GAfD;;AAgBA,QAAMC,QAAQ,GAAG,OAAO;AAAEC,IAAAA,WAAF;AAAeC,IAAAA,IAAf;AAAqBC,IAAAA;AAArB,GAAP,KAA0C;AACzDzB,IAAAA,OAAO,CAACC,GAAR,CAAYlB,IAAZ;;AACA,QAAI;AACF,YAAM;AAAE2C,QAAAA;AAAF,UAAsB,MAAMpC,MAAM,CAACE,OAAP,CAAemC,UAAf,EAA2B;AAC3DJ,QAAAA,WAD2D;AAE3DxC,QAAAA,IAF2D;AAG3DyC,QAAAA,IAH2D;AAI3DC,QAAAA;AAJ2D,OAA3B,CAAlC;AAOAG,MAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD,KATD,CASE,OAAOX,GAAP,EAAY;AACZnB,MAAAA,OAAO,CAACC,GAAR,CAAYkB,GAAZ;AACD;AACF,GAdD;;AAeA,SACE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,GADH,EAEE;AAAK,IAAA,SAAS,EAAC,cAAf;AAA8B,IAAA,KAAK,EAAE;AAAEY,MAAAA,SAAS,EAAE;AAAb,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,KAAK,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,KAAK,EAAC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,KAAK,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,KAAK,EAAC,iBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,KAAK,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,KAAK,EAAC,wBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,IAAI,EAAC,cAAT;AAAwB,IAAA,KAAK,EAAC,0BAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,IAAI,EAAC,GAAR;AAAY,IAAA,KAAK,EAAC,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,CADF,EAME;AAAI,IAAA,IAAI,EAAC,cAAT;AAAwB,IAAA,KAAK,EAAC,sBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,IAAI,EAAC,GAAR;AAAY,IAAA,KAAK,EAAC,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CANF,EAWE;AAAI,IAAA,IAAI,EAAC,cAAT;AAAwB,IAAA,KAAK,EAAC,yBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,IAAI,EAAC,GAAR;AAAY,IAAA,KAAK,EAAC,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CAXF,CADF,EAiBQ,GAjBR,EAkBGxB,IAAI,CAACyB,IAAL,CAAUtC,GAAV,CAAc,CAAC;AAAEC,IAAAA,EAAF;AAAM4B,IAAAA,WAAN;AAAmBC,IAAAA,IAAnB;AAAyBS,IAAAA;AAAzB,GAAD,KAA0C;AACvD,WACE;AAAK,MAAA,GAAG,EAAEtC,EAAV;AAAc,MAAA,KAAK,EAAC,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAACsC,SAAD,GACC;AAAK,MAAA,KAAK,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,KAAK,EAAC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,KAAK,EAAC,EAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,IAAI,EAAC,WADP;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,QAAQ,EAAE,MAAMhB,QAAQ,CAAC;AAAEtB,QAAAA;AAAF,OAAD,CAH1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG6B,IADH,QACWD,WADX,CAVF,EAcE;AACE,MAAA,IAAI,EAAC,qBADP;AAEE,MAAA,KAAK,EAAC,8BAFR;AAGE,MAAA,OAAO,EAAE,MAAMH,UAAU,CAAC;AAAEzB,QAAAA;AAAF,OAAD,CAH3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE;AAAG,MAAA,KAAK,EAAC,YAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CAdF,CADD,GAwBC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAzBJ,CADF;AA8BD,GA/BA,CAlBH,EAiDM,GAjDN,CADF,CADF,CADF,EAuDS,GAvDT,EAwDE;AAAK,IAAA,KAAK,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,KAAK,EAAC,iBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,KAAK,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,GADH,EAEE;AAAM,IAAA,QAAQ,EAAEgB,YAAY,CAACW,QAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,KAAK,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,KAAK,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,EAAE,EAAC,MAFL;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,WAAW,EAAC,WAJd;AAKE,IAAA,KAAK,EAAC,cALR;AAME,IAAA,GAAG,EAAEV,QANP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EASK,GATL,CADF,EAYE;AAAK,IAAA,KAAK,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,KAAK,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE;AACE,IAAA,IAAI,EAAC,aADP;AAEE,IAAA,EAAE,EAAC,aAFL;AAGE,IAAA,IAAI,EAAC,UAHP;AAIE,IAAA,WAAW,EAAC,aAJd;AAKE,IAAA,KAAK,EAAC,cALR;AAME,IAAA,GAAG,EAAEA,QANP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EASK,GATL,CAZF,EAwBE;AAAK,IAAA,KAAK,EAAC,eAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,KAAK,EAAC,WAFR;AAGE,IAAA,QAAQ,EAAEI,YAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKG,GALH,kBAMe,GANf,CADF,EASE;AAAG,IAAA,IAAI,EAAC,GAAR;AAAY,IAAA,KAAK,EAAC,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,GADH,YAES,GAFT,CATF,CAxBF,CAFF,CADF,CADF,CAxDF,CADF,CADF,CAFF,CADF;AAgHD","sourcesContent":["import useSWR, { mutate } from \"swr\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport gql from \"graphql-tag\";\r\nimport { useRouter } from \"next/router\";\r\nimport { hasuraUserClient } from \"../../lib/hasura-user-client\";\r\nimport { useAuthState } from \"../../context/auth\";\r\nconst from = new Date().toISOString();\r\nconst Users = gql`\r\n  query MyQuery {\r\n    User {\r\n      id\r\n    }\r\n  }\r\n`;\r\nconst GetTasks = gql`\r\n  query MyQuery($id: Int!) {\r\n    Task(where: { user_id: { _eq: $id } }) {\r\n      id\r\n      Name\r\n      user_id\r\n      Description\r\n      Completed\r\n    }\r\n  }\r\n`;\r\nconst UpdateCompleted = gql`\r\n  mutation MyMutation($id: Int!) {\r\n    update_Task_by_pk(pk_columns: { id: $id }, _set: { Completed: true }) {\r\n      Completed\r\n    }\r\n  }\r\n`;\r\nexport const getStaticPaths = async () => {\r\n  const hasura = hasuraUserClient();\r\n\r\n  const { User } = await hasura.request(Users);\r\n\r\n  return {\r\n    paths: User.map(({ id }) => ({\r\n      params: {\r\n        id: id.toString(),\r\n      },\r\n    })),\r\n    fallback: false,\r\n  };\r\n};\r\nexport const getStaticProps = async ({ params }) => {\r\n  const hasura = hasuraUserClient();\r\n  const { id } = params;\r\n\r\n  console.log(params);\r\n\r\n  const initialData = await hasura.request(GetTasks, { id });\r\n\r\n  return {\r\n    props: {\r\n      initialData,\r\n    },\r\n    revalidate: 1,\r\n  };\r\n};\r\n\r\nexport default function Task({ initialData }) {\r\n  const hasura = hasuraUserClient();\r\n  const { query } = useRouter();\r\n  const { id } = query;\r\n  const { data } = useSWR(\r\n    [GetCandidats, id],\r\n\r\n    (query, id) => hasura.request(query),\r\n    {\r\n      initialData,\r\n      revalidateOnMount: true,\r\n    }\r\n  );\r\n  const router = useRouter();\r\n  const {\r\n    handleSubmit,\r\n    register,\r\n    control,\r\n    errors,\r\n    formState: { isSubmitting },\r\n  } = useForm();\r\n  const Complete = async ({ id }) => {\r\n    console.log(id);\r\n    try {\r\n      const { update_Todo_by_pk } = await hasura.request(UpdateCompleted, {\r\n        id,\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  const deleteTodo = async ({ id }) => {\r\n    const query = gql`\r\n      mutation delete_Todo($id: Int!) {\r\n        delete_Todo(where: { id: { _eq: $id } }) {\r\n          affected_rows\r\n        }\r\n      }\r\n    `;\r\n\r\n    try {\r\n      await hasura.request(query, { id });\r\n      mutate();\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  const onSubmit = async ({ Description, Name, user_id }) => {\r\n    console.log(from);\r\n    try {\r\n      const { insert_Todo_one } = await hasura.request(InsertTask, {\r\n        Description,\r\n        from,\r\n        Name,\r\n        user_id,\r\n      });\r\n\r\n      window.location.reload();\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"page-content-wrapper\">\r\n      {\" \"}\r\n      <div className=\"page-content\" style={{ minHeight: 1500 }}>\r\n        <div class=\"container\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n              <div class=\"card card-white\">\r\n                <div class=\"card-body\">\r\n                  <ul class=\"nav nav-pills todo-nav\">\r\n                    <li role=\"presentation\" class=\"nav-item all-task active\">\r\n                      <a href=\"#\" class=\"nav-link\">\r\n                        All\r\n                      </a>\r\n                    </li>\r\n                    <li role=\"presentation\" class=\"nav-item active-task\">\r\n                      <a href=\"#\" class=\"nav-link\">\r\n                        Active\r\n                      </a>\r\n                    </li>\r\n                    <li role=\"presentation\" class=\"nav-item completed-task\">\r\n                      <a href=\"#\" class=\"nav-link\">\r\n                        Completed\r\n                      </a>\r\n                    </li>\r\n                  </ul>{\" \"}\r\n                  {data.Todo.map(({ id, Description, Name, Completed }) => {\r\n                    return (\r\n                      <div key={id} class=\"todo-list\">\r\n                        {!Completed ? (\r\n                          <div class=\"todo-item\">\r\n                            <div class=\"checker\">\r\n                              <span class=\"\">\r\n                                <input\r\n                                  name=\"Completed\"\r\n                                  type=\"checkbox\"\r\n                                  onChange={() => Complete({ id })}\r\n                                />\r\n                              </span>\r\n                            </div>\r\n                            <span>\r\n                              {Name}: {Description}\r\n                            </span>\r\n\r\n                            <a\r\n                              href=\"javascript:void(0);\"\r\n                              class=\"float-right remove-todo-item\"\r\n                              onClick={() => deleteTodo({ id })}\r\n                            >\r\n                              <i class=\"icon-close\"></i>\r\n                            </a>\r\n                          </div>\r\n                        ) : (\r\n                          <div></div>\r\n                        )}\r\n                      </div>\r\n                    );\r\n                  })}{\" \"}\r\n                </div>\r\n              </div>\r\n            </div>{\" \"}\r\n            <div class=\"col-md-6\">\r\n              <div class=\"card card-white\">\r\n                <div class=\"card-body\">\r\n                  {\" \"}\r\n                  <form onSubmit={handleSubmit(onSubmit)}>\r\n                    <div class=\"form-group\">\r\n                      <label class=\"control-label\">Name</label>\r\n                      <input\r\n                        name=\"Name\"\r\n                        id=\"Name\"\r\n                        type=\"text\"\r\n                        placeholder=\"Todo Name\"\r\n                        class=\"form-control\"\r\n                        ref={register}\r\n                      />{\" \"}\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                      <label class=\"control-label\">Description</label>\r\n                      <textarea\r\n                        name=\"Description\"\r\n                        id=\"Description\"\r\n                        type=\"textarea\"\r\n                        placeholder=\"Description\"\r\n                        class=\"form-control\"\r\n                        ref={register}\r\n                      />{\" \"}\r\n                    </div>\r\n\r\n                    <div class=\"margiv-top-10\">\r\n                      <button\r\n                        type=\"submit\"\r\n                        class=\"btn green\"\r\n                        disabled={isSubmitting}\r\n                      >\r\n                        {\" \"}\r\n                        Save Changes{\" \"}\r\n                      </button>\r\n                      <a href=\"#\" class=\"btn default\">\r\n                        {\" \"}\r\n                        Cancel{\" \"}\r\n                      </a>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}