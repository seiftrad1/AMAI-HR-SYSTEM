{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _templateObject,\n    _templateObject2,\n    _templateObject3,\n    _templateObject4,\n    _jsxFileName = \"C:\\\\Users\\\\msdtt\\\\OneDrive\\\\Documents\\\\amai_hr_next_js_hasura\\\\amai-hr\\\\pages\\\\Project\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport useSWR, { mutate } from \"swr\";\nimport Link from \"next/link\";\nimport gql from \"graphql-tag\";\nimport { useRouter } from \"next/router\";\nimport { hasuraUserClient } from \"../../lib/hasura-user-client\";\nvar today = new Date();\nvar GetCandidats = gql(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  query MyQuery {\\n    Candidate {\\n      Email\\n      Last_Name\\n      Name\\n      domain\\n      id\\n      phone_number\\n      Status\\n    }\\n  }\\n\"])));\nexport var __N_SSG = true;\nexport default function MembersPage(_ref) {\n  _s();\n\n  var initialData = _ref.initialData;\n  var hasura = hasuraUserClient();\n  var router = useRouter();\n\n  var _useSWR = useSWR(GetCandidats, function (query) {\n    return hasura.request(query);\n  }, {\n    initialData: initialData,\n    revalidateOnMount: true\n  }),\n      data = _useSWR.data;\n\n  var deleteATodo = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(id) {\n      var query;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              query = gql(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n      mutation delete_Candidate($id: Int!) {\\n        delete_Candidate(where: { id: { _eq: $id } }) {\\n          affected_rows\\n        }\\n      }\\n    \"])));\n              _context.prev = 1;\n              _context.next = 4;\n              return hasura.request(query, {\n                id: id\n              });\n\n            case 4:\n              mutate();\n              window.location.reload();\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](1);\n              console.error(_context.t0);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 8]]);\n    }));\n\n    return function deleteATodo(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var updateStatus = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(id) {\n      var SetStatus;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              SetStatus = gql(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n      mutation MyMutation($id: Int!) {\\n        update_Candidate_by_pk(pk_columns: { id: $id }, _set: { Status: 1 }) {\\n          id\\n          Status\\n        }\\n      }\\n    \"])));\n              _context2.prev = 1;\n              _context2.next = 4;\n              return hasura.request(SetStatus, {\n                id: id\n              });\n\n            case 4:\n              mutate();\n              router.push(\"/RegisterCandidatAccount/\".concat(id));\n              _context2.next = 11;\n              break;\n\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](1);\n              console.error(_context2.t0);\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[1, 8]]);\n    }));\n\n    return function updateStatus(_x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var DeclineCandidat = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(id) {\n      var SetStatus;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              SetStatus = gql(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"\\n      mutation MyMutation($id: Int!) {\\n        update_Candidate_by_pk(pk_columns: { id: $id }, _set: { Status: 0 }) {\\n          id\\n          Status\\n        }\\n      }\\n    \"])));\n              _context3.prev = 1;\n              _context3.next = 4;\n              return hasura.request(SetStatus, {\n                id: id\n              });\n\n            case 4:\n              mutate();\n              window.location.reload();\n              _context3.next = 11;\n              break;\n\n            case 8:\n              _context3.prev = 8;\n              _context3.t0 = _context3[\"catch\"](1);\n              console.error(_context3.t0);\n\n            case 11:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[1, 8]]);\n    }));\n\n    return function DeclineCandidat(_x3) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var Modify = /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(_ref5) {\n      var id;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              id = _ref5.id;\n              console.log(id);\n              router.push(\"/CandidatOne/\".concat(id));\n\n            case 3:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function Modify(_x4) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(\"div\", {\n    className: \"page-content-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"page-content\",\n    style: {\n      minHeight: 1500\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }));\n}\n\n_s(MembersPage, \"O7L24SjVCPjUDE1oq/fS99LBS0g=\", false, function () {\n  return [useRouter, useSWR];\n});\n\n_c = MembersPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MembersPage\");","map":{"version":3,"sources":["C:/Users/msdtt/OneDrive/Documents/amai_hr_next_js_hasura/amai-hr/pages/Project/index.js"],"names":["useSWR","mutate","Link","gql","useRouter","hasuraUserClient","today","Date","GetCandidats","MembersPage","initialData","hasura","router","query","request","revalidateOnMount","data","deleteATodo","id","window","location","reload","console","error","updateStatus","SetStatus","push","DeclineCandidat","Modify","log","minHeight"],"mappings":"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","sourcesContent":["import useSWR, { mutate } from \"swr\";\r\n\r\nimport Link from \"next/link\";\r\nimport gql from \"graphql-tag\";\r\nimport { useRouter } from \"next/router\";\r\n\r\nimport { hasuraUserClient } from \"../../lib/hasura-user-client\";\r\n\r\nconst today = new Date();\r\n\r\nconst GetCandidats = gql`\r\n  query MyQuery {\r\n    Candidate {\r\n      Email\r\n      Last_Name\r\n      Name\r\n      domain\r\n      id\r\n      phone_number\r\n      Status\r\n    }\r\n  }\r\n`;\r\n\r\nexport const getStaticProps = async () => {\r\n  const hasura = hasuraUserClient();\r\n\r\n  const initialData = await hasura.request(GetCandidats);\r\n\r\n  return {\r\n    props: {\r\n      initialData,\r\n    },\r\n    revalidate: 1,\r\n  };\r\n};\r\n\r\nexport default function MembersPage({ initialData }) {\r\n  const hasura = hasuraUserClient();\r\n  const router = useRouter();\r\n\r\n  const { data } = useSWR(GetCandidats, (query) => hasura.request(query), {\r\n    initialData,\r\n    revalidateOnMount: true,\r\n  });\r\n  const deleteATodo = async (id) => {\r\n    const query = gql`\r\n      mutation delete_Candidate($id: Int!) {\r\n        delete_Candidate(where: { id: { _eq: $id } }) {\r\n          affected_rows\r\n        }\r\n      }\r\n    `;\r\n\r\n    try {\r\n      await hasura.request(query, { id });\r\n      mutate();\r\n      window.location.reload();\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  const updateStatus = async (id) => {\r\n    const SetStatus = gql`\r\n      mutation MyMutation($id: Int!) {\r\n        update_Candidate_by_pk(pk_columns: { id: $id }, _set: { Status: 1 }) {\r\n          id\r\n          Status\r\n        }\r\n      }\r\n    `;\r\n    try {\r\n      await hasura.request(SetStatus, { id });\r\n      mutate();\r\n      router.push(`/RegisterCandidatAccount/${id}`);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  const DeclineCandidat = async (id) => {\r\n    const SetStatus = gql`\r\n      mutation MyMutation($id: Int!) {\r\n        update_Candidate_by_pk(pk_columns: { id: $id }, _set: { Status: 0 }) {\r\n          id\r\n          Status\r\n        }\r\n      }\r\n    `;\r\n    try {\r\n      await hasura.request(SetStatus, { id });\r\n      mutate();\r\n      window.location.reload();\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  const Modify = async ({ id }) => {\r\n    console.log(id);\r\n    router.push(`/CandidatOne/${id}`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"page-content-wrapper\">\r\n      <div className=\"page-content\" style={{ minHeight: 1500 }}></div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}