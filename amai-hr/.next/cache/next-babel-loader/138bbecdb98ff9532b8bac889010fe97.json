{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _templateObject,\n    _templateObject2,\n    _templateObject3,\n    _templateObject4,\n    _templateObject5,\n    _jsxFileName = \"C:\\\\Users\\\\msdtt\\\\OneDrive\\\\Documents\\\\amai_hr_next_js_hasura\\\\amai-hr\\\\pages\\\\Calendar\\\\index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport useSWR, { mutate } from \"swr\";\nimport { useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useForm } from \"react-hook-form\";\nimport React, { useState } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport Link from \"next/link\";\nimport gql from \"graphql-tag\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { format, intervalToDuration, parseISO } from \"date-fns\";\nimport FullCalendar from \"@fullcalendar/react\"; // must go before plugins\n\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport \"@fullcalendar/common/main.css\";\nimport \"@fullcalendar/daygrid/main.css\";\nimport \"@fullcalendar/timegrid/main.css\";\nimport \"@fullcalendar/list/main.css\";\nimport { TextField } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useAuthState, useAuthDispatch } from \"../../context/auth\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport listPlugin from \"@fullcalendar/list\";\nimport { hasuraUserClient } from \"../../lib/hasura-user-client\";\nvar today = new Date().toISOString().substring(0, 19);\nvar useStyles = makeStyles(function (theme) {\n  return {\n    container: {\n      display: \"flex\",\n      flexWrap: \"wrap\"\n    },\n    textField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      width: 200\n    }\n  };\n});\nvar GetEvents = gql(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  query MyQuery {\\n    Event {\\n      id\\n      Title\\n      description\\n      start_date\\n    }\\n  }\\n\"])));\nvar getUserEmail = gql(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n  query MyQuery {\\n    User {\\n      email\\n    }\\n  }\\n\"])));\nvar AddNotification = gql(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n  mutation MyMutation {\\n    insert_notification_one(\\n      object: {\\n        name: \\\"Event\\\"\\n        seen: false\\n        description: \\\"a new event has been added to your calendar!\\\"\\n      }\\n    ) {\\n      seen\\n      name\\n      id\\n      description\\n    }\\n  }\\n\"])));\nvar insertEvent = gql(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"\\n  mutation MyMutation(\\n    $Title: String!\\n    $description: String!\\n    $start_date: timestamp!\\n    $manager_id: Int!\\n  ) {\\n    insert_Event_one(\\n      object: {\\n        Title: $Title\\n        description: $description\\n        start_date: $start_date\\n        manager_id: $manager_id\\n      }\\n    ) {\\n      Title\\n      description\\n      start_date\\n    }\\n  }\\n\"])));\nexport var __N_SSG = true;\nexport default function Calendar(_ref) {\n  _s();\n\n  var _this = this;\n\n  var initialData = _ref.initialData,\n      datar = _ref.datar,\n      emails = _ref.emails;\n\n  var _useAuthState = useAuthState(),\n      isAuthenticated = _useAuthState.isAuthenticated,\n      user = _useAuthState.user;\n\n  var _useForm = useForm(),\n      handleSubmit = _useForm.handleSubmit,\n      register = _useForm.register,\n      control = _useForm.control,\n      errors = _useForm.errors,\n      isSubmitting = _useForm.formState.isSubmitting;\n\n  var hasura = hasuraUserClient();\n  var router = useRouter();\n\n  var _useSWR = useSWR(GetEvents, function (query) {\n    return hasura.request(query);\n  }, {\n    initialData: initialData,\n    revalidateOnMount: true\n  }),\n      data = _useSWR.data;\n\n  var _useSWR2 = useSWR(getUserEmail, function (query) {\n    return hasura.request(query);\n  }, {\n    emails: emails,\n    revalidateOnMount: true\n  }),\n      datat = _useSWR2.datat;\n\n  var onSubmit = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {\n      var Title, datetime, description, start_date, _yield$hasura$request, insert_Event_one, _yield$hasura$request2, insert_notification_one;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              Title = _ref2.Title, datetime = _ref2.datetime, description = _ref2.description;\n              start_date = datetime;\n              _context.prev = 2;\n              _context.next = 5;\n              return hasura.request(insertEvent, {\n                Title: Title,\n                description: description,\n                start_date: start_date,\n                manager_id: user.id\n              });\n\n            case 5:\n              _yield$hasura$request = _context.sent;\n              insert_Event_one = _yield$hasura$request.insert_Event_one;\n\n              if (!isAuthenticated) {\n                _context.next = 12;\n                break;\n              }\n\n              _context.next = 10;\n              return hasura.request(AddNotification);\n\n            case 10:\n              _yield$hasura$request2 = _context.sent;\n              insert_notification_one = _yield$hasura$request2.insert_notification_one;\n\n            case 12:\n              window.location.reload();\n              _context.next = 15;\n              return fetch(\"/api/contact\", {\n                method: \"POST\",\n                headers: {\n                  \"content-type\": \"application/json\"\n                },\n                body: JSON.stringify(emails)\n              });\n\n            case 15:\n              _context.next = 20;\n              break;\n\n            case 17:\n              _context.prev = 17;\n              _context.t0 = _context[\"catch\"](2);\n              console.log(_context.t0);\n\n            case 20:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 17]]);\n    }));\n\n    return function onSubmit(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var deleteEvent = gql(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral([\"\\n    mutation MyMutation($id: Int = 10) {\\n      delete_Event_by_pk(id: $id) {\\n        id\\n      }\\n    }\\n  \"])));\n\n  var handleDateClick = function handleDateClick(arg) {\n    // bind with an arrow function\n    alert(\"date \".concat(arg.dateStr, \" marked\")); // alert(\"Coordinates: \" + arg.jsEvent.pageX + \",\" + arg.jsEvent.pageY);\n    // alert(\"Current view: \" + arg.view.type);\n    // change the day's background color just for fun\n\n    arg.dayEl.style.backgroundColor = \"#FF5C5C\";\n  };\n\n  var handleevebt = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(arg) {\n      var c;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!confirm(\"are you sure you want to delete this event \".concat(arg.event.title, \"?\"))) {\n                _context2.next = 14;\n                break;\n              }\n\n              c = {\n                id: arg.event.id\n              };\n              _context2.prev = 2;\n              _context2.next = 5;\n              return hasura.request(deleteEvent, c);\n\n            case 5:\n              mutate();\n              window.location.reload();\n              _context2.next = 12;\n              break;\n\n            case 9:\n              _context2.prev = 9;\n              _context2.t0 = _context2[\"catch\"](2);\n              console.error(_context2.t0);\n\n            case 12:\n              _context2.next = 15;\n              break;\n\n            case 14:\n              return _context2.abrupt(\"return\", null);\n\n            case 15:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[2, 9]]);\n    }));\n\n    return function handleevebt(_x2) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var weekendsVisible = function weekendsVisible(arg) {\n    // alert(\"Coordinates: \" + arg.jsEvent.pageX + \",\" + arg.jsEvent.pageY);\n    // alert(\"Current view: \" + arg.view.type);\n    // change the day's background color just for fun\n    return arg.dayEl.style.backgroundColor = \"#FF5C5C\";\n  };\n\n  return __jsx(\"div\", {\n    className: \"page-content-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"page-content\",\n    style: {\n      minHeight: 1500\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"portlet light portlet-fit bordered calendar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"portlet-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"caption\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }\n  }, __jsx(\"i\", {\n    className: \" icon-layers font-green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 15\n    }\n  }), __jsx(\"span\", {\n    className: \"caption-subject font-green sbold uppercase\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 15\n    }\n  }, \"Calendar\"))), __jsx(\"div\", {\n    className: \"portlet-body \",\n    style: {\n      paddingTop: 45\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"col-md-3 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 15\n    }\n  }, __jsx(\"h3\", {\n    className: \"event-form-title margin-bottom-20\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 17\n    }\n  }, \"Event\"), isAuthenticated ? user.Role === \"Manager\" ? __jsx(\"div\", {\n    id: \"external-events\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 21\n    }\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 23\n    }\n  }, \" \", __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 25\n    }\n  }, __jsx(\"input\", {\n    type: \"text\",\n    name: \"Title\",\n    className: \"form-control\",\n    placeholder: \"Event Type...\",\n    id: \"event_title\",\n    ref: register({\n      required: \"You must provide a the event\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 27\n    }\n  }), \" \", errors.Title && __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 44\n    }\n  }, errors.Title.message)), \" \", __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 25\n    }\n  }, __jsx(\"input\", {\n    type: \"text\",\n    name: \"description\",\n    className: \"form-control\",\n    placeholder: \"Description\",\n    id: \"event_title\",\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 27\n    }\n  }), \" \"), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 25\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 27\n    }\n  }, \"Next appointment\"), \" \", __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 59\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 27\n    }\n  }), __jsx(TextField, {\n    id: \"datetime\",\n    name: \"datetime\",\n    type: \"datetime-local\",\n    defaultValue: today,\n    inputRef: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 27\n    }\n  })), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 25\n    }\n  }, __jsx(\"button\", {\n    type: \"submit\",\n    className: \"btn green\",\n    disabled: isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 27\n    }\n  }, \" \", \"Add Event\", \" \"))), __jsx(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 23\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 23\n    }\n  }, \" \", __jsx(\"table\", {\n    className: \"table table-hover\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 25\n    }\n  }, __jsx(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 27\n    }\n  }, __jsx(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 29\n    }\n  }, \" \", __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 31\n    }\n  }, \" edit\"), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 31\n    }\n  }, \" reason\"), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 31\n    }\n  }, \"start date\"), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 31\n    }\n  }, \"end date\"), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 31\n    }\n  }, \"Status\"))), __jsx(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 27\n    }\n  }, data.Event.map(function (_ref5) {\n    var id = _ref5.id,\n        Title = _ref5.Title,\n        start_date = _ref5.start_date;\n    var start = format(parseISO(start_date), \"yyyy-MM-dd\");\n    return __jsx(\"tr\", {\n      key: id,\n      className: \"odd gradeX\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 33\n      }\n    }, \" \", __jsx(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 35\n      }\n    }, __jsx(\"a\", {\n      className: \" btn-sm btn-warning\",\n      href: \"/\".concat(id),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 37\n      }\n    }, \"Edit\")), __jsx(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 35\n      }\n    }, Title), __jsx(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 35\n      }\n    }, start));\n  })))), __jsx(\"hr\", {\n    className: \"visible-xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 23\n    }\n  }), \" \") : __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 21\n    }\n  }) : __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 19\n    }\n  })), __jsx(\"div\", {\n    className: \"col-md-9 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 15\n    }\n  }, __jsx(FullCalendar, {\n    plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin, listPlugin],\n    headerToolbar: {\n      left: \"prev,next today\",\n      center: \"title\",\n      right: \"dayGridMonth,timeGridWeek,timeGridDay,listWeek\"\n    },\n    initialView: \"dayGridMonth\",\n    editable: true,\n    selectable: true,\n    selectMirror: true,\n    dayMaxEvents: true,\n    themeSystem: \"bootstrap\",\n    events: data.Event.map(function (_ref6) {\n      var id = _ref6.id,\n          Title = _ref6.Title,\n          start_date = _ref6.start_date;\n      return {\n        id: id,\n        title: Title,\n        date: start_date,\n        color: \"red\"\n      };\n    }),\n    dateClick: handleDateClick // initialEvents={INITIAL_EVENTS} // alternatively, use the `events` setting to fetch from a feed\n    // select={this.handleDateSelect}\n    // eventContent={renderEventContent} // custom render function\n    // eventsSet={this.handleEvents} // called after events are initialized/added/changed/removed\n\n    /* you can update a remote database when these fire:\r\n    eventAdd={function(){}}\r\n    eventChange={function(){}}\r\n    // */\n    //       validRange={{\n    //         start: \"2021-08-03\",\n    //         end: \"2021-08-07\",\n    //       }}\n    ,\n    weekends: false,\n    eventClick: handleevebt // select={color}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 17\n    }\n  })))))));\n}\n\n_s(Calendar, \"KskNMR4zKxGnBu7qA+pX01pD89g=\", false, function () {\n  return [useAuthState, useForm, useRouter, useSWR, useSWR];\n});\n\n_c = Calendar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"sources":["C:/Users/msdtt/OneDrive/Documents/amai_hr_next_js_hasura/amai-hr/pages/Calendar/index.js"],"names":["useSWR","mutate","useEffect","useRouter","useForm","React","useState","Form","Link","gql","DatePicker","format","intervalToDuration","parseISO","FullCalendar","dayGridPlugin","TextField","makeStyles","useAuthState","useAuthDispatch","interactionPlugin","timeGridPlugin","listPlugin","hasuraUserClient","today","Date","toISOString","substring","useStyles","theme","container","display","flexWrap","textField","marginLeft","spacing","marginRight","width","GetEvents","getUserEmail","AddNotification","insertEvent","Calendar","initialData","datar","emails","isAuthenticated","user","handleSubmit","register","control","errors","isSubmitting","formState","hasura","router","query","request","revalidateOnMount","data","datat","onSubmit","Title","datetime","description","start_date","manager_id","id","insert_Event_one","insert_notification_one","window","location","reload","fetch","method","headers","body","JSON","stringify","console","log","deleteEvent","handleDateClick","arg","alert","dateStr","dayEl","style","backgroundColor","handleevebt","confirm","event","title","c","error","weekendsVisible","minHeight","paddingTop","Role","required","message","Event","map","start","left","center","right","date","color"],"mappings":"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","sourcesContent":["import useSWR, { mutate } from \"swr\";\r\nimport { useEffect } from \"react\";\r\nimport { useRouter } from \"next/router\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport React, { useState } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport Link from \"next/link\";\r\nimport gql from \"graphql-tag\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { format, intervalToDuration, parseISO } from \"date-fns\";\r\nimport FullCalendar from \"@fullcalendar/react\"; // must go before plugins\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport \"@fullcalendar/common/main.css\";\r\nimport \"@fullcalendar/daygrid/main.css\";\r\nimport \"@fullcalendar/timegrid/main.css\";\r\nimport \"@fullcalendar/list/main.css\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useAuthState, useAuthDispatch } from \"../../context/auth\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\";\r\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\r\nimport listPlugin from \"@fullcalendar/list\";\r\nimport { hasuraUserClient } from \"../../lib/hasura-user-client\";\r\nconst today = new Date().toISOString().substring(0, 19);\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 200,\r\n  },\r\n}));\r\nconst GetEvents = gql`\r\n  query MyQuery {\r\n    Event {\r\n      id\r\n      Title\r\n      description\r\n      start_date\r\n    }\r\n  }\r\n`;\r\nconst getUserEmail = gql`\r\n  query MyQuery {\r\n    User {\r\n      email\r\n    }\r\n  }\r\n`;\r\nconst AddNotification = gql`\r\n  mutation MyMutation {\r\n    insert_notification_one(\r\n      object: {\r\n        name: \"Event\"\r\n        seen: false\r\n        description: \"a new event has been added to your calendar!\"\r\n      }\r\n    ) {\r\n      seen\r\n      name\r\n      id\r\n      description\r\n    }\r\n  }\r\n`;\r\n\r\nconst insertEvent = gql`\r\n  mutation MyMutation(\r\n    $Title: String!\r\n    $description: String!\r\n    $start_date: timestamp!\r\n    $manager_id: Int!\r\n  ) {\r\n    insert_Event_one(\r\n      object: {\r\n        Title: $Title\r\n        description: $description\r\n        start_date: $start_date\r\n        manager_id: $manager_id\r\n      }\r\n    ) {\r\n      Title\r\n      description\r\n      start_date\r\n    }\r\n  }\r\n`;\r\nconst getNotifications = gql`\r\n  query MyQuery {\r\n    notification(where: { user_id: { _is_null: true } }) {\r\n      description\r\n      name\r\n      seen\r\n    }\r\n    notification_aggregate(where: { user_id: { _is_null: true } }) {\r\n      aggregate {\r\n        count\r\n      }\r\n    }\r\n  }\r\n`;\r\nexport const getStaticProps = async () => {\r\n  const hasura = hasuraUserClient();\r\n  const initialData = await hasura.request(GetEvents);\r\n  const datar = await hasura.request(getNotifications);\r\n  const emails = await hasura.request(getUserEmail);\r\n\r\n  return {\r\n    props: {\r\n      initialData,\r\n      datar,\r\n      emails,\r\n    },\r\n    revalidate: 1,\r\n  };\r\n};\r\n\r\nexport default function Calendar({ initialData, datar, emails }) {\r\n  const { isAuthenticated, user } = useAuthState();\r\n\r\n  const {\r\n    handleSubmit,\r\n    register,\r\n    control,\r\n    errors,\r\n    formState: { isSubmitting },\r\n  } = useForm();\r\n  const hasura = hasuraUserClient();\r\n  const router = useRouter();\r\n  const { data } = useSWR(GetEvents, (query) => hasura.request(query), {\r\n    initialData,\r\n    revalidateOnMount: true,\r\n  });\r\n  const { datat } = useSWR(getUserEmail, (query) => hasura.request(query), {\r\n    emails,\r\n    revalidateOnMount: true,\r\n  });\r\n  const onSubmit = async ({ Title, datetime, description }) => {\r\n    const start_date = datetime;\r\n\r\n    try {\r\n      const { insert_Event_one } = await hasura.request(insertEvent, {\r\n        Title,\r\n        description,\r\n        start_date,\r\n        manager_id: user.id,\r\n      });\r\n      if (isAuthenticated) {\r\n        const { insert_notification_one } = await hasura.request(\r\n          AddNotification\r\n        );\r\n      }\r\n      window.location.reload();\r\n      await fetch(\"/api/contact\", {\r\n        method: \"POST\",\r\n        headers: { \"content-type\": \"application/json\" },\r\n        body: JSON.stringify(emails),\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  const deleteEvent = gql`\r\n    mutation MyMutation($id: Int = 10) {\r\n      delete_Event_by_pk(id: $id) {\r\n        id\r\n      }\r\n    }\r\n  `;\r\n  const handleDateClick = (arg) => {\r\n    // bind with an arrow function\r\n    alert(`date ${arg.dateStr} marked`);\r\n    // alert(\"Coordinates: \" + arg.jsEvent.pageX + \",\" + arg.jsEvent.pageY);\r\n    // alert(\"Current view: \" + arg.view.type);\r\n    // change the day's background color just for fun\r\n    arg.dayEl.style.backgroundColor = \"#FF5C5C\";\r\n  };\r\n  const handleevebt = async (arg) => {\r\n    if (\r\n      confirm(`are you sure you want to delete this event ${arg.event.title}?`)\r\n    ) {\r\n      const c = { id: arg.event.id };\r\n      try {\r\n        await hasura.request(deleteEvent, c);\r\n        mutate();\r\n        window.location.reload();\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n  const weekendsVisible = (arg) => {\r\n    // alert(\"Coordinates: \" + arg.jsEvent.pageX + \",\" + arg.jsEvent.pageY);\r\n    // alert(\"Current view: \" + arg.view.type);\r\n    // change the day's background color just for fun\r\n    return (arg.dayEl.style.backgroundColor = \"#FF5C5C\");\r\n  };\r\n  return (\r\n    <div className=\"page-content-wrapper\">\r\n      <div className=\"page-content\" style={{ minHeight: 1500 }}>\r\n        <div className=\"portlet light portlet-fit bordered calendar\">\r\n          <div className=\"portlet-title\">\r\n            <div className=\"caption\">\r\n              <i className=\" icon-layers font-green\"></i>\r\n              <span className=\"caption-subject font-green sbold uppercase\">\r\n                Calendar\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div className=\"portlet-body \" style={{ paddingTop: 45 }}>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-3 \">\r\n                <h3 className=\"event-form-title margin-bottom-20\">Event</h3>\r\n                {isAuthenticated ? (\r\n                  user.Role === \"Manager\" ? (\r\n                    <div id=\"external-events\">\r\n                      <form onSubmit={handleSubmit(onSubmit)}>\r\n                        {\" \"}\r\n                        <div className=\"form-group\">\r\n                          <input\r\n                            type=\"text\"\r\n                            name=\"Title\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Event Type...\"\r\n                            id=\"event_title\"\r\n                            ref={register({\r\n                              required: \"You must provide a the event\",\r\n                            })}\r\n                          />{\" \"}\r\n                          {errors.Title && <span>{errors.Title.message}</span>}\r\n                        </div>{\" \"}\r\n                        <div className=\"form-group\">\r\n                          <input\r\n                            type=\"text\"\r\n                            name=\"description\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Description\"\r\n                            id=\"event_title\"\r\n                            ref={register}\r\n                          />{\" \"}\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                          <label>Next appointment</label> <br />\r\n                          <br />\r\n                          <TextField\r\n                            id=\"datetime\"\r\n                            name=\"datetime\"\r\n                            type=\"datetime-local\"\r\n                            defaultValue={today}\r\n                            inputRef={register}\r\n                          />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                          <button\r\n                            type=\"submit\"\r\n                            className=\"btn green\"\r\n                            disabled={isSubmitting}\r\n                          >\r\n                            {\" \"}\r\n                            Add Event{\" \"}\r\n                          </button>\r\n                        </div>\r\n                      </form>\r\n                      <hr />\r\n                      <div>\r\n                        {\" \"}\r\n                        <table className=\"table table-hover\">\r\n                          <thead>\r\n                            <tr>\r\n                              {\" \"}\r\n                              <th> edit</th>\r\n                              <th> reason</th>\r\n                              <th>start date</th>\r\n                              <th>end date</th>\r\n                              <th>Status</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            {data.Event.map(({ id, Title, start_date }) => {\r\n                              const start = format(\r\n                                parseISO(start_date),\r\n                                \"yyyy-MM-dd\"\r\n                              );\r\n                              return (\r\n                                <tr key={id} className=\"odd gradeX\">\r\n                                  {\" \"}\r\n                                  <td>\r\n                                    <a\r\n                                      className=\" btn-sm btn-warning\"\r\n                                      href={`/${id}`}\r\n                                    >\r\n                                      Edit\r\n                                    </a>\r\n                                  </td>\r\n                                  <td>{Title}</td>\r\n                                  <td>{start}</td>\r\n                                </tr>\r\n                              );\r\n                            })}\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n                      <hr className=\"visible-xs\" />{\" \"}\r\n                    </div>\r\n                  ) : (\r\n                    <div></div>\r\n                  )\r\n                ) : (\r\n                  <div></div>\r\n                )}\r\n              </div>\r\n              <div className=\"col-md-9 \">\r\n                <FullCalendar\r\n                  plugins={[\r\n                    dayGridPlugin,\r\n                    timeGridPlugin,\r\n                    interactionPlugin,\r\n                    listPlugin,\r\n                  ]}\r\n                  headerToolbar={{\r\n                    left: \"prev,next today\",\r\n                    center: \"title\",\r\n                    right: \"dayGridMonth,timeGridWeek,timeGridDay,listWeek\",\r\n                  }}\r\n                  initialView=\"dayGridMonth\"\r\n                  editable={true}\r\n                  selectable={true}\r\n                  selectMirror={true}\r\n                  dayMaxEvents={true}\r\n                  themeSystem=\"bootstrap\"\r\n                  events={data.Event.map(({ id, Title, start_date }) => {\r\n                    return {\r\n                      id: id,\r\n                      title: Title,\r\n                      date: start_date,\r\n                      color: \"red\",\r\n                    };\r\n                  })}\r\n                  dateClick={handleDateClick}\r\n                  // initialEvents={INITIAL_EVENTS} // alternatively, use the `events` setting to fetch from a feed\r\n                  // select={this.handleDateSelect}\r\n                  // eventContent={renderEventContent} // custom render function\r\n                  // eventsSet={this.handleEvents} // called after events are initialized/added/changed/removed\r\n                  /* you can update a remote database when these fire:\r\n                eventAdd={function(){}}\r\n                eventChange={function(){}}\r\n                // */\r\n                  //       validRange={{\r\n                  //         start: \"2021-08-03\",\r\n                  //         end: \"2021-08-07\",\r\n                  //       }}\r\n                  weekends={false}\r\n                  eventClick={handleevebt}\r\n                  // select={color}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}