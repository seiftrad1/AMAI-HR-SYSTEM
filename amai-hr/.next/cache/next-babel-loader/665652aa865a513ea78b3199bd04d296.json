{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _templateObject,\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport gql from \"graphql-tag\";\nimport Header from \"./Header/Header\";\nimport { hasuraUserClient } from \"../../lib/hasura-user-client\";\nimport { useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nvar Notification_count = gql(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  query MyQuery {\\n    notification_aggregate {\\n      aggregate {\\n        count(columns: id)\\n      }\\n    }\\n  }\\n\"])));\nexport default function Notification(_ref) {\n  _s();\n\n  var children = _ref.children;\n  useEffect(function () {\n    if (!isAuthenticated || !save_last_seen) return;\n    updateLastSeen(router.pathname);\n    router.events.on(\"routeChangeComplete\", updateLastSeen);\n    return function () {\n      return router.events.off(\"routeChangeComplete\", updateLastSeen);\n    };\n  }, [isAuthenticated, save_last_seen]);\n\n  var updateLastSeen = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(url) {\n      var hasura;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              hasura = hasuraUserClient();\n              _context.next = 3;\n              return hasura.request(UpdateUserLastSeen, {\n                id: user.id,\n                now: new Date().toISOString(),\n                url: url\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function updateLastSeen(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return children;\n}\n\n_s(Notification, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Notification;\n\nvar _c;\n\n$RefreshReg$(_c, \"Notification\");","map":{"version":3,"sources":["C:/Users/msdtt/OneDrive/Documents/amai_hr_next_js_hasura/amai-hr/pages/Components/Notification.js"],"names":["React","gql","Header","hasuraUserClient","useEffect","useRouter","Notification_count","Notification","children","isAuthenticated","save_last_seen","updateLastSeen","router","pathname","events","on","off","url","hasura","request","UpdateUserLastSeen","id","user","now","Date","toISOString"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SAASC,gBAAT,QAAiC,8BAAjC;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,IAAMC,kBAAkB,GAAGL,GAAH,4LAAxB;AASA,eAAe,SAASM,YAAT,OAAoC;AAAA;;AAAA,MAAZC,QAAY,QAAZA,QAAY;AACjDJ,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI,CAACK,eAAD,IAAoB,CAACC,cAAzB,EAAyC;AAEzCC,IAAAA,cAAc,CAACC,MAAM,CAACC,QAAR,CAAd;AAEAD,IAAAA,MAAM,CAACE,MAAP,CAAcC,EAAd,CAAiB,qBAAjB,EAAwCJ,cAAxC;AAEA,WAAO;AAAA,aAAMC,MAAM,CAACE,MAAP,CAAcE,GAAd,CAAkB,qBAAlB,EAAyCL,cAAzC,CAAN;AAAA,KAAP;AACD,GARQ,EAQN,CAACF,eAAD,EAAkBC,cAAlB,CARM,CAAT;;AAUA,MAAMC,cAAc;AAAA,yEAAG,iBAAOM,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACfC,cAAAA,MADe,GACNf,gBAAgB,EADV;AAAA;AAAA,qBAGfe,MAAM,CAACC,OAAP,CAAeC,kBAAf,EAAmC;AACvCC,gBAAAA,EAAE,EAAEC,IAAI,CAACD,EAD8B;AAEvCE,gBAAAA,GAAG,EAAE,IAAIC,IAAJ,GAAWC,WAAX,EAFkC;AAGvCR,gBAAAA,GAAG,EAAHA;AAHuC,eAAnC,CAHe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAdN,cAAc;AAAA;AAAA;AAAA,KAApB;;AAUA,SAAOH,QAAP;AACD;;GAtBuBD,Y;;KAAAA,Y","sourcesContent":["import React from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport Header from \"./Header/Header\";\r\nimport { hasuraUserClient } from \"../../lib/hasura-user-client\";\r\nimport { useEffect } from \"react\";\r\nimport { useRouter } from \"next/router\";\r\n\r\nconst Notification_count = gql`\r\n  query MyQuery {\r\n    notification_aggregate {\r\n      aggregate {\r\n        count(columns: id)\r\n      }\r\n    }\r\n  }\r\n`;\r\nexport default function Notification({ children }) {\r\n  useEffect(() => {\r\n    if (!isAuthenticated || !save_last_seen) return;\r\n\r\n    updateLastSeen(router.pathname);\r\n\r\n    router.events.on(\"routeChangeComplete\", updateLastSeen);\r\n\r\n    return () => router.events.off(\"routeChangeComplete\", updateLastSeen);\r\n  }, [isAuthenticated, save_last_seen]);\r\n\r\n  const updateLastSeen = async (url) => {\r\n    const hasura = hasuraUserClient();\r\n\r\n    await hasura.request(UpdateUserLastSeen, {\r\n      id: user.id,\r\n      now: new Date().toISOString(),\r\n      url,\r\n    });\r\n  };\r\n\r\n  return children;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}