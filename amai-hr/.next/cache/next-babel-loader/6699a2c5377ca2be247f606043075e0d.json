{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { createContext, useReducer, useContext, useEffect } from \"react\";\nimport createPersistedState from \"use-persisted-state\";\nvar AuthDispatchContext = /*#__PURE__*/createContext();\nvar AuthStateContext = /*#__PURE__*/createContext();\nvar usePersistedAuthState = createPersistedState(\"jamstackforum-auth\");\nvar LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nvar UPDATE_USER = \"UPDATE_USER\";\nvar LOGOUT = \"LOGOUT\";\nvar initialState = {\n  isAuthenticated: false,\n  user: null,\n  token: null,\n  save_last_seen: false\n};\n\nfunction reducer(state, _ref) {\n  var payload = _ref.payload,\n      type = _ref.type;\n\n  switch (type) {\n    case LOGIN_SUCCESS:\n      return _objectSpread(_objectSpread(_objectSpread({}, state), payload), {}, {\n        isAuthenticated: true\n      });\n\n    case UPDATE_USER:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: _objectSpread(_objectSpread({}, state.user), payload)\n      });\n\n    case LOGOUT:\n      return initialState;\n\n    default:\n      throw new Error(\"Unhandled action type \".concat(type));\n  }\n}\n\nfunction AuthProvider(_ref2) {\n  var children = _ref2.children;\n\n  var _usePersistedAuthStat = usePersistedAuthState(initialState),\n      _usePersistedAuthStat2 = _slicedToArray(_usePersistedAuthStat, 2),\n      savedAuthState = _usePersistedAuthStat2[0],\n      saveAuthState = _usePersistedAuthStat2[1];\n\n  var _useReducer = useReducer(reducer, savedAuthState),\n      state = _useReducer[0],\n      dispatch = _useReducer[1];\n\n  useEffect(function () {\n    saveAuthState(state);\n  }, [state, saveAuthState]);\n\n  var login = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref3) {\n      var email, password, save_last_seen, res, json, token, user;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              email = _ref3.email, password = _ref3.password, save_last_seen = _ref3.save_last_seen;\n              _context.next = 3;\n              return fetch(\"/api/login\", {\n                method: \"POST\",\n                body: JSON.stringify({\n                  email: email,\n                  password: password\n                }),\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                }\n              });\n\n            case 3:\n              res = _context.sent;\n              _context.next = 6;\n              return res.json();\n\n            case 6:\n              json = _context.sent;\n\n              if (res.ok) {\n                _context.next = 9;\n                break;\n              }\n\n              throw new Error(json === null || json === void 0 ? void 0 : json.message);\n\n            case 9:\n              token = json.token, user = _objectWithoutProperties(json, [\"token\"]);\n              dispatch({\n                type: LOGIN_SUCCESS,\n                payload: {\n                  token: token,\n                  user: user,\n                  save_last_seen: save_last_seen\n                }\n              });\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function login(_x) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var register = /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_ref5) {\n      var name, email, password, save_last_seen, res, json, token, user;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              name = _ref5.name, email = _ref5.email, password = _ref5.password, save_last_seen = _ref5.save_last_seen;\n              _context2.next = 3;\n              return fetch(\"/api/register\", {\n                method: \"POST\",\n                body: JSON.stringify({\n                  name: name,\n                  email: email,\n                  password: password\n                }),\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                }\n              });\n\n            case 3:\n              res = _context2.sent;\n              _context2.next = 6;\n              return res.json();\n\n            case 6:\n              json = _context2.sent;\n\n              if (res.ok) {\n                _context2.next = 9;\n                break;\n              }\n\n              throw new Error(json === null || json === void 0 ? void 0 : json.message);\n\n            case 9:\n              token = json.token, user = _objectWithoutProperties(json, [\"token\"]);\n              dispatch({\n                type: LOGIN_SUCCESS,\n                payload: {\n                  token: token,\n                  user: user,\n                  save_last_seen: save_last_seen\n                }\n              });\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function register(_x2) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n\n  var updateUser = function updateUser(payload) {\n    return dispatch({\n      type: UPDATE_USER,\n      payload: payload\n    });\n  };\n\n  var logout = function logout() {\n    return dispatch({\n      type: LOGOUT\n    });\n  };\n\n  return __jsx(AuthDispatchContext.Provider, {\n    value: {\n      login: login,\n      register: register,\n      updateUser: updateUser,\n      logout: logout\n    }\n  }, __jsx(AuthStateContext.Provider, {\n    value: state\n  }, children));\n}\n\nfunction useAuthDispatch() {\n  var context = useContext(AuthDispatchContext);\n  if (context === undefined) throw new Error(\"useAuthDispatch must be used within an AuthProvider\");\n  return context;\n}\n\nfunction useAuthState() {\n  var context = useContext(AuthStateContext);\n  if (context === undefined) throw new Error(\"useAuthState must be used within an AuthProvider\");\n  return context;\n}\n\nexport { AuthProvider, useAuthDispatch, useAuthState };","map":null,"metadata":{},"sourceType":"module"}