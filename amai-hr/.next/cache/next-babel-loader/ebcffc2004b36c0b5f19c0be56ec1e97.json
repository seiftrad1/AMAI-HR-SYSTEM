{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\msdtt\\\\OneDrive\\\\Documents\\\\amai_hr_next_js_hasura\\\\amai-hr\\\\pages\\\\Project\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport useSWR, { mutate } from \"swr\";\nimport Link from \"next/link\";\nimport gql from \"graphql-tag\";\nimport { useRouter } from \"next/router\";\nimport { hasuraUserClient } from \"../../lib/hasura-user-client\";\nconst today = new Date();\nconst GetCandidats = gql`\n  query MyQuery {\n    Candidate {\n      Email\n      Last_Name\n      Name\n      domain\n      id\n      phone_number\n      Status\n    }\n  }\n`;\nexport const getStaticProps = async () => {\n  const hasura = hasuraUserClient();\n  const initialData = await hasura.request(GetCandidats);\n  return {\n    props: {\n      initialData\n    },\n    revalidate: 1\n  };\n};\nexport default function MembersPage({\n  initialData\n}) {\n  const hasura = hasuraUserClient();\n  const router = useRouter();\n  const {\n    data\n  } = useSWR(GetCandidats, query => hasura.request(query), {\n    initialData,\n    revalidateOnMount: true\n  });\n\n  const deleteATodo = async id => {\n    const query = gql`\n      mutation delete_Candidate($id: Int!) {\n        delete_Candidate(where: { id: { _eq: $id } }) {\n          affected_rows\n        }\n      }\n    `;\n\n    try {\n      await hasura.request(query, {\n        id\n      });\n      mutate();\n      window.location.reload();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const updateStatus = async id => {\n    const SetStatus = gql`\n      mutation MyMutation($id: Int!) {\n        update_Candidate_by_pk(pk_columns: { id: $id }, _set: { Status: 1 }) {\n          id\n          Status\n        }\n      }\n    `;\n\n    try {\n      await hasura.request(SetStatus, {\n        id\n      });\n      mutate();\n      router.push(`/RegisterCandidatAccount/${id}`);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const DeclineCandidat = async id => {\n    const SetStatus = gql`\n      mutation MyMutation($id: Int!) {\n        update_Candidate_by_pk(pk_columns: { id: $id }, _set: { Status: 0 }) {\n          id\n          Status\n        }\n      }\n    `;\n\n    try {\n      await hasura.request(SetStatus, {\n        id\n      });\n      mutate();\n      window.location.reload();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const Modify = async ({\n    id\n  }) => {\n    console.log(id);\n    router.push(`/CandidatOne/${id}`);\n  };\n\n  return __jsx(\"div\", {\n    className: \"page-content-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"page-content\",\n    style: {\n      minHeight: 1500\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/msdtt/OneDrive/Documents/amai_hr_next_js_hasura/amai-hr/pages/Project/index.js"],"names":["useSWR","mutate","Link","gql","useRouter","hasuraUserClient","today","Date","GetCandidats","getStaticProps","hasura","initialData","request","props","revalidate","MembersPage","router","data","query","revalidateOnMount","deleteATodo","id","window","location","reload","error","console","updateStatus","SetStatus","push","DeclineCandidat","Modify","log","minHeight"],"mappings":"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","sourcesContent":["import useSWR, { mutate } from \"swr\";\r\n\r\nimport Link from \"next/link\";\r\nimport gql from \"graphql-tag\";\r\nimport { useRouter } from \"next/router\";\r\n\r\nimport { hasuraUserClient } from \"../../lib/hasura-user-client\";\r\n\r\nconst today = new Date();\r\n\r\nconst GetCandidats = gql`\r\n  query MyQuery {\r\n    Candidate {\r\n      Email\r\n      Last_Name\r\n      Name\r\n      domain\r\n      id\r\n      phone_number\r\n      Status\r\n    }\r\n  }\r\n`;\r\n\r\nexport const getStaticProps = async () => {\r\n  const hasura = hasuraUserClient();\r\n\r\n  const initialData = await hasura.request(GetCandidats);\r\n\r\n  return {\r\n    props: {\r\n      initialData,\r\n    },\r\n    revalidate: 1,\r\n  };\r\n};\r\n\r\nexport default function MembersPage({ initialData }) {\r\n  const hasura = hasuraUserClient();\r\n  const router = useRouter();\r\n\r\n  const { data } = useSWR(GetCandidats, (query) => hasura.request(query), {\r\n    initialData,\r\n    revalidateOnMount: true,\r\n  });\r\n  const deleteATodo = async (id) => {\r\n    const query = gql`\r\n      mutation delete_Candidate($id: Int!) {\r\n        delete_Candidate(where: { id: { _eq: $id } }) {\r\n          affected_rows\r\n        }\r\n      }\r\n    `;\r\n\r\n    try {\r\n      await hasura.request(query, { id });\r\n      mutate();\r\n      window.location.reload();\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  const updateStatus = async (id) => {\r\n    const SetStatus = gql`\r\n      mutation MyMutation($id: Int!) {\r\n        update_Candidate_by_pk(pk_columns: { id: $id }, _set: { Status: 1 }) {\r\n          id\r\n          Status\r\n        }\r\n      }\r\n    `;\r\n    try {\r\n      await hasura.request(SetStatus, { id });\r\n      mutate();\r\n      router.push(`/RegisterCandidatAccount/${id}`);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  const DeclineCandidat = async (id) => {\r\n    const SetStatus = gql`\r\n      mutation MyMutation($id: Int!) {\r\n        update_Candidate_by_pk(pk_columns: { id: $id }, _set: { Status: 0 }) {\r\n          id\r\n          Status\r\n        }\r\n      }\r\n    `;\r\n    try {\r\n      await hasura.request(SetStatus, { id });\r\n      mutate();\r\n      window.location.reload();\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  const Modify = async ({ id }) => {\r\n    console.log(id);\r\n    router.push(`/CandidatOne/${id}`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"page-content-wrapper\">\r\n      <div className=\"page-content\" style={{ minHeight: 1500 }}></div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}