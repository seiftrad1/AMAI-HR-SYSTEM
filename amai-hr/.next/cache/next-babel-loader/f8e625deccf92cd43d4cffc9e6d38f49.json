{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _templateObject, _templateObject2;\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useRouter } from \"next/router\";\nimport useSWR from \"swr\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport Layout from \"../Components/Layout\";\nimport { gql, hasuraUserClient } from \"../../lib/hasura-user-client\";\nvar GetCategoryById = gql(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  query GetCategoryById($id: Int!) {\\n    Candidate_by_pk(id: $id) {\\n      id\\n      Email\\n      Last_Name\\n      Name\\n      domain\\n      phone_number\\n      Status\\n    }\\n  }\\n\"])));\nvar UpdatePost = gql(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n  mutation update_Candidate_by_pk(\\n    $id: Int!\\n    $Email: String!\\n    $Last_Name: String!\\n    $Name: String!\\n    $domain: String!\\n    $phone_number: String!\\n  ) {\\n    update_Candidate_by_pk(\\n      pk_columns: { id: $id }\\n      _set: {\\n        Email: $Email\\n        Last_Name: $Last_Name\\n        Name: $Name\\n        domain: $domain\\n        phone_number: $phone_number\\n      }\\n    ) {\\n      Email\\n      Last_Name\\n      Name\\n      domain\\n      id\\n      phone_number\\n      Status\\n    }\\n  }\\n\"])));\nexport var __N_SSG = true;\nexport default function CategoryPage(_ref) {\n  var initialData = _ref.initialData;\n  var hasura = hasuraUserClient();\n\n  var _useRouter = useRouter(),\n      query = _useRouter.query;\n\n  var router = useRouter();\n  var id = query.id;\n\n  var _useForm = useForm(),\n      handleSubmit = _useForm.handleSubmit,\n      register = _useForm.register,\n      control = _useForm.control,\n      errors = _useForm.errors,\n      isSubmitting = _useForm.formState.isSubmitting,\n      defaultValues = _extends({}, _useForm.defaultValues);\n\n  var _useSWR = useSWR([GetCategoryById, id], function (query, id) {\n    return hasura.request(query, {\n      id: id\n    });\n  }, {\n    initialData: initialData,\n    revalidateOnMount: true\n  }),\n      data = _useSWR.data,\n      mutate = _useSWR.mutate;\n\n  var onSubmit = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {\n      var id, Email, Last_Name, Name, domain, phone_number, _id, _yield$hasura$request, update_Candidate_by_pk;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              id = _ref2.id, Email = _ref2.Email, Last_Name = _ref2.Last_Name, Name = _ref2.Name, domain = _ref2.domain, phone_number = _ref2.phone_number;\n              _context.prev = 1;\n              _id = data.Candidate_by_pk.id;\n              console.log(_id);\n              _context.next = 6;\n              return hasura.request(UpdatePost, {\n                id: _id,\n                Email: Email,\n                Last_Name: Last_Name,\n                Name: Name,\n                domain: domain,\n                phone_number: phone_number\n              });\n\n            case 6:\n              _yield$hasura$request = _context.sent;\n              update_Candidate_by_pk = _yield$hasura$request.update_Candidate_by_pk;\n              mutate(_objectSpread(_objectSpread({}, data), update_Candidate_by_pk));\n              router.push(\"/CandidatList\");\n              _context.next = 15;\n              break;\n\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](1);\n              console.log(_context.t0);\n\n            case 15:\n              useEffect(function () {\n                reset(defaultValues); // asynchronously reset your form values\n              }, [reset, defaultValues]);\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 12]]);\n    }));\n\n    return function onSubmit(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(Layout, null, __jsx(\"div\", {\n    className: \"page-content-wrapper\"\n  }, __jsx(\"div\", {\n    className: \"page-content\",\n    style: {\n      minHeight: 1500\n    }\n  }, __jsx(\"div\", {\n    \"class\": \"profile-content\"\n  }, __jsx(\"div\", {\n    \"class\": \"row\"\n  }, __jsx(\"div\", {\n    \"class\": \"col-md-12\"\n  }, __jsx(\"div\", {\n    \"class\": \"portlet light \"\n  }, __jsx(\"div\", {\n    \"class\": \"portlet-body\"\n  }, __jsx(\"div\", {\n    \"class\": \"tab-content\"\n  }, __jsx(\"div\", {\n    \"class\": \"tab-pane active\",\n    id: \"tab_1_1\"\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmit)\n  }, __jsx(\"div\", {\n    \"class\": \"form-group\"\n  }, __jsx(\"label\", {\n    \"class\": \"control-label\"\n  }, \"First Name\"), __jsx(\"input\", {\n    defaultValue: data.Candidate_by_pk.Name,\n    name: \"Name\",\n    id: \"Name\",\n    type: \"text\",\n    \"class\": \"form-control\",\n    ref: register({\n      required: \"You must select a category for your thread\"\n    })\n  }), \" \"), __jsx(\"div\", {\n    \"class\": \"form-group\"\n  }, __jsx(\"label\", {\n    \"class\": \"control-label\"\n  }, \"Last Name\"), __jsx(\"input\", {\n    defaultValue: data.Candidate_by_pk.Last_Name,\n    name: \"Last_Name\",\n    id: \"Last_Name\",\n    type: \"text\",\n    placeholder: \"Last Name\",\n    \"class\": \"form-control\",\n    ref: register({\n      required: \"You must select a category for your thread\"\n    })\n  }), \" \"), __jsx(\"div\", {\n    \"class\": \"form-group\"\n  }, __jsx(\"label\", {\n    \"class\": \"control-label\"\n  }, \"Mobile Number\"), __jsx(\"input\", {\n    defaultValue: data.Candidate_by_pk.phone_number,\n    name: \"phone_number\",\n    id: \"phone_number\",\n    type: \"text\",\n    placeholder: \"+1 646 580 DEMO (6284)\",\n    \"class\": \"form-control\",\n    ref: register({\n      required: \"You must select a category for your thread\"\n    })\n  }), \" \"), __jsx(\"div\", {\n    \"class\": \"form-group\"\n  }, __jsx(\"label\", {\n    \"class\": \"control-label\"\n  }, \"Email\"), __jsx(\"input\", {\n    name: \"Email\",\n    id: \"Email\",\n    type: \"email\",\n    defaultValue: data.Candidate_by_pk.Email,\n    \"class\": \"form-control\",\n    ref: register({\n      required: \"You must select a category for your thread\"\n    })\n  }), \" \"), __jsx(\"div\", {\n    \"class\": \"form-group\"\n  }, __jsx(\"label\", {\n    \"class\": \"control-label\"\n  }, \"Domain\"), __jsx(\"input\", {\n    defaultValue: data.Candidate_by_pk.domain,\n    name: \"domain\",\n    id: \"domain\",\n    type: \"text\",\n    placeholder: \"Web Developer\",\n    \"class\": \"form-control\",\n    ref: register({\n      required: \"You must select a category for your thread\"\n    })\n  }), \" \"), __jsx(\"div\", {\n    \"class\": \"margiv-top-10\"\n  }, __jsx(\"button\", {\n    type: \"submit\",\n    \"class\": \"btn green\",\n    disabled: isSubmitting\n  }, \" \", \"Save Changes\", \" \"), __jsx(\"a\", {\n    href: \"#\",\n    \"class\": \"btn default\"\n  }, \" \", \"Cancel\", \" \"))))))))))), \" \"));\n}","map":null,"metadata":{},"sourceType":"module"}