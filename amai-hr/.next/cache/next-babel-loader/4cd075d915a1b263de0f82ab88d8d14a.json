{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\msdtt\\\\OneDrive\\\\Documents\\\\amai_hr_next_js_hasura\\\\amai-hr\\\\pages\\\\email.js\";\nvar __jsx = React.createElement;\nimport { FormControl, FormLabel, Button } from \"react-bootstrap\";\nimport { useForm } from \"react-hook-form\";\nimport React from \"react\";\nexport default function MembersPage({\n  initialData\n}) {\n  const editorRef = useRef();\n  const [editorLoaded, setEditorLoaded] = useState(false);\n  const {\n    CKEditor,\n    ClassicEditor\n  } = editorRef.current || {};\n  useEffect(() => {\n    editorRef.current = {\n      CKEditor: require(\"@ckeditor/ckeditor5-react\"),\n      ClassicEditor: require(\"@ckeditor/ckeditor5-build-classic\")\n    };\n    setEditorLoaded(true);\n  }, []);\n  const {\n    handleSubmit,\n    register,\n    control,\n    errors,\n    formState: {\n      isSubmitting\n    }\n  } = useForm();\n\n  const sendMail = async data => {\n    try {\n      await fetch(\"/api/contact\", {\n        method: \"POST\",\n        headers: {\n          \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      }); //if sucess do whatever you like, i.e toast notification\n    } catch (error) {// toast error message. whatever you wish\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: \"page-content-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"page-content\",\n    style: {\n      minHeight: 1500\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit(sendMail),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    class: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, \" \", __jsx(\"div\", {\n    class: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    class: \"form-control form-control-solid placeholder-no-fix\",\n    name: \"subject\",\n    id: \"subject\",\n    ref: register({\n      required: \"You must provide a name.\"\n    }),\n    placeholder: \"Your name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 15\n    }\n  })), __jsx(\"div\", {\n    class: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, \" \", __jsx(\"input\", {\n    class: \"form-control form-control-solid placeholder-no-fix\",\n    type: \"email\",\n    name: \"email\",\n    id: \"email\",\n    ref: register({\n      required: \"You must provide a email.\",\n      pattern: {\n        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n        message: \"You must provide a valid email\"\n      }\n    }),\n    placeholder: \"Your email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  })), __jsx(\"div\", {\n    class: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, \" \", __jsx(\"input\", {\n    class: \"form-control form-control-solid placeholder-no-fix\",\n    type: \"name\",\n    name: \"name\",\n    id: \"name\",\n    ref: register({\n      required: \"You must provide a password.\",\n      minLength: {\n        message: \"Your password must be at least 6 characters\",\n        value: 6\n      }\n    }),\n    placeholder: \"Choose a password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  })), __jsx(\"div\", {\n    class: \"create-account\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, __jsx(\"button\", {\n    type: \"submit\",\n    disabled: isSubmitting,\n    class: \"btn green uppercase\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }\n  }, \"send\")), \" \", __jsx(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, __jsx(CKEditor, {\n    editor: ClassicEditor,\n    data: \"<p>Hello from CKEditor 5!</p>\",\n    onInit: editor => {\n      // You can store the \"editor\" and use when it is needed.\n      console.log(\"Editor is ready to use!\", editor);\n    },\n    onChange: (event, editor) => {\n      const data = editor.getData();\n      console.log({\n        event,\n        editor,\n        data\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  }))))));\n}","map":{"version":3,"sources":["C:/Users/msdtt/OneDrive/Documents/amai_hr_next_js_hasura/amai-hr/pages/email.js"],"names":["FormControl","FormLabel","Button","useForm","React","MembersPage","initialData","editorRef","useRef","editorLoaded","setEditorLoaded","useState","CKEditor","ClassicEditor","current","useEffect","require","handleSubmit","register","control","errors","formState","isSubmitting","sendMail","data","fetch","method","headers","body","JSON","stringify","error","minHeight","required","pattern","value","message","minLength","editor","console","log","event","getData"],"mappings":"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","sourcesContent":["import { FormControl, FormLabel, Button } from \"react-bootstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport React from \"react\";\r\n\r\nexport default function MembersPage({ initialData }) {\r\n  const editorRef = useRef();\r\n  const [editorLoaded, setEditorLoaded] = useState(false);\r\n  const { CKEditor, ClassicEditor } = editorRef.current || {};\r\n\r\n  useEffect(() => {\r\n    editorRef.current = {\r\n      CKEditor: require(\"@ckeditor/ckeditor5-react\"),\r\n      ClassicEditor: require(\"@ckeditor/ckeditor5-build-classic\"),\r\n    };\r\n    setEditorLoaded(true);\r\n  }, []);\r\n  const {\r\n    handleSubmit,\r\n    register,\r\n    control,\r\n    errors,\r\n    formState: { isSubmitting },\r\n  } = useForm();\r\n  const sendMail = async (data) => {\r\n    try {\r\n      await fetch(\"/api/contact\", {\r\n        method: \"POST\",\r\n        headers: { \"content-type\": \"application/json\" },\r\n        body: JSON.stringify(data),\r\n      });\r\n\r\n      //if sucess do whatever you like, i.e toast notification\r\n    } catch (error) {\r\n      // toast error message. whatever you wish\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"page-content-wrapper\">\r\n      <div className=\"page-content\" style={{ minHeight: 1500 }}>\r\n        <form onSubmit={handleSubmit(sendMail)}>\r\n          <div class=\"content\">\r\n            {\" \"}\r\n            <div class=\"form-group\">\r\n              <input\r\n                class=\"form-control form-control-solid placeholder-no-fix\"\r\n                name=\"subject\"\r\n                id=\"subject\"\r\n                ref={register({\r\n                  required: \"You must provide a name.\",\r\n                })}\r\n                placeholder=\"Your name\"\r\n              />\r\n            </div>\r\n            <div class=\"form-group\">\r\n              {\" \"}\r\n              <input\r\n                class=\"form-control form-control-solid placeholder-no-fix\"\r\n                type=\"email\"\r\n                name=\"email\"\r\n                id=\"email\"\r\n                ref={register({\r\n                  required: \"You must provide a email.\",\r\n                  pattern: {\r\n                    value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                    message: \"You must provide a valid email\",\r\n                  },\r\n                })}\r\n                placeholder=\"Your email\"\r\n              />\r\n            </div>\r\n            <div class=\"form-group\">\r\n              {\" \"}\r\n              <input\r\n                class=\"form-control form-control-solid placeholder-no-fix\"\r\n                type=\"name\"\r\n                name=\"name\"\r\n                id=\"name\"\r\n                ref={register({\r\n                  required: \"You must provide a password.\",\r\n                  minLength: {\r\n                    message: \"Your password must be at least 6 characters\",\r\n                    value: 6,\r\n                  },\r\n                })}\r\n                placeholder=\"Choose a password\"\r\n              />\r\n            </div>\r\n            <div class=\"create-account\">\r\n              <button\r\n                type=\"submit\"\r\n                disabled={isSubmitting}\r\n                class=\"btn green uppercase\"\r\n              >\r\n                send\r\n              </button>\r\n            </div>{\" \"}\r\n            <div className=\"App\">\r\n              <CKEditor\r\n                editor={ClassicEditor}\r\n                data=\"<p>Hello from CKEditor 5!</p>\"\r\n                onInit={(editor) => {\r\n                  // You can store the \"editor\" and use when it is needed.\r\n                  console.log(\"Editor is ready to use!\", editor);\r\n                }}\r\n                onChange={(event, editor) => {\r\n                  const data = editor.getData();\r\n                  console.log({ event, editor, data });\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}