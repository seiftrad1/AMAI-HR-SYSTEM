{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\msdtt\\\\OneDrive\\\\Documents\\\\amai_hr_next_js_hasura\\\\amai-hr\\\\pages\\\\Task\\\\[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport useSWR, { mutate } from \"swr\";\nimport { useForm } from \"react-hook-form\";\nimport gql from \"graphql-tag\";\nimport { useRouter } from \"next/router\";\nimport { hasuraUserClient } from \"../../lib/hasura-user-client\";\nimport { useState } from \"react\";\nconst from = new Date().toISOString();\nconst Users = gql`\n  query MyQuery {\n    User {\n      id\n    }\n  }\n`;\nconst getManagerIDs = gql`\n  query MyQuery($id: Int!) {\n    User_by_pk(id: $id) {\n      id\n      manager_id\n    }\n  }\n`;\nconst GetTasks = gql`\n  query MyQuery($id: Int!) {\n    Task(where: { user_id: { _eq: $id } }) {\n      id\n      name\n      user_id\n      Description\n      completed\n      Project {\n        Title\n        id\n        status\n      }\n    }\n    Task_aggregate(\n      where: { user_id: { _eq: $id }, completed: { _eq: false } }\n    ) {\n      aggregate {\n        count\n      }\n    }\n  }\n`;\nconst Updatecompleted = gql`\n  mutation MyMutation($id: Int!) {\n    update_Task_by_pk(pk_columns: { id: $id }, _set: { completed: true }) {\n      completed\n    }\n  }\n`;\nconst InsertTask = gql`\n  mutation InsertTask(\n    $Description: String!\n    $name: String!\n    $from: timestamptz!\n    $user_id: Int!\n  ) {\n    insert_Task_one(\n      object: {\n        Description: $Description\n        name: $name\n        Date: $from\n        user_id: $user_id\n        completed: false\n      }\n    ) {\n      Description\n      Date\n      name\n      user_id\n    }\n  }\n`;\nexport const getStaticPaths = async () => {\n  const hasura = hasuraUserClient();\n  const {\n    User\n  } = await hasura.request(Users);\n  return {\n    paths: User.map(({\n      id\n    }) => ({\n      params: {\n        id: id.toString()\n      }\n    })),\n    fallback: false\n  };\n};\nexport const getStaticProps = async ({\n  params\n}) => {\n  const hasura = hasuraUserClient();\n  const {\n    id\n  } = params;\n  const initialData = await hasura.request(GetTasks, {\n    id\n  });\n  const manager = await hasura.request(getManagerIDs, {\n    id\n  });\n  return {\n    props: {\n      initialData,\n      manager\n    },\n    revalidate: 1\n  };\n};\nconst AddNotification = gql`\n  mutation MyMutation($manager_id: Int!) {\n    insert_notification_one(\n      object: {\n        name: \"Project Task\"\n        seen: false\n        description: \" tasks completed\"\n        user_id: $manager_id\n      }\n    ) {\n      seen\n      name\n      id\n      description\n      user_id\n    }\n  }\n`;\nexport default function Task({\n  initialData,\n  manager\n}) {\n  const hasura = hasuraUserClient();\n  const {\n    query\n  } = useRouter();\n  const {\n    id\n  } = query;\n  const {\n    0: acc,\n    1: setAcc\n  } = useState(true);\n  const {\n    data\n  } = useSWR([GetTasks, id], (query, id) => hasura.request(query), {\n    initialData,\n    revalidateOnMount: true\n  });\n\n  const view = () => {\n    if (data.Task_aggregate.aggregate.count === 0) {\n      setAcc(false);\n    } else alert(\"oh wait there buddy ,you didn't complete all the tasks , cmon you can do it ! finish it all !\");\n  };\n\n  const router = useRouter();\n  const {\n    handleSubmit,\n    register,\n    control,\n    errors,\n    formState: {\n      isSubmitting\n    }\n  } = useForm();\n\n  const Complete = async ({\n    id\n  }) => {\n    try {\n      const {\n        update_Task_by_pk\n      } = await hasura.request(Updatecompleted, {\n        id\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const refresh = () => {\n    window.location.reload();\n  };\n\n  const onSubmit = async ({\n    Description,\n    name\n  }) => {\n    try {\n      const {\n        insert_Task_one\n      } = await hasura.request(InsertTask, {\n        Description,\n        from,\n        name,\n        user_id: id\n      });\n      window.location.reload();\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const whencompleted = async () => {\n    const manager_id = manager.User_by_pk.manager_id;\n\n    if (confirm(\"want to move forward with your request ? \")) {\n      try {\n        const {\n          insert_notification\n        } = await hasura.request(AddNotification, {\n          manager_id\n        });\n        window.location.reload();\n      } catch (err) {\n        console.log(err);\n      }\n    } else return null;\n  };\n\n  return __jsx(\"div\", {\n    className: \"page-content-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 5\n    }\n  }, \" \", __jsx(\"div\", {\n    className: \"page-content\",\n    style: {\n      minHeight: 1500\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"profile-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 9\n    }\n  }, \" \", __jsx(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"col-md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }\n  }, \" \", data.Task_aggregate.aggregate.count === 0 ? __jsx(\"div\", {\n    className: \"col-md-9\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"card card-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 19\n    }\n  }, __jsx(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 21\n    }\n  }, \" \", __jsx(\"div\", {\n    className: \"portlet-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 23\n    }\n  }, \" \", __jsx(\"div\", {\n    className: \"col-md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 25\n    }\n  }, __jsx(\"div\", {\n    className: \"col-md-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 27\n    }\n  }, __jsx(\"div\", {\n    className: \"caption font-dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 29\n    }\n  }, __jsx(\"i\", {\n    className: \"icon-settings font-dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 31\n    }\n  }), __jsx(\"span\", {\n    className: \"caption-subject bold uppercase\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 31\n    }\n  }, \" \", \"Project tasks\")), \" \"), __jsx(\"div\", {\n    className: \"col-md-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 27\n    }\n  }, __jsx(\"div\", {\n    className: \"btn-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 29\n    }\n  }, \" \", __jsx(\"a\", {\n    onClick: () => refresh(),\n    id: \"sample_editable_1_2_new\",\n    className: \"btn sbold green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 31\n    }\n  }, \" \", \"refresh \", __jsx(\"i\", {\n    className: \"fa fa-refresh\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 41\n    }\n  })))), \" \", __jsx(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 27\n    }\n  }), \" \", __jsx(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 34\n    }\n  }))), \" \", __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 23\n    }\n  }, \"Nothing to show here , oh wait you already completed your tasks ! inform the \", __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 49\n    }\n  }, \" ADMIN\"), \" on your right side !\"), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 23\n    }\n  }, __jsx(\"img\", {\n    style: {\n      display: \"block\",\n      objectFit: \"cover\",\n      margin: \"auto\",\n      width: 1280,\n      height: 770\n    },\n    src: \"../nothing.png\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 25\n    }\n  }))))) : __jsx(\"div\", {\n    className: \"col-md-9\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"card card-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 19\n    }\n  }, __jsx(\"div\", {\n    className: \"card-body\",\n    style: {\n      paddingBottom: 270\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 21\n    }\n  }, \" \", __jsx(\"div\", {\n    className: \"portlet-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 23\n    }\n  }, __jsx(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 25\n    }\n  }, __jsx(\"div\", {\n    className: \"col-md-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 27\n    }\n  }, __jsx(\"div\", {\n    className: \"caption font-dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 29\n    }\n  }, __jsx(\"i\", {\n    className: \"icon-settings font-dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 31\n    }\n  }), __jsx(\"span\", {\n    className: \"caption-subject bold uppercase\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 31\n    }\n  }, \" \", \"Project tasks\")), \" \"), \" \", __jsx(\"div\", {\n    className: \"col-md-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 27\n    }\n  }, __jsx(\"div\", {\n    className: \"btn-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 29\n    }\n  }, \" \", __jsx(\"a\", {\n    onClick: () => refresh(),\n    id: \"sample_editable_1_2_new\",\n    className: \"btn sbold green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 31\n    }\n  }, \" \", \"refresh \", __jsx(\"i\", {\n    className: \"fa fa-refresh\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 41\n    }\n  })))))), \" \", __jsx(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 23\n    }\n  }), __jsx(\"ul\", {\n    className: \"nav nav-pills todo-nav\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 23\n    }\n  }, __jsx(\"li\", {\n    role: \"presentation\",\n    className: \"nav-item all-task active\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 25\n    }\n  }, __jsx(\"a\", {\n    href: \"#\",\n    className: \"nav-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 27\n    }\n  }, \"All\")), __jsx(\"li\", {\n    role: \"presentation\",\n    className: \"nav-item active-task\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 25\n    }\n  }, __jsx(\"a\", {\n    href: \"#\",\n    className: \"nav-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 27\n    }\n  }, \"Active\")), __jsx(\"li\", {\n    role: \"presentation\",\n    className: \"nav-item completed-task\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 25\n    }\n  }, __jsx(\"a\", {\n    href: \"#\",\n    className: \"nav-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 27\n    }\n  }, \"Completed\"))), \" \", __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 23\n    }\n  }, data.Task.map(({\n    id,\n    completed,\n    name,\n    Description,\n    Project\n  }) => {\n    return __jsx(\"div\", {\n      key: id,\n      className: \"todo-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 31\n      }\n    }, completed === false ? __jsx(\"div\", {\n      className: \"todo-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 35\n      }\n    }, __jsx(\"div\", {\n      className: \"checker\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 37\n      }\n    }, __jsx(\"span\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 39\n      }\n    }, __jsx(\"input\", {\n      name: \"Completed\",\n      type: \"checkbox\",\n      onChange: () => Complete({\n        id\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 41\n      }\n    }))), \" \", \"\", __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 37\n      }\n    }, name, \": \", Description), __jsx(\"div\", {\n      style: {\n        marginLeft: 23\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 37\n      }\n    }, __jsx(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 39\n      }\n    }, \" Project:\"), Project.Title)) : __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 35\n      }\n    }));\n  }), \" \")))), __jsx(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    className: \"col-md-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"portlet light \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 19\n    }\n  }, __jsx(\"div\", {\n    className: \"portlet-body\",\n    style: {\n      paddingBottom: 70\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 21\n    }\n  }, \" \", acc ? __jsx(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 25\n    }\n  }, \" \", __jsx(\"div\", {\n    className: \"portlet-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 27\n    }\n  }, __jsx(\"span\", {\n    className: \"caption-subject bold uppercase\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 29\n    }\n  }, \"inform manager\")), \" \", __jsx(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 27\n    }\n  }), __jsx(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 27\n    }\n  }, \"Completed? \", \"\", __jsx(\"button\", {\n    className: \" btn btn-circle blue btn-sm \",\n    type: \"submit\",\n    onClick: () => view(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 29\n    }\n  }, \"yes\")), __jsx(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 27\n    }\n  }, __jsx(\"button\", {\n    onClick: () => whencompleted(),\n    className: \"btn btn-primary btn-sm\",\n    type: \"submit\",\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 29\n    }\n  }, \" \", \"ping admin\")), __jsx(\"img\", {\n    style: {\n      display: \"block\",\n      objectFit: \"cover\",\n      width: \"auto\",\n      height: 200,\n      margin: \"auto\"\n    },\n    src: \"../yes.png\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 27\n    }\n  })) : __jsx(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 25\n    }\n  }, \" \", __jsx(\"div\", {\n    className: \"portlet-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 27\n    }\n  }, __jsx(\"span\", {\n    className: \"caption-subject bold uppercase\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 29\n    }\n  }, \"inform admin\")), \" \", __jsx(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 27\n    }\n  }), __jsx(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 27\n    }\n  }, \" \", \"Not yet? \", \"\", __jsx(\"button\", {\n    className: \" btn btn-circle red btn-sm \",\n    type: \"submit\",\n    onClick: () => dontshow(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 29\n    }\n  }, \" \", \"no\"), \" \"), __jsx(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 27\n    }\n  }, __jsx(\"button\", {\n    onClick: () => whencompleted(),\n    className: \"btn btn-primary btn-sm active\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 29\n    }\n  }, \" \", \"ping admin\")), \" \", __jsx(\"img\", {\n    style: {\n      display: \"block\",\n      objectFit: \"cover\",\n      width: \"auto\",\n      height: 200\n    },\n    src: \"../no.png\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 27\n    }\n  }))))), \" \", __jsx(\"div\", {\n    className: \"col-md-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"portlet light \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 19\n    }\n  }, __jsx(\"div\", {\n    className: \"portlet-body\",\n    style: {\n      paddingBottom: 70\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 21\n    }\n  }, \" \", data.Task_aggregate.aggregate.count === 0 ? __jsx(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 25\n    }\n  }, \" \", __jsx(\"div\", {\n    className: \"portlet-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 27\n    }\n  }, __jsx(\"span\", {\n    className: \"caption-subject bold uppercase\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 29\n    }\n  }, \"More info\")), \" \", __jsx(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 27\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 27\n    }\n  }, \"hohohoho you completed all the tasks !! congaaatz\"), __jsx(\"img\", {\n    style: {\n      display: \"block\",\n      objectFit: \"cover\",\n      width: \"auto\",\n      height: 200,\n      margin: \"auto\"\n    },\n    src: \"../yees.png\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 27\n    }\n  })) : __jsx(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 25\n    }\n  }, \" \", __jsx(\"div\", {\n    className: \"portlet-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 27\n    }\n  }, __jsx(\"span\", {\n    className: \"caption-subject bold uppercase\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 29\n    }\n  }, \"More info\")), \" \", __jsx(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 27\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 27\n    }\n  }, \"you still have\", \" \", __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 29\n    }\n  }, \" \", data.Task_aggregate.aggregate.count, \" \"), \" \", \"task to go !!! lets do it\"), \" \", __jsx(\"img\", {\n    style: {\n      display: \"block\",\n      objectFit: \"cover\",\n      width: \"auto\",\n      height: 200\n    },\n    src: \"../notyet.png\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 27\n    }\n  })))))))))));\n}","map":{"version":3,"sources":["C:/Users/msdtt/OneDrive/Documents/amai_hr_next_js_hasura/amai-hr/pages/Task/[id].js"],"names":["useSWR","mutate","useForm","gql","useRouter","hasuraUserClient","useState","from","Date","toISOString","Users","getManagerIDs","GetTasks","Updatecompleted","InsertTask","getStaticPaths","hasura","User","request","paths","map","id","params","toString","fallback","getStaticProps","initialData","manager","props","revalidate","AddNotification","Task","query","acc","setAcc","data","revalidateOnMount","view","Task_aggregate","aggregate","count","alert","router","handleSubmit","register","control","errors","formState","isSubmitting","Complete","update_Task_by_pk","err","console","log","refresh","window","location","reload","onSubmit","Description","name","insert_Task_one","user_id","whencompleted","manager_id","User_by_pk","confirm","insert_notification","minHeight","display","objectFit","margin","width","height","paddingBottom","completed","Project","marginLeft","Title","dontshow"],"mappings":"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","sourcesContent":["import useSWR, { mutate } from \"swr\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport gql from \"graphql-tag\";\r\nimport { useRouter } from \"next/router\";\r\nimport { hasuraUserClient } from \"../../lib/hasura-user-client\";\r\nimport { useState } from \"react\";\r\n\r\nconst from = new Date().toISOString();\r\nconst Users = gql`\r\n  query MyQuery {\r\n    User {\r\n      id\r\n    }\r\n  }\r\n`;\r\nconst getManagerIDs = gql`\r\n  query MyQuery($id: Int!) {\r\n    User_by_pk(id: $id) {\r\n      id\r\n      manager_id\r\n    }\r\n  }\r\n`;\r\nconst GetTasks = gql`\r\n  query MyQuery($id: Int!) {\r\n    Task(where: { user_id: { _eq: $id } }) {\r\n      id\r\n      name\r\n      user_id\r\n      Description\r\n      completed\r\n      Project {\r\n        Title\r\n        id\r\n        status\r\n      }\r\n    }\r\n    Task_aggregate(\r\n      where: { user_id: { _eq: $id }, completed: { _eq: false } }\r\n    ) {\r\n      aggregate {\r\n        count\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst Updatecompleted = gql`\r\n  mutation MyMutation($id: Int!) {\r\n    update_Task_by_pk(pk_columns: { id: $id }, _set: { completed: true }) {\r\n      completed\r\n    }\r\n  }\r\n`;\r\nconst InsertTask = gql`\r\n  mutation InsertTask(\r\n    $Description: String!\r\n    $name: String!\r\n    $from: timestamptz!\r\n    $user_id: Int!\r\n  ) {\r\n    insert_Task_one(\r\n      object: {\r\n        Description: $Description\r\n        name: $name\r\n        Date: $from\r\n        user_id: $user_id\r\n        completed: false\r\n      }\r\n    ) {\r\n      Description\r\n      Date\r\n      name\r\n      user_id\r\n    }\r\n  }\r\n`;\r\nexport const getStaticPaths = async () => {\r\n  const hasura = hasuraUserClient();\r\n\r\n  const { User } = await hasura.request(Users);\r\n\r\n  return {\r\n    paths: User.map(({ id }) => ({\r\n      params: {\r\n        id: id.toString(),\r\n      },\r\n    })),\r\n    fallback: false,\r\n  };\r\n};\r\nexport const getStaticProps = async ({ params }) => {\r\n  const hasura = hasuraUserClient();\r\n  const { id } = params;\r\n\r\n  const initialData = await hasura.request(GetTasks, { id });\r\n  const manager = await hasura.request(getManagerIDs, { id });\r\n\r\n  return {\r\n    props: {\r\n      initialData,\r\n      manager,\r\n    },\r\n    revalidate: 1,\r\n  };\r\n};\r\nconst AddNotification = gql`\r\n  mutation MyMutation($manager_id: Int!) {\r\n    insert_notification_one(\r\n      object: {\r\n        name: \"Project Task\"\r\n        seen: false\r\n        description: \" tasks completed\"\r\n        user_id: $manager_id\r\n      }\r\n    ) {\r\n      seen\r\n      name\r\n      id\r\n      description\r\n      user_id\r\n    }\r\n  }\r\n`;\r\nexport default function Task({ initialData, manager }) {\r\n  const hasura = hasuraUserClient();\r\n  const { query } = useRouter();\r\n  const { id } = query;\r\n  const [acc, setAcc] = useState(true);\r\n\r\n  const { data } = useSWR(\r\n    [GetTasks, id],\r\n\r\n    (query, id) => hasura.request(query),\r\n    {\r\n      initialData,\r\n      revalidateOnMount: true,\r\n    }\r\n  );\r\n  const view = () => {\r\n    if (data.Task_aggregate.aggregate.count === 0) {\r\n      setAcc(false);\r\n    } else\r\n      alert(\r\n        \"oh wait there buddy ,you didn't complete all the tasks , cmon you can do it ! finish it all !\"\r\n      );\r\n  };\r\n  const router = useRouter();\r\n  const {\r\n    handleSubmit,\r\n    register,\r\n    control,\r\n    errors,\r\n    formState: { isSubmitting },\r\n  } = useForm();\r\n  const Complete = async ({ id }) => {\r\n    try {\r\n      const { update_Task_by_pk } = await hasura.request(Updatecompleted, {\r\n        id,\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  const refresh = () => {\r\n    window.location.reload();\r\n  };\r\n  const onSubmit = async ({ Description, name }) => {\r\n    try {\r\n      const { insert_Task_one } = await hasura.request(InsertTask, {\r\n        Description,\r\n        from,\r\n        name,\r\n        user_id: id,\r\n      });\r\n\r\n      window.location.reload();\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  const whencompleted = async () => {\r\n    const manager_id = manager.User_by_pk.manager_id;\r\n    if (confirm(\"want to move forward with your request ? \")) {\r\n      try {\r\n        const { insert_notification } = await hasura.request(AddNotification, {\r\n          manager_id,\r\n        });\r\n        window.location.reload();\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    } else return null;\r\n  };\r\n  return (\r\n    <div className=\"page-content-wrapper\">\r\n      {\" \"}\r\n      <div className=\"page-content\" style={{ minHeight: 1500 }}>\r\n        <div className=\"profile-content\">\r\n          {\" \"}\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              {\" \"}\r\n              {data.Task_aggregate.aggregate.count === 0 ? (\r\n                <div className=\"col-md-9\">\r\n                  <div className=\"card card-white\">\r\n                    <div className=\"card-body\">\r\n                      {\" \"}\r\n                      <div className=\"portlet-title\">\r\n                        {\" \"}\r\n                        <div className=\"col-md-12\">\r\n                          <div className=\"col-md-10\">\r\n                            <div className=\"caption font-dark\">\r\n                              <i className=\"icon-settings font-dark\"></i>\r\n                              <span className=\"caption-subject bold uppercase\">\r\n                                {\" \"}\r\n                                Project tasks\r\n                              </span>\r\n                            </div>{\" \"}\r\n                          </div>\r\n                          <div className=\"col-md-2\">\r\n                            <div className=\"btn-group\">\r\n                              {\" \"}\r\n                              <a\r\n                                onClick={() => refresh()}\r\n                                id=\"sample_editable_1_2_new\"\r\n                                className=\"btn sbold green\"\r\n                              >\r\n                                {\" \"}\r\n                                refresh <i className=\"fa fa-refresh\"></i>\r\n                              </a>\r\n                            </div>\r\n                          </div>{\" \"}\r\n                          <hr /> <hr />\r\n                        </div>\r\n                      </div>{\" \"}\r\n                      <p>\r\n                        Nothing to show here , oh wait you already completed\r\n                        your tasks ! inform the <strong> ADMIN</strong> on your\r\n                        right side !\r\n                      </p>\r\n                      <div>\r\n                        <img\r\n                          style={{\r\n                            display: \"block\",\r\n                            objectFit: \"cover\",\r\n                            margin: \"auto\",\r\n                            width: 1280,\r\n                            height: 770,\r\n                          }}\r\n                          src=\"../nothing.png\"\r\n                        ></img>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <div className=\"col-md-9\">\r\n                  <div className=\"card card-white\">\r\n                    <div className=\"card-body\" style={{ paddingBottom: 270 }}>\r\n                      {\" \"}\r\n                      <div className=\"portlet-title\">\r\n                        <div className=\"row\">\r\n                          <div className=\"col-md-10\">\r\n                            <div className=\"caption font-dark\">\r\n                              <i className=\"icon-settings font-dark\"></i>\r\n                              <span className=\"caption-subject bold uppercase\">\r\n                                {\" \"}\r\n                                Project tasks\r\n                              </span>\r\n                            </div>{\" \"}\r\n                          </div>{\" \"}\r\n                          <div className=\"col-md-2\">\r\n                            <div className=\"btn-group\">\r\n                              {\" \"}\r\n                              <a\r\n                                onClick={() => refresh()}\r\n                                id=\"sample_editable_1_2_new\"\r\n                                className=\"btn sbold green\"\r\n                              >\r\n                                {\" \"}\r\n                                refresh <i className=\"fa fa-refresh\"></i>\r\n                              </a>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>{\" \"}\r\n                      <hr />\r\n                      <ul className=\"nav nav-pills todo-nav\">\r\n                        <li\r\n                          role=\"presentation\"\r\n                          className=\"nav-item all-task active\"\r\n                        >\r\n                          <a href=\"#\" className=\"nav-link\">\r\n                            All\r\n                          </a>\r\n                        </li>\r\n                        <li\r\n                          role=\"presentation\"\r\n                          className=\"nav-item active-task\"\r\n                        >\r\n                          <a href=\"#\" className=\"nav-link\">\r\n                            Active\r\n                          </a>\r\n                        </li>\r\n                        <li\r\n                          role=\"presentation\"\r\n                          className=\"nav-item completed-task\"\r\n                        >\r\n                          <a href=\"#\" className=\"nav-link\">\r\n                            Completed\r\n                          </a>\r\n                        </li>\r\n                      </ul>{\" \"}\r\n                      <div>\r\n                        {data.Task.map(\r\n                          ({ id, completed, name, Description, Project }) => {\r\n                            return (\r\n                              <div key={id} className=\"todo-list\">\r\n                                {completed === false ? (\r\n                                  <div className=\"todo-item\">\r\n                                    <div className=\"checker\">\r\n                                      <span className=\"\">\r\n                                        <input\r\n                                          name=\"Completed\"\r\n                                          type=\"checkbox\"\r\n                                          onChange={() => Complete({ id })}\r\n                                        />\r\n                                      </span>\r\n                                    </div>{\" \"}\r\n                                    {\"\"}\r\n                                    <span>\r\n                                      {name}: {Description}\r\n                                    </span>\r\n                                    <div style={{ marginLeft: 23 }}>\r\n                                      <strong> Project:</strong>\r\n                                      {Project.Title}\r\n                                    </div>\r\n                                    {/* <a\r\n                              href=\"javascript:void(0);\"\r\n                              className=\"float-right remove-todo-item\"\r\n                              onClick={() => deleteTodo({ id })}\r\n                            >\r\n                              <i className=\"icon-close\"></i>\r\n                            </a> */}\r\n                                  </div>\r\n                                ) : (\r\n                                  <div></div>\r\n                                )}\r\n                              </div>\r\n                            );\r\n                          }\r\n                        )}{\" \"}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n              <div className=\"col\">\r\n                <div className=\"col-md-3\">\r\n                  <div className=\"portlet light \">\r\n                    <div className=\"portlet-body\" style={{ paddingBottom: 70 }}>\r\n                      {\" \"}\r\n                      {acc ? (\r\n                        <div className=\"card-body\">\r\n                          {\" \"}\r\n                          <div className=\"portlet-title\">\r\n                            <span className=\"caption-subject bold uppercase\">\r\n                              inform manager\r\n                            </span>\r\n                          </div>{\" \"}\r\n                          <hr />\r\n                          <div className=\"col-md-6\">\r\n                            Completed? {\"\"}\r\n                            <button\r\n                              className=\" btn btn-circle blue btn-sm \"\r\n                              type=\"submit\"\r\n                              onClick={() => view()}\r\n                            >\r\n                              yes\r\n                            </button>\r\n                          </div>\r\n                          <div className=\"col-md-6\">\r\n                            <button\r\n                              onClick={() => whencompleted()}\r\n                              className=\"btn btn-primary btn-sm\"\r\n                              type=\"submit\"\r\n                              disabled\r\n                            >\r\n                              {\" \"}\r\n                              ping admin\r\n                            </button>\r\n                          </div>\r\n                          <img\r\n                            style={{\r\n                              display: \"block\",\r\n                              objectFit: \"cover\",\r\n                              width: \"auto\",\r\n                              height: 200,\r\n                              margin: \"auto\",\r\n                            }}\r\n                            src=\"../yes.png\"\r\n                          ></img>\r\n                        </div>\r\n                      ) : (\r\n                        <div className=\"card-body\">\r\n                          {\" \"}\r\n                          <div className=\"portlet-title\">\r\n                            <span className=\"caption-subject bold uppercase\">\r\n                              inform admin\r\n                            </span>\r\n                          </div>{\" \"}\r\n                          <hr />\r\n                          <div className=\"col-md-6\">\r\n                            {\" \"}\r\n                            Not yet? {\"\"}\r\n                            <button\r\n                              className=\" btn btn-circle red btn-sm \"\r\n                              type=\"submit\"\r\n                              onClick={() => dontshow()}\r\n                            >\r\n                              {\" \"}\r\n                              no\r\n                            </button>{\" \"}\r\n                          </div>\r\n                          <div className=\"col-md-6\">\r\n                            <button\r\n                              onClick={() => whencompleted()}\r\n                              className=\"btn btn-primary btn-sm active\"\r\n                              type=\"submit\"\r\n                            >\r\n                              {\" \"}\r\n                              ping admin\r\n                            </button>\r\n                          </div>{\" \"}\r\n                          <img\r\n                            style={{\r\n                              display: \"block\",\r\n                              objectFit: \"cover\",\r\n                              width: \"auto\",\r\n                              height: 200,\r\n                            }}\r\n                            src=\"../no.png\"\r\n                          ></img>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>{\" \"}\r\n                <div className=\"col-md-3\">\r\n                  <div className=\"portlet light \">\r\n                    <div className=\"portlet-body\" style={{ paddingBottom: 70 }}>\r\n                      {\" \"}\r\n                      {data.Task_aggregate.aggregate.count === 0 ? (\r\n                        <div className=\"card-body\">\r\n                          {\" \"}\r\n                          <div className=\"portlet-title\">\r\n                            <span className=\"caption-subject bold uppercase\">\r\n                              More info\r\n                            </span>\r\n                          </div>{\" \"}\r\n                          <hr />\r\n                          <div>\r\n                            hohohoho you completed all the tasks !! congaaatz\r\n                          </div>\r\n                          <img\r\n                            style={{\r\n                              display: \"block\",\r\n                              objectFit: \"cover\",\r\n                              width: \"auto\",\r\n                              height: 200,\r\n                              margin: \"auto\",\r\n                            }}\r\n                            src=\"../yees.png\"\r\n                          ></img>\r\n                        </div>\r\n                      ) : (\r\n                        <div className=\"card-body\">\r\n                          {\" \"}\r\n                          <div className=\"portlet-title\">\r\n                            <span className=\"caption-subject bold uppercase\">\r\n                              More info\r\n                            </span>\r\n                          </div>{\" \"}\r\n                          <hr />\r\n                          <div>\r\n                            you still have{\" \"}\r\n                            <strong>\r\n                              {\" \"}\r\n                              {data.Task_aggregate.aggregate.count}{\" \"}\r\n                            </strong>{\" \"}\r\n                            task to go !!! lets do it\r\n                          </div>{\" \"}\r\n                          <img\r\n                            style={{\r\n                              display: \"block\",\r\n                              objectFit: \"cover\",\r\n                              width: \"auto\",\r\n                              height: 200,\r\n                            }}\r\n                            src=\"../notyet.png\"\r\n                          ></img>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}