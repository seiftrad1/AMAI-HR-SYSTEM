{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\msdtt\\\\OneDrive\\\\Documents\\\\amai_hr_next_js_hasura\\\\amai-hr\\\\pages\\\\register.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useForm } from \"react-hook-form\";\nimport { hasuraAdminClient, gql } from \"../lib/hasura-admin-client\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport { useAuthState, useAuthDispatch } from \"../context/auth\";\nconst created_at = new Date().toISOString();\nconst GetUserByEmail = gql`\n  query GetUserByEmail($email: String!) {\n    User(where: { email: { _eq: $email } }) {\n      id\n    }\n  }\n`;\nconst GetUserByRole = gql`\n  query MyQuery {\n    User(where: { Role: { _eq: \"Manager\" } }) {\n      id\n      Name\n      Last_Name\n      email\n      Avatar\n    }\n  }\n`;\nexport const getStaticProps = async () => {\n  const Manager = await hasuraAdminClient.request(GetUserByRole);\n  return {\n    props: {\n      Manager\n    }\n  };\n};\nexport default function RegisterPage({\n  Manager\n}) {\n  const router = useRouter();\n  const {\n    isAuthenticated\n  } = useAuthState();\n  const {\n    register: createUser\n  } = useAuthDispatch();\n  const {\n    handleSubmit,\n    register,\n    errors,\n    formState: {\n      isSubmitting\n    },\n    setError\n  } = useForm({\n    defaultValues: {\n      save_last_seen: true\n    }\n  }); // useEffect(() => {\n  //   if (isAuthenticated) {\n  //     router.push(\"/\");\n  //   }\n  // }, [isAuthenticated]);\n  // if (isAuthenticated) return null;\n\n  console.log(Manager);\n\n  const onSubmit = async ({\n    name,\n    email,\n    password,\n    last_name,\n    domain,\n    phone_number,\n    confirmpassword,\n    manager_id\n  }) => {\n    const {\n      User: [foundUser]\n    } = await hasuraAdminClient.request(GetUserByEmail, {\n      email\n    });\n\n    if (foundUser) {\n      alert(\"Email already exists , please try another\");\n    } else if (password != confirmpassword) {\n      alert(\"Passwords don't match\");\n    } else {\n      try {\n        await createUser({\n          name,\n          email,\n          password,\n          last_name,\n          domain,\n          phone_number,\n          created_at,\n          manager_id\n        });\n        toast(\"Account created\");\n        window.location.reload();\n        await fetch(\"/api/emailhey\", {\n          method: \"POST\",\n          headers: {\n            \"content-type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            name,\n            email,\n            password\n          })\n        });\n      } catch ({\n        message\n      }) {\n        setError(\"email\", {\n          type: \"manual\",\n          message\n        });\n      }\n    }\n  };\n\n  const onSubmitManager = async ({\n    name,\n    email,\n    password,\n    last_name,\n    domain,\n    phone_number,\n    confirmpassword,\n    manager_id\n  }) => {\n    const {\n      User: [foundUser]\n    } = await hasuraAdminClient.request(GetUserByEmail, {\n      email\n    });\n\n    if (foundUser) {\n      alert(\"Email already exists , please try another\");\n    } else if (password != confirmpassword) {\n      alert(\"Passwords don't match\");\n    } else {\n      try {\n        await createUser({\n          name,\n          email,\n          password,\n          last_name,\n          domain,\n          phone_number,\n          created_at,\n          manager_id\n        });\n        toast(\"Account created\");\n        window.location.reload();\n        await fetch(\"/api/emailhey\", {\n          method: \"POST\",\n          headers: {\n            \"content-type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            name,\n            email,\n            password\n          })\n        });\n      } catch ({\n        message\n      }) {\n        setError(\"email\", {\n          type: \"manual\",\n          message\n        });\n      }\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: \"page-content-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"page-content\",\n    style: {\n      minHeight: 1500\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }\n  }, \" \", __jsx(\"div\", {\n    class: \"profile-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    class: \"col-md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 11\n    }\n  }, \" \", __jsx(\"div\", {\n    class: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }\n  }, \" \", __jsx(\"div\", {\n    class: \"portlet light \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    class: \"portlet-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 17\n    }\n  }, \" \", __jsx(\"h3\", {\n    class: \"font-green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 19\n    }\n  }, \"New AMAIER ! \"), \" \", __jsx(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 61\n    }\n  }), \" \", __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 19\n    }\n  }, __jsx(\"img\", {\n    style: {\n      display: \"block\",\n      objectFit: \"cover\",\n      width: 500,\n      height: 470,\n      margin: \"auto\"\n    },\n    src: \"../aam.jpg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 21\n    }\n  }))))), __jsx(\"div\", {\n    class: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    class: \"portlet light \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    class: \"portlet-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 17\n    }\n  }, __jsx(\"form\", {\n    class: \"register-form\",\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 19\n    }\n  }, __jsx(\"div\", {\n    class: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 21\n    }\n  }, \" \", __jsx(\"h3\", {\n    class: \"font-green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 23\n    }\n  }, \"Register new employee\"), \" \", __jsx(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 73\n    }\n  }), __jsx(\"div\", {\n    class: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 23\n    }\n  }, \" \", __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 25\n    }\n  }, \"First Name\"), \" \", __jsx(\"input\", {\n    class: \"form-control form-control-solid placeholder-no-fix\",\n    name: \"name\",\n    id: \"name\",\n    ref: register,\n    placeholder: \"name\",\n    size: \"10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 25\n    }\n  })), __jsx(\"div\", {\n    class: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 23\n    }\n  }, \" \", __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 25\n    }\n  }, \"Last Name\"), __jsx(\"input\", {\n    class: \"form-control form-control-solid placeholder-no-fix\",\n    name: \"last_name\",\n    id: \"last_name\",\n    ref: register,\n    placeholder: \"last name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 25\n    }\n  })), errors.name && __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 39\n    }\n  }, errors.name.message), __jsx(\"div\", {\n    class: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 23\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 25\n    }\n  }, \"Email\"), __jsx(\"input\", {\n    class: \"form-control form-control-solid placeholder-no-fix\",\n    type: \"email\",\n    name: \"email\",\n    id: \"email\",\n    ref: register({\n      required: \"You must provide a email.\",\n      pattern: {\n        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n        message: \"You must provide a valid email\"\n      }\n    }),\n    placeholder: \"Your email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 25\n    }\n  }), errors.email && __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 42\n    }\n  }, errors.email.message)), \" \", __jsx(\"div\", {\n    class: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 23\n    }\n  }, \" \", __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 25\n    }\n  }, \"Domain\"), __jsx(\"input\", {\n    class: \"form-control form-control-solid placeholder-no-fix\",\n    name: \"domain\",\n    id: \"domain\",\n    ref: register,\n    placeholder: \"domain\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 25\n    }\n  })), \" \", __jsx(\"div\", {\n    class: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 23\n    }\n  }, \" \", __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 25\n    }\n  }, \"Phone number\"), __jsx(\"input\", {\n    class: \"form-control form-control-solid placeholder-no-fix\",\n    name: \"phone_number\",\n    id: \"phone_number\",\n    ref: register,\n    placeholder: \"Phone number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 25\n    }\n  })), \" \", __jsx(\"div\", {\n    class: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 23\n    }\n  }, __jsx(\"select\", {\n    name: \"manager_id\",\n    id: \"manager_id\",\n    ref: register,\n    required: true,\n    className: \"form-control select2 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 25\n    }\n  }, Manager.User.map(({\n    id,\n    Name,\n    Avatar\n  }) => __jsx(React.Fragment, {\n    key: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 29\n    }\n  }, \" \", __jsx(\"option\", {\n    selected: true,\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 31\n    }\n  }, \"Select Manager\"), __jsx(\"option\", {\n    value: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 31\n    }\n  }, Name, \" \")))), \" \"), __jsx(\"div\", {\n    class: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 23\n    }\n  }, \" \", __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 25\n    }\n  }, \"Password\"), __jsx(\"input\", {\n    class: \"form-control form-control-solid placeholder-no-fix\",\n    type: \"password\",\n    name: \"password\",\n    id: \"password\",\n    ref: register({\n      required: \"You must provide a password.\",\n      minLength: {\n        message: \"Your password must be at least 6 characters\",\n        value: 6\n      }\n    }),\n    placeholder: \"Choose a password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 25\n    }\n  }), errors.password && __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 27\n    }\n  }, errors.password.message), \" \"), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 23\n    }\n  }, __jsx(\"label\", {\n    className: \"control-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 25\n    }\n  }, \"Confirm Password\"), __jsx(\"input\", {\n    name: \"confirmpassword\",\n    type: \"password\",\n    class: \"form-control form-control-solid placeholder-no-fix\",\n    ref: register({\n      required: \"You must confirm  the password.\",\n      minLength: {\n        message: \"Your password must be at least 6 characters\",\n        value: 6\n      }\n    }),\n    placeholder: \"Confirm password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 25\n    }\n  }), \" \"), __jsx(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 23\n    }\n  }), __jsx(\"div\", {\n    class: \"create-account\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 23\n    }\n  }, __jsx(\"button\", {\n    type: \"submit\",\n    disabled: isSubmitting,\n    class: \"btn green uppercase\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 25\n    }\n  }, \"Create account\"), \" \", __jsx(ToastContainer, {\n    hideProgressBar: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 25\n    }\n  })), \" \")))))), \" \")));\n}","map":{"version":3,"sources":["C:/Users/msdtt/OneDrive/Documents/amai_hr_next_js_hasura/amai-hr/pages/register.js"],"names":["useEffect","useRouter","useForm","hasuraAdminClient","gql","ToastContainer","toast","useAuthState","useAuthDispatch","created_at","Date","toISOString","GetUserByEmail","GetUserByRole","getStaticProps","Manager","request","props","RegisterPage","router","isAuthenticated","register","createUser","handleSubmit","errors","formState","isSubmitting","setError","defaultValues","save_last_seen","console","log","onSubmit","name","email","password","last_name","domain","phone_number","confirmpassword","manager_id","User","foundUser","alert","window","location","reload","fetch","method","headers","body","JSON","stringify","message","type","onSubmitManager","minHeight","display","objectFit","width","height","margin","required","pattern","value","map","id","Name","Avatar","minLength"],"mappings":"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","sourcesContent":["import { useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useForm } from \"react-hook-form\";\nimport { hasuraAdminClient, gql } from \"../lib/hasura-admin-client\";\nimport { ToastContainer, toast } from \"react-toastify\";\n\nimport { useAuthState, useAuthDispatch } from \"../context/auth\";\nconst created_at = new Date().toISOString();\nconst GetUserByEmail = gql`\n  query GetUserByEmail($email: String!) {\n    User(where: { email: { _eq: $email } }) {\n      id\n    }\n  }\n`;\nconst GetUserByRole = gql`\n  query MyQuery {\n    User(where: { Role: { _eq: \"Manager\" } }) {\n      id\n      Name\n      Last_Name\n      email\n      Avatar\n    }\n  }\n`;\nexport const getStaticProps = async () => {\n  const Manager = await hasuraAdminClient.request(GetUserByRole);\n\n  return {\n    props: {\n      Manager,\n    },\n  };\n};\nexport default function RegisterPage({ Manager }) {\n  const router = useRouter();\n  const { isAuthenticated } = useAuthState();\n  const { register: createUser } = useAuthDispatch();\n  const {\n    handleSubmit,\n    register,\n    errors,\n    formState: { isSubmitting },\n    setError,\n  } = useForm({ defaultValues: { save_last_seen: true } });\n\n  // useEffect(() => {\n  //   if (isAuthenticated) {\n  //     router.push(\"/\");\n  //   }\n  // }, [isAuthenticated]);\n\n  // if (isAuthenticated) return null;\n  console.log(Manager);\n  const onSubmit = async ({\n    name,\n    email,\n    password,\n    last_name,\n    domain,\n    phone_number,\n    confirmpassword,\n    manager_id,\n  }) => {\n    const {\n      User: [foundUser],\n    } = await hasuraAdminClient.request(GetUserByEmail, {\n      email,\n    });\n\n    if (foundUser) {\n      alert(\"Email already exists , please try another\");\n    } else if (password != confirmpassword) {\n      alert(\"Passwords don't match\");\n    } else {\n      try {\n        await createUser({\n          name,\n          email,\n          password,\n          last_name,\n          domain,\n          phone_number,\n          created_at,\n          manager_id,\n        });\n        toast(\"Account created\");\n        window.location.reload();\n\n        await fetch(\"/api/emailhey\", {\n          method: \"POST\",\n          headers: { \"content-type\": \"application/json\" },\n          body: JSON.stringify({\n            name,\n            email,\n            password,\n          }),\n        });\n      } catch ({ message }) {\n        setError(\"email\", {\n          type: \"manual\",\n          message,\n        });\n      }\n    }\n  };\n  const onSubmitManager = async ({\n    name,\n    email,\n    password,\n    last_name,\n    domain,\n    phone_number,\n    confirmpassword,\n    manager_id,\n  }) => {\n    const {\n      User: [foundUser],\n    } = await hasuraAdminClient.request(GetUserByEmail, {\n      email,\n    });\n\n    if (foundUser) {\n      alert(\"Email already exists , please try another\");\n    } else if (password != confirmpassword) {\n      alert(\"Passwords don't match\");\n    } else {\n      try {\n        await createUser({\n          name,\n          email,\n          password,\n          last_name,\n          domain,\n          phone_number,\n          created_at,\n          manager_id,\n        });\n        toast(\"Account created\");\n        window.location.reload();\n\n        await fetch(\"/api/emailhey\", {\n          method: \"POST\",\n          headers: { \"content-type\": \"application/json\" },\n          body: JSON.stringify({\n            name,\n            email,\n            password,\n          }),\n        });\n      } catch ({ message }) {\n        setError(\"email\", {\n          type: \"manual\",\n          message,\n        });\n      }\n    }\n  };\n  return (\n    <div className=\"page-content-wrapper\">\n      <div className=\"page-content\" style={{ minHeight: 1500 }}>\n        {\" \"}\n        <div class=\"profile-content\">\n          <div class=\"col-md-12\">\n            {\" \"}\n            <div class=\"col-md-6\">\n              {\" \"}\n              <div class=\"portlet light \">\n                <div class=\"portlet-body\">\n                  {\" \"}\n                  <h3 class=\"font-green\">New AMAIER ! </h3> <hr />{\" \"}\n                  <div>\n                    <img\n                      style={{\n                        display: \"block\",\n                        objectFit: \"cover\",\n                        width: 500,\n                        height: 470,\n                        margin: \"auto\",\n                      }}\n                      src=\"../aam.jpg\"\n                    ></img>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"col-md-6\">\n              <div class=\"portlet light \">\n                <div class=\"portlet-body\">\n                  <form class=\"register-form\" onSubmit={handleSubmit(onSubmit)}>\n                    <div class=\"content\">\n                      {\" \"}\n                      <h3 class=\"font-green\">Register new employee</h3> <hr />\n                      <div class=\"form-group\">\n                        {\" \"}\n                        <label>First Name</label>{\" \"}\n                        <input\n                          class=\"form-control form-control-solid placeholder-no-fix\"\n                          name=\"name\"\n                          id=\"name\"\n                          ref={register}\n                          placeholder=\"name\"\n                          size=\"10\"\n                        />\n                      </div>\n                      <div class=\"form-group\">\n                        {\" \"}\n                        <label>Last Name</label>\n                        <input\n                          class=\"form-control form-control-solid placeholder-no-fix\"\n                          name=\"last_name\"\n                          id=\"last_name\"\n                          ref={register}\n                          placeholder=\"last name\"\n                        />\n                      </div>\n                      {errors.name && <span>{errors.name.message}</span>}\n                      <div class=\"form-group\">\n                        <label>Email</label>\n                        <input\n                          class=\"form-control form-control-solid placeholder-no-fix\"\n                          type=\"email\"\n                          name=\"email\"\n                          id=\"email\"\n                          ref={register({\n                            required: \"You must provide a email.\",\n                            pattern: {\n                              value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                              message: \"You must provide a valid email\",\n                            },\n                          })}\n                          placeholder=\"Your email\"\n                        />\n                        {errors.email && <span>{errors.email.message}</span>}\n                      </div>{\" \"}\n                      <div class=\"form-group\">\n                        {\" \"}\n                        <label>Domain</label>\n                        <input\n                          class=\"form-control form-control-solid placeholder-no-fix\"\n                          name=\"domain\"\n                          id=\"domain\"\n                          ref={register}\n                          placeholder=\"domain\"\n                        />\n                      </div>{\" \"}\n                      <div class=\"form-group\">\n                        {\" \"}\n                        <label>Phone number</label>\n                        <input\n                          class=\"form-control form-control-solid placeholder-no-fix\"\n                          name=\"phone_number\"\n                          id=\"phone_number\"\n                          ref={register}\n                          placeholder=\"Phone number\"\n                        />\n                      </div>{\" \"}\n                      <div class=\"form-group\">\n                        <select\n                          name=\"manager_id\"\n                          id=\"manager_id\"\n                          ref={register}\n                          required\n                          className=\"form-control select2 \"\n                        >\n                          {Manager.User.map(({ id, Name, Avatar }) => (\n                            <React.Fragment key={id}>\n                              {\" \"}\n                              <option selected disabled>\n                                Select Manager\n                              </option>\n                              <option value={id}>{Name} </option>\n                            </React.Fragment>\n                          ))}\n                        </select>{\" \"}\n                      </div>\n                      <div class=\"form-group\">\n                        {\" \"}\n                        <label>Password</label>\n                        <input\n                          class=\"form-control form-control-solid placeholder-no-fix\"\n                          type=\"password\"\n                          name=\"password\"\n                          id=\"password\"\n                          ref={register({\n                            required: \"You must provide a password.\",\n                            minLength: {\n                              message:\n                                \"Your password must be at least 6 characters\",\n                              value: 6,\n                            },\n                          })}\n                          placeholder=\"Choose a password\"\n                        />\n                        {errors.password && (\n                          <span>{errors.password.message}</span>\n                        )}{\" \"}\n                      </div>\n                      <div className=\"form-group\">\n                        <label className=\"control-label\">\n                          Confirm Password\n                        </label>\n                        <input\n                          name=\"confirmpassword\"\n                          type=\"password\"\n                          class=\"form-control form-control-solid placeholder-no-fix\"\n                          ref={register({\n                            required: \"You must confirm  the password.\",\n                            minLength: {\n                              message:\n                                \"Your password must be at least 6 characters\",\n                              value: 6,\n                            },\n                          })}\n                          placeholder=\"Confirm password\"\n                        />{\" \"}\n                      </div>\n                      <hr />\n                      <div class=\"create-account\">\n                        <button\n                          type=\"submit\"\n                          disabled={isSubmitting}\n                          class=\"btn green uppercase\"\n                        >\n                          Create account\n                        </button>{\" \"}\n                        <ToastContainer hideProgressBar={true} />\n                      </div>{\" \"}\n                    </div>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>{\" \"}\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}